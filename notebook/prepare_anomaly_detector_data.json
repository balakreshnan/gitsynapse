{
	"name": "prepare_anomaly_detector_data",
	"properties": {
		"folder": {
			"name": "General"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "accsparkpools",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
				"name": "accsparkpools",
				"type": "Spark",
				"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import lit\n",
					"\n",
					"df = spark.createDataFrame([\n",
					"    (\"1972-01-01T00:00:00Z\", 826.0),\n",
					"    (\"1972-02-01T00:00:00Z\", 799.0),\n",
					"    (\"1972-03-01T00:00:00Z\", 890.0),\n",
					"    (\"1972-04-01T00:00:00Z\", 900.0),\n",
					"    (\"1972-05-01T00:00:00Z\", 766.0),\n",
					"    (\"1972-06-01T00:00:00Z\", 805.0),\n",
					"    (\"1972-07-01T00:00:00Z\", 821.0),\n",
					"    (\"1972-08-01T00:00:00Z\", 20000.0),\n",
					"    (\"1972-09-01T00:00:00Z\", 883.0),\n",
					"    (\"1972-10-01T00:00:00Z\", 898.0),\n",
					"    (\"1972-11-01T00:00:00Z\", 957.0),\n",
					"    (\"1972-12-01T00:00:00Z\", 924.0),\n",
					"    (\"1973-01-01T00:00:00Z\", 881.0),\n",
					"    (\"1973-02-01T00:00:00Z\", 837.0),\n",
					"    (\"1973-03-01T00:00:00Z\", 9000.0)\n",
					"], [\"timestamp\", \"value\"]).withColumn(\"group\", lit(\"series1\"))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"df.write.mode(\"overwrite\").saveAsTable(\"anomaly_detector_testing_data\")"
				],
				"execution_count": 2
			}
		]
	}
}