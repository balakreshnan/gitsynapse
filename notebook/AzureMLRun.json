{
	"name": "AzureMLRun",
	"properties": {
		"folder": {
			"name": "AzureML"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "accsparkpools",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
				"name": "accsparkpools",
				"type": "Spark",
				"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from azureml.core import Workspace"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"import azureml.core\n",
					"print(azureml.core.VERSION)"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\n",
					"\n",
					"sc = SparkSession.builder.getOrCreate()\n",
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\n",
					"tenantid = token_library.getConnectionStringAsMap(\"Keyvaultacc\").get(\"tenantid\")\n",
					"svcpid = token_library.getConnectionStringAsMap(\"Keyvaultacc\").get(\"svcpid\")\n",
					"scvpsecret = token_library.getConnectionStringAsMap(\"Keyvaultacc\").get(\"scvpsecret\")\n",
					"#connection_string = token_library.getConnectionString(\"Keyvaultacc\")\n",
					"print(tenantid)"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"source": [
					"from azureml.core.authentication import ServicePrincipalAuthentication\n",
					"\n",
					"sp = ServicePrincipalAuthentication(tenant_id=\"your-tenant-id\", # tenantID\n",
					"                                    service_principal_id=\"your-client-id\", # clientId\n",
					"                                    service_principal_password=\"your-client-secret\") # clientSecret"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"from azureml.core import Workspace\n",
					"\n",
					"ws = Workspace.get(name=\"ml-example\",\n",
					"                   auth=sp,\n",
					"                   subscription_id=\"your-sub-id\")\n",
					"ws.get_details()"
				],
				"execution_count": null
			}
		]
	}
}