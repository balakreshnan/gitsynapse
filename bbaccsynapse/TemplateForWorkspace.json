{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "bbaccsynapse"
		},
		"accbbstore_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'accbbstore'"
		},
		"accinput_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'accinput'"
		},
		"accml_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'accml'"
		},
		"accml1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'accml1'"
		},
		"accsqlsvr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'accsqlsvr'"
		},
		"adbtest1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'adbtest1'"
		},
		"advenworkLT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'advenworkLT'"
		},
		"bbaccsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bbaccsynapse-WorkspaceDefaultSqlServer'"
		},
		"bbaccsynapsesqlpool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bbaccsynapsesqlpool'"
		},
		"evtavroinput_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'evtavroinput'"
		},
		"iiotdata_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'iiotdata'"
		},
		"iiotstoragebb_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'iiotstoragebb'"
		},
		"serverlesssqlsvr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'serverlesssqlsvr'"
		},
		"tpchinput_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'tpchinput'"
		},
		"PauseDedicatedPools_properties_0_typeProperties": {
			"type": "object",
			"defaultValue": {}
		},
		"Resume_properties_0_typeProperties": {
			"type": "object",
			"defaultValue": {}
		},
		"ADLSgen2MI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://accsynapsestorage.dfs.core.windows.net"
		},
		"Keyvaultacc_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://accvault1.vault.azure.net/"
		},
		"PowerBIWorkspace1_properties_typeProperties_workspaceID": {
			"type": "string",
			"defaultValue": "9c096ec7-b70d-4df1-8b46-03d52259986d"
		},
		"PowerBIWorkspace1_properties_typeProperties_tenantID": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"accbbstore_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://accbbstore.dfs.core.windows.net"
		},
		"accbbstore_properties_typeProperties_accountKey": {
			"type": "string"
		},
		"accinput_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://accbbstore.dfs.core.windows.net"
		},
		"accinput_properties_typeProperties_accountKey": {
			"type": "string"
		},
		"accml_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "c46a9435-c957-4e6c-a0f4-b9a597984773"
		},
		"accml_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "accenture"
		},
		"accml_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "accml"
		},
		"accml_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "8a3ddafe-6dd6-48af-867e-d745232a1833"
		},
		"accml_properties_typeProperties_servicePrincipalKey": {
			"type": "string"
		},
		"accml_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"accml1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "c46a9435-c957-4e6c-a0f4-b9a597984773"
		},
		"accml1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "accenture"
		},
		"accml1_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "accml"
		},
		"accml1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "8a3ddafe-6dd6-48af-867e-d745232a1833"
		},
		"accml1_properties_typeProperties_servicePrincipalKey": {
			"type": "string"
		},
		"accml1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"accsqlsvr_properties_typeProperties_connectionString": {
			"type": "string"
		},
		"accvault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://accvault1.vault.azure.net/"
		},
		"accvault1bb_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://accvault1.vault.azure.net/"
		},
		"adbtest1_properties_typeProperties_domain": {
			"type": "string",
			"defaultValue": "https://adb-4433353838071267.7.azuredatabricks.net"
		},
		"adbtest1_properties_typeProperties_accessToken": {
			"type": "string"
		},
		"adbtest1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0527-180754-mogul636"
		},
		"advenworkLT_properties_typeProperties_connectionString": {
			"type": "string"
		},
		"bbaccsynapse-WorkspaceDefaultSqlServer_properties_typeProperties_connectionString": {
			"type": "string"
		},
		"bbaccsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://accsynapsestorage.dfs.core.windows.net"
		},
		"bbaccsynapsesqlpool_properties_typeProperties_connectionString": {
			"type": "string"
		},
		"bing-covid-19-data_properties_typeProperties_sasUri": {
			"type": "string",
			"defaultValue": "https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/bing_covid-19_data/latest/bing_covid-19_data.parquet?**********"
		},
		"cdmmfglogical_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://accsynapsestorage.dfs.core.windows.net"
		},
		"cdmmfgphysical_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://accsynapsestorage.dfs.core.windows.net"
		},
		"covid-tracking_properties_typeProperties_sasUri": {
			"type": "string",
			"defaultValue": "https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/covid_tracking/latest/covid_tracking.parquet?\"\"?**********"
		},
		"evtavroinput_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://iiotstoragebb.dfs.core.windows.net"
		},
		"evtavroinput_properties_typeProperties_accountKey": {
			"type": "string"
		},
		"iiotdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://iitostore.dfs.core.windows.net"
		},
		"iiotdata_properties_typeProperties_accountKey": {
			"type": "string"
		},
		"iiotstoragebb_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://iiotstoragebb.dfs.core.windows.net"
		},
		"iiotstoragebb_properties_typeProperties_accountKey": {
			"type": "string"
		},
		"mlopsdev_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "c46a9435-c957-4e6c-a0f4-b9a597984773"
		},
		"mlopsdev_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "mlops"
		},
		"mlopsdev_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "mlopsdev"
		},
		"mlopsdev_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "8a3ddafe-6dd6-48af-867e-d745232a1833"
		},
		"mlopsdev_properties_typeProperties_servicePrincipalKey": {
			"type": "object",
			"defaultValue": {
				"type": "AzureKeyVaultSecret",
				"store": {
					"referenceName": "accvault1",
					"type": "LinkedServiceReference"
				},
				"secretName": "scvpsecret"
			}
		},
		"mlopsdev_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"nyc_tlc_green_properties_typeProperties_sasUri": {
			"type": "string",
			"defaultValue": "https://azureopendatastorage.blob.core.windows.net/nyctlc/green?**********"
		},
		"nyc_tlc_yellow_properties_typeProperties_sasUri": {
			"type": "string",
			"defaultValue": "https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow?**********"
		},
		"sample-diabetes_properties_typeProperties_sasUri": {
			"type": "string",
			"defaultValue": "https://azureopendatastorage.blob.core.windows.net/mlsamples/diabetes?\"\"?**********"
		},
		"serverlesssqlsvr_properties_typeProperties_connectionString": {
			"type": "string"
		},
		"tpchinput_properties_typeProperties_connectionString": {
			"type": "string"
		},
		"us-decennial-census-county_properties_typeProperties_sasUri": {
			"type": "string",
			"defaultValue": "https://azureopendatastorage.blob.core.windows.net/censusdatacontainer/release/us_population_county/?**********"
		},
		"AutoResolveIntegrationRuntime_properties_typeProperties_computeProperties": {
			"type": "object",
			"defaultValue": {
				"location": "AutoResolve",
				"dataFlowProperties": {
					"computeType": "General",
					"coreCount": 8,
					"timeToLive": 0
				}
			}
		},
		"00 CREATE WWI TABLES_properties_content_currentConnection_name": {
			"type": "string"
		},
		"00 CREATE WWI TABLES_properties_content_currentConnection_type": {
			"type": "string"
		},
		"01 COPY INTO WWI TABLES_properties_content_currentConnection_name": {
			"type": "string"
		},
		"01 COPY INTO WWI TABLES_properties_content_currentConnection_type": {
			"type": "string"
		},
		"01 Create Trips Table_properties_content_currentConnection_name": {
			"type": "string"
		},
		"01 Create Trips Table_properties_content_currentConnection_type": {
			"type": "string"
		},
		"02 Create Models Table_properties_content_currentConnection_name": {
			"type": "string"
		},
		"02 Create Models Table_properties_content_currentConnection_type": {
			"type": "string"
		},
		"02 Set up RLS DDM_properties_content_currentConnection_name": {
			"type": "string"
		},
		"02 Set up RLS DDM_properties_content_currentConnection_type": {
			"type": "string"
		},
		"03 Example run for RLS DDM_properties_content_currentConnection_name": {
			"type": "string"
		},
		"03 Example run for RLS DDM_properties_content_currentConnection_type": {
			"type": "string"
		},
		"03 Register Model in SQL Pool_properties_content_currentConnection_name": {
			"type": "string"
		},
		"03 Register Model in SQL Pool_properties_content_currentConnection_type": {
			"type": "string"
		},
		"04 Load Trips table with data_properties_content_currentConnection_name": {
			"type": "string"
		},
		"04 Load Trips table with data_properties_content_currentConnection_type": {
			"type": "string"
		},
		"05 Data Exploration with SQLOD_properties_content_currentConnection_name": {
			"type": "string"
		},
		"05 Data Exploration with SQLOD_properties_content_currentConnection_type": {
			"type": "string"
		},
		"05 PREDICT In-Engine ML Scoring_properties_content_currentConnection_name": {
			"type": "string"
		},
		"05 PREDICT In-Engine ML Scoring_properties_content_currentConnection_type": {
			"type": "string"
		},
		"CDC_Synapseserverless_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"CDC_Synapseserverless_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"MIsqlpool_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"MIsqlpool_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"NYCYellow_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"NYCYellow_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"SQL script 1_properties_content_currentConnection_name": {
			"type": "string"
		},
		"SQL script 1_properties_content_currentConnection_type": {
			"type": "string"
		},
		"SQL script 2_properties_content_currentConnection_name": {
			"type": "string"
		},
		"SQL script 2_properties_content_currentConnection_type": {
			"type": "string"
		},
		"SQL script 3_properties_content_currentConnection_name": {
			"type": "string"
		},
		"SQL script 3_properties_content_currentConnection_type": {
			"type": "string"
		},
		"accsvctest_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"accsvctest_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"adbsqlmi_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"adbsqlmi_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"arcinsightnullquery_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"arcinsightnullquery_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"blobsizes_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"blobsizes_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"coviddata_properties_content_currentConnection_name": {
			"type": "string"
		},
		"coviddata_properties_content_currentConnection_type": {
			"type": "string"
		},
		"covidsql1_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"covidsql1_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"dailaggrsql_properties_content_currentConnection_name": {
			"type": "string"
		},
		"dailaggrsql_properties_content_currentConnection_type": {
			"type": "string"
		},
		"dailyaggr_properties_content_currentConnection_name": {
			"type": "string"
		},
		"dailyaggr_properties_content_currentConnection_type": {
			"type": "string"
		},
		"deltatest_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"deltatest_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"eventhubdatacheck_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"eventhubdatacheck_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"gcpnested_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"gcpnested_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"metadatasql_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"metadatasql_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"navistarsql_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"navistarsql_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"nycdata_properties_content_currentConnection_name": {
			"type": "string"
		},
		"nycdata_properties_content_currentConnection_type": {
			"type": "string"
		},
		"nyctaxisql_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"nyctaxisql_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"percept1_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"percept1_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"serverlesscovid19sql_properties_content_currentConnection_name": {
			"type": "string"
		},
		"serverlesscovid19sql_properties_content_currentConnection_type": {
			"type": "string"
		},
		"serverlessdbroles_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"serverlessdbroles_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"sqlmisetup_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"sqlmisetup_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"titanicsql_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"titanicsql_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"tpchschemaview_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"tpchschemaview_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"tpchsql11_properties_content_currentConnection_poolName": {
			"type": "string"
		},
		"tpchsql11_properties_content_currentConnection_databaseName": {
			"type": "string"
		},
		"03 Training NYC Taxi ONNX model_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"04 Analyze data with Scala_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"AMLtest1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"AzureMLRun_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"AzureMLSynapse_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"AzureMLTips_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"AzureMLtest_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"AzureSparkMLLib_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"Bankruptcy Prediction with LightGBM Classifier_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"Covid19AutoMLSpark_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Covid19AutoMLSparkOnnx_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Creating a managed Spark Table_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Data Exploration and ML Modeling - NYC taxi predict using Spark MLlib_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Data Exploration and ML Modeling_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3xlarge"
		},
		"Getting Started with Delta Lake_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Hyperspace Indexing_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark"
		},
		"NYC_holidays_Scala_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"ScalaSample1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"SparkBlobSize_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"SparkMLLib_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Synapse_delta_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"TextCogTest_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"Using Azure Open Datasets in Synapse_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"advlttest1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"advtablecreationparquet_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"anomalytestsvc_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"atstask1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark"
		},
		"blobread_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"coviddatasave_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"csharpdeltalake_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"diabetessample_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"eventhubtest_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"eventhubwrite_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"kafkaread5_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"navistartproductcatalog_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"nycyellow_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"nydatacopy_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"oriondataengg_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"paramtest_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"percept1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"prepare_anomaly_detector_data_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"pythonversioncheck_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark"
		},
		"sparkMITest_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3"
		},
		"test1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"tftest_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"tftest1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"tpchtest1_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "accsparkpools"
		},
		"winedatamodel_properties_bigDataPool_referenceName": {
			"type": "string",
			"defaultValue": "mlspark3xlarge"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ADBTraining')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "AzureMLTraining",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/ML/mlflowexp"
						},
						"linkedServiceName": {
							"referenceName": "adbtest1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adbtest1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AMLtest1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "AMLTest1",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "AMLtest1",
								"type": "NotebookReference"
							}
						}
					}
				],
				"parameters": {
					"devopstestparam": {
						"type": "string",
						"defaultValue": "sample1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/AMLtest1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Titanic_Pipeline_Notebook",
						"type": "AzureMLExecutePipeline",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"experimentName": "Titanic_Pipeline_Notebook",
							"mlPipelineId": "ddba840b-f94a-4faa-a658-9cb5e838f586"
						},
						"linkedServiceName": {
							"referenceName": "mlopsdev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/mlopsdev')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLTrain')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "NYCTaxiTrain",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "AzureMLtest",
								"type": "NotebookReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/AzureMLtest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Covid19AutoMLSpark')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Covid19AutoMLSpark",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Covid19AutoMLSpark",
								"type": "NotebookReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/Covid19AutoMLSpark')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/E2ETest')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ResumeSQLPool",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "NycYellow",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "dropdailyaggr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "nycyellow",
								"type": "NotebookReference"
							}
						}
					},
					{
						"name": "PauseSQLPool",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "NycYellow",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NYC_holidays_Scala",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PauseDedicatedPools",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dropdailyaggr",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "ResumeSQLPool",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "accsynapsepools",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[dbo].[dropdailyaggr]"
						}
					},
					{
						"name": "NYC_holidays_Scala",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "dropdailyaggr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "NYC_holidays_Scala",
								"type": "NotebookReference"
							}
						}
					},
					{
						"name": "AzureMLSpark",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "PauseSQLPool",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "AzureSparkMLLib",
								"type": "NotebookReference"
							}
						}
					},
					{
						"name": "SparkMLLib",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "AzureMLSpark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "SparkMLLib",
								"type": "NotebookReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Resume')]",
				"[concat(variables('workspaceId'), '/notebooks/nycyellow')]",
				"[concat(variables('workspaceId'), '/pipelines/PauseDedicatedPools')]",
				"[concat(variables('workspaceId'), '/sqlPools/accsynapsepools')]",
				"[concat(variables('workspaceId'), '/notebooks/NYC_holidays_Scala')]",
				"[concat(variables('workspaceId'), '/notebooks/AzureSparkMLLib')]",
				"[concat(variables('workspaceId'), '/notebooks/SparkMLLib')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ForEachTest')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select connstr from tblconnstr;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "accsqlinput",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Lookup1').output)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "connstr",
										"value": {
											"value": "@string(item().value)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "devopsjsoninput",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "adfoutput",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Dataflow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "ConnectionString",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"variables": {
					"connstr": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-19T22:38:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/accsqlinput')]",
				"[concat(variables('workspaceId'), '/datasets/devopsjsoninput')]",
				"[concat(variables('workspaceId'), '/datasets/adfoutput')]",
				"[concat(variables('workspaceId'), '/dataflows/ConnectionString')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYCYellowRank')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "NYCyellow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "cleanUpNYCYellowRank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NYCyellow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 48,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "cleanUpNYCYellowRank",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "NYCYellowRankDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/NYCyellow')]",
				"[concat(variables('workspaceId'), '/datasets/NYCYellowRankDS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NycYellow')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "nycyellow",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "nycyellow",
								"type": "NotebookReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/nycyellow')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PauseDedicatedPools')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "PauseSQLPools",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/sqlPools/accsynapsepools/pause?api-version=2019-06-01-preview",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": "[parameters('PauseDedicatedPools_properties_0_typeProperties')]",
							"body": {
								"sku": {
									"name": "DW100c"
								}
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Resume')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ResumeSQLPools",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/sqlPools/accsynapsepools/resume?api-version=2019-06-01-preview",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": "[parameters('Resume_properties_0_typeProperties')]",
							"body": {
								"sku": {
									"name": "DW100c"
								}
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TransformMovies')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "TransformMovies",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransformMovies",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesDB": {},
									"MoviesSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": {
									"value": "@pipeline().parameters.coreCount",
									"type": "Expression"
								},
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"parameters": {
					"coreCount": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/TransformMovies')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adventureworkstoparquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GetTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select Table_schema, Table_name from information_schema.tables \nwhere table_type ='BASE TABLE' \nand table_schema='SalesLT' ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "advworksLT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetTables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ExportToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ',item().Table_Schema,'.',item().Table_Name) ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "advworksLT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "advworksparquet",
											"type": "DatasetReference",
											"parameters": {
												"FileName": "@concat(item().Table_Schema,'_',item().Table_Name)"
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/advworksLT')]",
				"[concat(variables('workspaceId'), '/datasets/advworksparquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/avro64test')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "avrobase64df",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "avrotestbase64",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/avrotestbase64')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/avropipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "avrotest",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "avrotest",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/avrotest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/coviddata19')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "hashtest",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "hashtest",
								"type": "DataFlowReference",
								"datasetParameters": {
									"covid19input": {},
									"Sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"integrationRuntime": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/hashtest')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cp_tpchdata')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_tpch",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "tpchsf10000//"
							},
							{
								"name": "Destination",
								"value": "synapseroot/tpchdata/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 5
								}
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false,
							"dataIntegrationUnits": 32
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_psf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_psf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_psf')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_psf')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/devopsmt')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "devopsmt",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "devopsmt",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/devopsmt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/diabetespipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "diabetes",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "diabetessample",
								"type": "NotebookReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/diabetessample')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nyccpdata')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "cpnycdata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "accinput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "nycdataoutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-19T23:18:13Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/accinput')]",
				"[concat(variables('workspaceId'), '/datasets/nycdataoutput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/paramtest')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "paramtest",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "paramtest",
								"type": "NotebookReference"
							},
							"parameters": {
								"param_name": {
									"value": {
										"value": "@pipeline().parameters.param_name",
										"type": "Expression"
									},
									"type": "string"
								}
							}
						}
					}
				],
				"parameters": {
					"param_name": {
						"type": "string",
						"defaultValue": "fromintegrate"
					}
				},
				"variables": {
					"param_name": {
						"type": "String",
						"defaultValue": "fromvariable"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/paramtest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/test1pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "test1",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "test1",
								"type": "NotebookReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/test1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpschpipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "tpschdataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "tpchdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customer": {},
									"lineitem": {},
									"nation": {},
									"orders": {},
									"part": {},
									"partsupp": {},
									"region": {},
									"supplier": {},
									"tpchoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 48,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/tpchdataflow')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "41.avro",
						"folderPath": "avro",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {
					"type": "record",
					"name": "Microsoft.ServiceBus.Messaging.EventData",
					"fields": [
						{
							"name": "SequenceNumber",
							"type": "long"
						},
						{
							"name": "Offset",
							"type": "string"
						},
						{
							"name": "EnqueuedTimeUtc",
							"type": "string"
						},
						{
							"name": "SystemProperties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes"
								]
							}
						},
						{
							"name": "Properties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes",
									"null"
								]
							}
						},
						{
							"name": "Body",
							"type": [
								"null",
								"bytes"
							]
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_psf')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "tpchdata",
						"fileSystem": "synapseroot"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/JsonInput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "13456-2020.03.23.2-Sample2.json",
						"folderPath": "devopsinput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"AirID": {
							"type": "integer"
						},
						"ComponentName": {
							"type": "string"
						},
						"Version": {
							"type": "string"
						},
						"Environment": {
							"type": "array"
						},
						"Endpoints": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Platform": {
							"type": "string"
						},
						"Dependencies": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"version": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"sourceType": {
										"type": "string"
									},
									"source": {
										"type": "string"
									},
									"collectionSource": {
										"type": "string"
									},
									"meta": {
										"type": "object"
									},
									"custom": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Endpoints": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"InUse[Yes/No]": {
												"type": "boolean"
											}
										}
									}
								}
							}
						},
						"BuilderMeta": {
							"type": "object",
							"properties": {
								"MetadataBuilder": {
									"type": "object",
									"properties": {
										"version": {
											"type": "string"
										},
										"updated": {
											"type": "string"
										}
									}
								},
								"DateTime": {
									"type": "string"
								},
								"VSTS": {
									"type": "object",
									"properties": {
										"Build": {
											"type": "object",
											"properties": {
												"BUILD_REPOSITORY_URI": {
													"type": "string"
												},
												"BUILD_SOURCEBRANCHNAME": {
													"type": "string"
												},
												"BUILD_ARTIFACTSTAGINGDIRECTORY": {
													"type": "string"
												},
												"BUILD_BUILDID": {
													"type": "string"
												},
												"BUILD_BUILDNUMBER": {
													"type": "string"
												},
												"BUILD_BUILDURI": {
													"type": "string"
												},
												"BUILD_BINARIESDIRECTORY": {
													"type": "string"
												},
												"BUILD_DEFINITIONNAME": {
													"type": "string"
												},
												"BUILD_DEFINITIONVERSION": {
													"type": "string"
												},
												"BUILD_REASON": {
													"type": "string"
												},
												"BUILD_REPOSITORY_CLEAN": {
													"type": "string"
												},
												"BUILD_REPOSITORY_LOCALPATH": {
													"type": "string"
												},
												"BUILD_REPOSITORY_ID": {
													"type": "string"
												},
												"BUILD_REPOSITORY_NAME": {
													"type": "string"
												},
												"BUILD_REPOSITORY_PROVIDER": {
													"type": "string"
												}
											}
										},
										"Agent": {
											"type": "object",
											"properties": {
												"AGENT_BUILDDIRECTORY": {
													"type": "string"
												},
												"AGENT_HOMEDIRECTORY": {
													"type": "string"
												},
												"AGENT_ID": {
													"type": "string"
												},
												"AGENT_JOBNAME": {
													"type": "string"
												},
												"AGENT_JOBSTATUS": {
													"type": "string"
												},
												"AGENT_MACHINENAME": {
													"type": "string"
												},
												"AGENT_NAME": {
													"type": "string"
												},
												"AGENT_OS": {
													"type": "string"
												},
												"AGENT_OSARCHITECTURE": {
													"type": "string"
												},
												"AGENT_TOOLSDIRECTORY": {
													"type": "string"
												},
												"AGENT_WORKFOLDER": {
													"type": "string"
												}
											}
										},
										"System": {
											"type": "object",
											"properties": {
												"PIPELINE_WORKSPACE": {
													"type": "string"
												},
												"SYSTEM_COLLECTIONID": {
													"type": "string"
												},
												"SYSTEM_DEFAULTWORKINGDIRECTORY": {
													"type": "string"
												},
												"SYSTEM_DEFINITIONID": {
													"type": "string"
												},
												"SYSTEM_HOSTTYPE": {
													"type": "string"
												},
												"SYSTEM_PULLREQUEST_ISFORK": {
													"type": "string"
												},
												"SYSTEM_PULLREQUEST_PULLREQUESTID": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_PULLREQUESTNUMBER": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_SOURCEBRANCH": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_TARGETBRANCH": {
													"type": "null"
												},
												"SYSTEM_TASKDEFINITIONSURI": {
													"type": "string"
												},
												"SYSTEM_TASKDISPLAYNAME": {
													"type": "string"
												},
												"SYSTEM_TASKINSTANCEID": {
													"type": "string"
												},
												"SYSTEM_TASKINSTANCENAME": {
													"type": "string"
												},
												"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI": {
													"type": "string"
												},
												"SYSTEM_TEAMPROJECT": {
													"type": "string"
												},
												"SYSTEM_TEAMPROJECTID": {
													"type": "string"
												},
												"TASK_DISPLAYNAME": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"Eso": {
							"type": "array"
						},
						"Services": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									},
									"Version": {
										"type": "string"
									},
									"InUse": {
										"type": "boolean"
									},
									"collectionSource": {
										"type": "string"
									}
								}
							}
						},
						"Templates": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									},
									"Version": {
										"type": "string"
									},
									"InUse": {
										"type": "boolean"
									},
									"collectionSource": {
										"type": "string"
									}
								}
							}
						},
						"MRDR": {
							"type": "array"
						},
						"UnsupportedFiles": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Errors": {
							"type": "object",
							"properties": {
								"CRITICAL": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Source": {
												"type": "string"
											},
											"Time": {
												"type": "string"
											},
											"Message": {
												"type": "string"
											}
										}
									}
								},
								"ERROR": {
									"type": "array"
								},
								"WARNING": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Source": {
												"type": "string"
											},
											"Time": {
												"type": "string"
											},
											"Message": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"FilteredData": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"DataSource": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/JsonOutput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "devopsoutput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"AirID": {
							"type": "string"
						},
						"ComponentName": {
							"type": "string"
						},
						"Version": {
							"type": "string"
						},
						"Platform": {
							"type": "string"
						},
						"Source": {
							"type": "string"
						},
						"Time": {
							"type": "string"
						},
						"Message": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MoviesDBinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "moviesDB.csv",
						"folderPath": "moviesincoming",
						"fileSystem": "synapseroot"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MoviesSink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "moviesoutgoing",
						"fileSystem": "synapseroot"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYCYellowDS')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "nyctaxiyellow",
						"fileSystem": "synapseroot"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "vendorID",
						"type": "UTF8"
					},
					{
						"name": "tpepPickupDateTime",
						"type": "INT96"
					},
					{
						"name": "tpepDropoffDateTime",
						"type": "INT96"
					},
					{
						"name": "passengerCount",
						"type": "INT32"
					},
					{
						"name": "tripDistance",
						"type": "DOUBLE"
					},
					{
						"name": "puLocationId",
						"type": "UTF8"
					},
					{
						"name": "doLocationId",
						"type": "UTF8"
					},
					{
						"name": "startLon",
						"type": "DOUBLE"
					},
					{
						"name": "startLat",
						"type": "DOUBLE"
					},
					{
						"name": "endLon",
						"type": "DOUBLE"
					},
					{
						"name": "endLat",
						"type": "DOUBLE"
					},
					{
						"name": "rateCodeId",
						"type": "INT32"
					},
					{
						"name": "storeAndFwdFlag",
						"type": "UTF8"
					},
					{
						"name": "paymentType",
						"type": "UTF8"
					},
					{
						"name": "fareAmount",
						"type": "DOUBLE"
					},
					{
						"name": "extra",
						"type": "DOUBLE"
					},
					{
						"name": "mtaTax",
						"type": "DOUBLE"
					},
					{
						"name": "improvementSurcharge",
						"type": "UTF8"
					},
					{
						"name": "tipAmount",
						"type": "DOUBLE"
					},
					{
						"name": "tollsAmount",
						"type": "DOUBLE"
					},
					{
						"name": "totalAmount",
						"type": "DOUBLE"
					},
					{
						"name": "puYear",
						"type": "INT32"
					},
					{
						"name": "puMonth",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYCYellowRankDS')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "NYCYellowRank",
						"fileSystem": "synapseroot"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_psf')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "tpchinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "tpchsf10000"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/tpchinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aaccouputput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accsqlsvr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "connstr",
						"type": "varchar"
					},
					{
						"name": "inserttime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblconnstr1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accsqlsvr')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "nyctlc",
						"fileSystem": "opendataset"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accsqlinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accsqlsvr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "connstr",
						"type": "varchar"
					},
					{
						"name": "inserttime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblconnstr"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accsqlsvr')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adfoutput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "adfoutput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/advworksLT')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "advenworkLT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/advenworkLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/advworksparquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "@concat(item().Table_Schema,'_',item().Table_Name)"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{formatDateTime(utcnow(),'yyyy')}/@{formatDateTime(utcnow(),'MM')}/@{formatDateTime(utcnow(),'dd')}/@{concat(dataset().FileName,'_',formatDateTime(utcnow(),'yyyyMMdd'),'.parquet')} ",
							"type": "Expression"
						},
						"folderPath": "adventureworkslt",
						"fileSystem": "synapseroot"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/avroparseoutput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "evtavroinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "mxchipevtcsv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/evtavroinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/avroparseparquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "evtavroinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "mxchipevtcsv"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/evtavroinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/covid19input')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-a790a8ae-ed8c-4963-87e5-93fca39b7b70-c000.snappy.parquet",
						"fileSystem": "coviddata19"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "date",
						"type": "DATE"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "positive",
						"type": "INT32"
					},
					{
						"name": "negative",
						"type": "INT32"
					},
					{
						"name": "pending",
						"type": "INT_16"
					},
					{
						"name": "hospitalized_currently",
						"type": "INT_16"
					},
					{
						"name": "hospitalized_cumulative",
						"type": "INT32"
					},
					{
						"name": "in_icu_currently",
						"type": "INT_16"
					},
					{
						"name": "in_icu_cumulative",
						"type": "INT_16"
					},
					{
						"name": "on_ventilator_currently",
						"type": "INT_16"
					},
					{
						"name": "on_ventilator_cumulative",
						"type": "INT_16"
					},
					{
						"name": "recovered",
						"type": "INT32"
					},
					{
						"name": "data_quality_grade",
						"type": "UTF8"
					},
					{
						"name": "last_update_et",
						"type": "INT96"
					},
					{
						"name": "hash",
						"type": "UTF8"
					},
					{
						"name": "date_checked",
						"type": "UTF8"
					},
					{
						"name": "death",
						"type": "INT_16"
					},
					{
						"name": "hospitalized",
						"type": "INT32"
					},
					{
						"name": "total",
						"type": "INT32"
					},
					{
						"name": "total_test_results",
						"type": "INT32"
					},
					{
						"name": "pos_neg",
						"type": "INT32"
					},
					{
						"name": "fips",
						"type": "INT_16"
					},
					{
						"name": "death_increase",
						"type": "INT_16"
					},
					{
						"name": "hospitalized_increase",
						"type": "INT_16"
					},
					{
						"name": "negative_increase",
						"type": "INT32"
					},
					{
						"name": "positive_increase",
						"type": "INT_16"
					},
					{
						"name": "total_test_results_increase",
						"type": "INT32"
					},
					{
						"name": "fips_code",
						"type": "UTF8"
					},
					{
						"name": "iso_subdivision",
						"type": "UTF8"
					},
					{
						"name": "load_time",
						"type": "INT96"
					},
					{
						"name": "iso_country",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/coviddata19output')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "covid19output",
						"fileSystem": "coviddata19"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/csvout')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "avro",
						"fileSystem": "synapseroot"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/customerinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "CUSTOMER",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "C_CUSTKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "C_NAME",
						"type": "UTF8"
					},
					{
						"name": "C_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "C_NATIONKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "C_PHONE",
						"type": "UTF8"
					},
					{
						"name": "C_ACCTBAL",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "C_MKTSEGMENT",
						"type": "UTF8"
					},
					{
						"name": "C_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/defaultstore')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-a790a8ae-ed8c-4963-87e5-93fca39b7b70-c000.snappy.parquet",
						"folderPath": "coviddata19",
						"fileSystem": "coviddata19"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "date",
						"type": "DATE"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "positive",
						"type": "INT32"
					},
					{
						"name": "negative",
						"type": "INT32"
					},
					{
						"name": "pending",
						"type": "INT_16"
					},
					{
						"name": "hospitalized_currently",
						"type": "INT_16"
					},
					{
						"name": "hospitalized_cumulative",
						"type": "INT32"
					},
					{
						"name": "in_icu_currently",
						"type": "INT_16"
					},
					{
						"name": "in_icu_cumulative",
						"type": "INT_16"
					},
					{
						"name": "on_ventilator_currently",
						"type": "INT_16"
					},
					{
						"name": "on_ventilator_cumulative",
						"type": "INT_16"
					},
					{
						"name": "recovered",
						"type": "INT32"
					},
					{
						"name": "data_quality_grade",
						"type": "UTF8"
					},
					{
						"name": "last_update_et",
						"type": "INT96"
					},
					{
						"name": "hash",
						"type": "UTF8"
					},
					{
						"name": "date_checked",
						"type": "UTF8"
					},
					{
						"name": "death",
						"type": "INT_16"
					},
					{
						"name": "hospitalized",
						"type": "INT32"
					},
					{
						"name": "total",
						"type": "INT32"
					},
					{
						"name": "total_test_results",
						"type": "INT32"
					},
					{
						"name": "pos_neg",
						"type": "INT32"
					},
					{
						"name": "fips",
						"type": "INT_16"
					},
					{
						"name": "death_increase",
						"type": "INT_16"
					},
					{
						"name": "hospitalized_increase",
						"type": "INT_16"
					},
					{
						"name": "negative_increase",
						"type": "INT32"
					},
					{
						"name": "positive_increase",
						"type": "INT_16"
					},
					{
						"name": "total_test_results_increase",
						"type": "INT32"
					},
					{
						"name": "fips_code",
						"type": "UTF8"
					},
					{
						"name": "iso_subdivision",
						"type": "UTF8"
					},
					{
						"name": "load_time",
						"type": "INT96"
					},
					{
						"name": "iso_country",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dependcsv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "devopsoutput",
						"fileSystem": "synapseroot"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/deveopsjsonoutputdepend')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "devopsoutput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/devopsjsoninput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "13456-2020.03.23.2-Sample3.json",
						"folderPath": "devopsinput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"AirID": {
							"type": "integer"
						},
						"ComponentName": {
							"type": "string"
						},
						"Version": {
							"type": "string"
						},
						"Environment": {
							"type": "array"
						},
						"Endpoints": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Platform": {
							"type": "string"
						},
						"Dependencies": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"version": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"sourceType": {
										"type": "string"
									},
									"source": {
										"type": "string"
									},
									"collectionSource": {
										"type": "string"
									},
									"meta": {
										"type": "object"
									},
									"custom": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Endpoints": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"InUse[Yes/No]": {
												"type": "boolean"
											}
										}
									}
								}
							}
						},
						"BuilderMeta": {
							"type": "object",
							"properties": {
								"MetadataBuilder": {
									"type": "object",
									"properties": {
										"version": {
											"type": "string"
										},
										"updated": {
											"type": "string"
										}
									}
								},
								"DateTime": {
									"type": "string"
								},
								"VSTS": {
									"type": "object",
									"properties": {
										"Build": {
											"type": "object",
											"properties": {
												"BUILD_REPOSITORY_URI": {
													"type": "string"
												},
												"BUILD_SOURCEBRANCHNAME": {
													"type": "string"
												},
												"BUILD_ARTIFACTSTAGINGDIRECTORY": {
													"type": "string"
												},
												"BUILD_BUILDID": {
													"type": "string"
												},
												"BUILD_BUILDNUMBER": {
													"type": "string"
												},
												"BUILD_BUILDURI": {
													"type": "string"
												},
												"BUILD_BINARIESDIRECTORY": {
													"type": "string"
												},
												"BUILD_DEFINITIONNAME": {
													"type": "string"
												},
												"BUILD_DEFINITIONVERSION": {
													"type": "string"
												},
												"BUILD_REASON": {
													"type": "string"
												},
												"BUILD_REPOSITORY_CLEAN": {
													"type": "string"
												},
												"BUILD_REPOSITORY_LOCALPATH": {
													"type": "string"
												},
												"BUILD_REPOSITORY_ID": {
													"type": "string"
												},
												"BUILD_REPOSITORY_NAME": {
													"type": "string"
												},
												"BUILD_REPOSITORY_PROVIDER": {
													"type": "string"
												}
											}
										},
										"Agent": {
											"type": "object",
											"properties": {
												"AGENT_BUILDDIRECTORY": {
													"type": "string"
												},
												"AGENT_HOMEDIRECTORY": {
													"type": "string"
												},
												"AGENT_ID": {
													"type": "string"
												},
												"AGENT_JOBNAME": {
													"type": "string"
												},
												"AGENT_JOBSTATUS": {
													"type": "string"
												},
												"AGENT_MACHINENAME": {
													"type": "string"
												},
												"AGENT_NAME": {
													"type": "string"
												},
												"AGENT_OS": {
													"type": "string"
												},
												"AGENT_OSARCHITECTURE": {
													"type": "string"
												},
												"AGENT_TOOLSDIRECTORY": {
													"type": "string"
												},
												"AGENT_WORKFOLDER": {
													"type": "string"
												}
											}
										},
										"System": {
											"type": "object",
											"properties": {
												"PIPELINE_WORKSPACE": {
													"type": "string"
												},
												"SYSTEM_COLLECTIONID": {
													"type": "string"
												},
												"SYSTEM_DEFAULTWORKINGDIRECTORY": {
													"type": "string"
												},
												"SYSTEM_DEFINITIONID": {
													"type": "string"
												},
												"SYSTEM_HOSTTYPE": {
													"type": "string"
												},
												"SYSTEM_PULLREQUEST_ISFORK": {
													"type": "string"
												},
												"SYSTEM_PULLREQUEST_PULLREQUESTID": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_PULLREQUESTNUMBER": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_SOURCEBRANCH": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_TARGETBRANCH": {
													"type": "null"
												},
												"SYSTEM_TASKDEFINITIONSURI": {
													"type": "string"
												},
												"SYSTEM_TASKDISPLAYNAME": {
													"type": "string"
												},
												"SYSTEM_TASKINSTANCEID": {
													"type": "string"
												},
												"SYSTEM_TASKINSTANCENAME": {
													"type": "string"
												},
												"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI": {
													"type": "string"
												},
												"SYSTEM_TEAMPROJECT": {
													"type": "string"
												},
												"SYSTEM_TEAMPROJECTID": {
													"type": "string"
												},
												"TASK_DISPLAYNAME": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"Eso": {
							"type": "array"
						},
						"Services": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									},
									"Version": {
										"type": "string"
									},
									"InUse": {
										"type": "boolean"
									},
									"collectionSource": {
										"type": "string"
									}
								}
							}
						},
						"Templates": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									},
									"Version": {
										"type": "string"
									},
									"InUse": {
										"type": "boolean"
									},
									"collectionSource": {
										"type": "string"
									}
								}
							}
						},
						"MRDR": {
							"type": "array"
						},
						"UnsupportedFiles": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Errors": {
							"type": "object",
							"properties": {
								"CRITICAL": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Source": {
												"type": "string"
											},
											"Time": {
												"type": "string"
											},
											"Message": {
												"type": "string"
											}
										}
									}
								},
								"ERROR": {
									"type": "array"
								},
								"WARNING": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Source": {
												"type": "string"
											},
											"Time": {
												"type": "string"
											},
											"Message": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"FilteredData": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"DataSource": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/devopsoutput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "devopsoutput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"AirID": {
							"type": "string"
						},
						"ComponentName": {
							"type": "string"
						},
						"Version": {
							"type": "string"
						},
						"Platform": {
							"type": "string"
						},
						"Source": {
							"type": "string"
						},
						"Time": {
							"type": "string"
						},
						"Message": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/evtcaptureinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "evtavroinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "22.avro",
						"folderPath": "iiotinput/mxchipevet1/0/2021/05/20/23/46",
						"fileSystem": "mxchipevt"
					}
				},
				"schema": {
					"type": "record",
					"name": "Microsoft.ServiceBus.Messaging.EventData",
					"fields": [
						{
							"name": "SequenceNumber",
							"type": "long"
						},
						{
							"name": "Offset",
							"type": "string"
						},
						{
							"name": "EnqueuedTimeUtc",
							"type": "string"
						},
						{
							"name": "SystemProperties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes"
								]
							}
						},
						{
							"name": "Properties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes",
									"null"
								]
							}
						},
						{
							"name": "Body",
							"type": [
								"null",
								"bytes"
							]
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/evtavroinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/input')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factorder.csv",
						"folderPath": "WWI",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Order Key|City Key|Customer Key|Stock Item Key|Order Date Key|Picked Date Key|Salesperson Key|Picker Key|WWI Order ID|WWI Backorder ID|Description|Package|Quantity|Unit Price|Tax Rate|Total Excluding Tax|Tax Amount|Total Including Tax|Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/lineiteminput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "LINEITEM",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "L_ORDERKEY",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "L_PARTKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "L_SUPPKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "L_LINENUMBER",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "L_QUANTITY",
						"type": "DECIMAL",
						"precision": 4,
						"scale": 2
					},
					{
						"name": "L_EXTENDEDPRICE",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "L_DISCOUNT",
						"type": "DECIMAL",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "L_TAX",
						"type": "DECIMAL",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "L_RETURNFLAG",
						"type": "UTF8"
					},
					{
						"name": "L_LINESTATUS",
						"type": "UTF8"
					},
					{
						"name": "L_SHIPDATE",
						"type": "DATE"
					},
					{
						"name": "L_COMMITDATE",
						"type": "DATE"
					},
					{
						"name": "L_RECEIPTDATE",
						"type": "DATE"
					},
					{
						"name": "L_SHIPINSTRUCT",
						"type": "UTF8"
					},
					{
						"name": "L_SHIPMODE",
						"type": "UTF8"
					},
					{
						"name": "L_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/metainput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "13456-2020.03.23.2-Sample2.json",
						"folderPath": "devopsinput",
						"fileSystem": "synapseroot"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"AirID": {
							"type": "integer"
						},
						"ComponentName": {
							"type": "string"
						},
						"Version": {
							"type": "string"
						},
						"Environment": {
							"type": "array"
						},
						"Endpoints": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Platform": {
							"type": "string"
						},
						"Dependencies": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"version": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"sourceType": {
										"type": "string"
									},
									"source": {
										"type": "string"
									},
									"collectionSource": {
										"type": "string"
									},
									"meta": {
										"type": "object"
									},
									"custom": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Endpoints": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"InUse[Yes/No]": {
												"type": "boolean"
											}
										}
									}
								}
							}
						},
						"BuilderMeta": {
							"type": "object",
							"properties": {
								"MetadataBuilder": {
									"type": "object",
									"properties": {
										"version": {
											"type": "string"
										},
										"updated": {
											"type": "string"
										}
									}
								},
								"DateTime": {
									"type": "string"
								},
								"VSTS": {
									"type": "object",
									"properties": {
										"Build": {
											"type": "object",
											"properties": {
												"BUILD_REPOSITORY_URI": {
													"type": "string"
												},
												"BUILD_SOURCEBRANCHNAME": {
													"type": "string"
												},
												"BUILD_ARTIFACTSTAGINGDIRECTORY": {
													"type": "string"
												},
												"BUILD_BUILDID": {
													"type": "string"
												},
												"BUILD_BUILDNUMBER": {
													"type": "string"
												},
												"BUILD_BUILDURI": {
													"type": "string"
												},
												"BUILD_BINARIESDIRECTORY": {
													"type": "string"
												},
												"BUILD_DEFINITIONNAME": {
													"type": "string"
												},
												"BUILD_DEFINITIONVERSION": {
													"type": "string"
												},
												"BUILD_REASON": {
													"type": "string"
												},
												"BUILD_REPOSITORY_CLEAN": {
													"type": "string"
												},
												"BUILD_REPOSITORY_LOCALPATH": {
													"type": "string"
												},
												"BUILD_REPOSITORY_ID": {
													"type": "string"
												},
												"BUILD_REPOSITORY_NAME": {
													"type": "string"
												},
												"BUILD_REPOSITORY_PROVIDER": {
													"type": "string"
												}
											}
										},
										"Agent": {
											"type": "object",
											"properties": {
												"AGENT_BUILDDIRECTORY": {
													"type": "string"
												},
												"AGENT_HOMEDIRECTORY": {
													"type": "string"
												},
												"AGENT_ID": {
													"type": "string"
												},
												"AGENT_JOBNAME": {
													"type": "string"
												},
												"AGENT_JOBSTATUS": {
													"type": "string"
												},
												"AGENT_MACHINENAME": {
													"type": "string"
												},
												"AGENT_NAME": {
													"type": "string"
												},
												"AGENT_OS": {
													"type": "string"
												},
												"AGENT_OSARCHITECTURE": {
													"type": "string"
												},
												"AGENT_TOOLSDIRECTORY": {
													"type": "string"
												},
												"AGENT_WORKFOLDER": {
													"type": "string"
												}
											}
										},
										"System": {
											"type": "object",
											"properties": {
												"PIPELINE_WORKSPACE": {
													"type": "string"
												},
												"SYSTEM_COLLECTIONID": {
													"type": "string"
												},
												"SYSTEM_DEFAULTWORKINGDIRECTORY": {
													"type": "string"
												},
												"SYSTEM_DEFINITIONID": {
													"type": "string"
												},
												"SYSTEM_HOSTTYPE": {
													"type": "string"
												},
												"SYSTEM_PULLREQUEST_ISFORK": {
													"type": "string"
												},
												"SYSTEM_PULLREQUEST_PULLREQUESTID": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_PULLREQUESTNUMBER": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_SOURCEBRANCH": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI": {
													"type": "null"
												},
												"SYSTEM_PULLREQUEST_TARGETBRANCH": {
													"type": "null"
												},
												"SYSTEM_TASKDEFINITIONSURI": {
													"type": "string"
												},
												"SYSTEM_TASKDISPLAYNAME": {
													"type": "string"
												},
												"SYSTEM_TASKINSTANCEID": {
													"type": "string"
												},
												"SYSTEM_TASKINSTANCENAME": {
													"type": "string"
												},
												"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI": {
													"type": "string"
												},
												"SYSTEM_TEAMPROJECT": {
													"type": "string"
												},
												"SYSTEM_TEAMPROJECTID": {
													"type": "string"
												},
												"TASK_DISPLAYNAME": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"Eso": {
							"type": "array"
						},
						"Services": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									},
									"Version": {
										"type": "string"
									},
									"InUse": {
										"type": "boolean"
									},
									"collectionSource": {
										"type": "string"
									}
								}
							}
						},
						"Templates": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string"
									},
									"Version": {
										"type": "string"
									},
									"InUse": {
										"type": "boolean"
									},
									"collectionSource": {
										"type": "string"
									}
								}
							}
						},
						"MRDR": {
							"type": "array"
						},
						"UnsupportedFiles": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Errors": {
							"type": "object",
							"properties": {
								"CRITICAL": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Source": {
												"type": "string"
											},
											"Time": {
												"type": "string"
											},
											"Message": {
												"type": "string"
											}
										}
									}
								},
								"ERROR": {
									"type": "array"
								},
								"WARNING": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Source": {
												"type": "string"
											},
											"Time": {
												"type": "string"
											},
											"Message": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"FilteredData": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"DataSource": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nationinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "NATION",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "N_NATIONKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "N_NAME",
						"type": "UTF8"
					},
					{
						"name": "N_REGIONKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "N_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nycdataoutput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "nyctaxi"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/orderinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ORDERS",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "O_ORDERKEY",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "O_CUSTKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "O_ORDERSTATUS",
						"type": "UTF8"
					},
					{
						"name": "O_TOTALPRICE",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "O_ORDERDATE",
						"type": "DATE"
					},
					{
						"name": "O_ORDERPRIORITY",
						"type": "UTF8"
					},
					{
						"name": "O_CLERK",
						"type": "UTF8"
					},
					{
						"name": "O_SHIPPRIORITY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "O_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/output')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "tmp",
						"fileSystem": "synapseroot"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/partinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "PART",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "P_PARTKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "P_NAME",
						"type": "UTF8"
					},
					{
						"name": "P_MFGR",
						"type": "UTF8"
					},
					{
						"name": "P_BRAND",
						"type": "UTF8"
					},
					{
						"name": "P_TYPE",
						"type": "UTF8"
					},
					{
						"name": "P_SIZE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "P_CONTAINER",
						"type": "UTF8"
					},
					{
						"name": "P_RETAILPRICE",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "P_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/partsuppinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "PARTSUPP",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PS_PARTKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "PS_SUPPKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "PS_AVAILQTY",
						"type": "DECIMAL",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "PS_SUPPLYCOST",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "PS_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/regioninput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "REGION",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "R_REGIONKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "R_NAME",
						"type": "UTF8"
					},
					{
						"name": "R_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlcoviddata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accsqlsvr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ObservationDate",
						"type": "varchar"
					},
					{
						"name": "ProvinceState",
						"type": "varchar"
					},
					{
						"name": "CountryRegion",
						"type": "varchar"
					},
					{
						"name": "LastUpdate",
						"type": "varchar"
					},
					{
						"name": "Confirmed",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Deaths",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Recovered",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "coviddata"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accsqlsvr')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/supplierinput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accinput",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "SUPPLIER",
						"fileSystem": "tpchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "S_SUPPKEY",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 0
					},
					{
						"name": "S_NAME",
						"type": "UTF8"
					},
					{
						"name": "S_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "S_NATIONKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "S_PHONE",
						"type": "UTF8"
					},
					{
						"name": "S_ACCTBAL",
						"type": "DECIMAL",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "S_COMMENT",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accinput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tblconnsvr')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "accsqlsvr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "connstr",
						"type": "varchar"
					},
					{
						"name": "inserttime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblconnstr"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accsqlsvr')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpchoutput')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bbaccsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "tpchoutput",
						"fileSystem": "synapseroot"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/bbaccsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLSgen2MI')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSgen2MI_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Keyvaultacc')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Keyvaultacc_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PowerBIWorkspace1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "[parameters('PowerBIWorkspace1_properties_typeProperties_workspaceID')]",
					"tenantID": "[parameters('PowerBIWorkspace1_properties_typeProperties_tenantID')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accbbstore')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('accbbstore_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('accbbstore_properties_typeProperties_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accinput')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('accinput_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('accinput_properties_typeProperties_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accml')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('accml_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('accml_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('accml_properties_typeProperties_mlWorkspaceName')]",
					"servicePrincipalId": "[parameters('accml_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('accml_properties_typeProperties_servicePrincipalKey')]"
					},
					"tenant": "[parameters('accml_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accml1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('accml1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('accml1_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('accml1_properties_typeProperties_mlWorkspaceName')]",
					"servicePrincipalId": "[parameters('accml1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('accml1_properties_typeProperties_servicePrincipalKey')]"
					},
					"tenant": "[parameters('accml1_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accsqlsvr')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('accsqlsvr_properties_typeProperties_connectionString')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accvault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('accvault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accvault1bb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('accvault1bb_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adbtest1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "[parameters('adbtest1_properties_typeProperties_domain')]",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('adbtest1_properties_typeProperties_accessToken')]"
					},
					"existingClusterId": "[parameters('adbtest1_properties_typeProperties_existingClusterId')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/advenworkLT')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('advenworkLT_properties_typeProperties_connectionString')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bbaccsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('bbaccsynapse-WorkspaceDefaultSqlServer_properties_typeProperties_connectionString')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bbaccsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('bbaccsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bbaccsynapsesqlpool')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('bbaccsynapsesqlpool_properties_typeProperties_connectionString')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bing-covid-19-data')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('bing-covid-19-data_properties_typeProperties_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cdmmfglogical')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('cdmmfglogical_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cdmmfgphysical')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('cdmmfgphysical_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/covid-tracking')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('covid-tracking_properties_typeProperties_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/evtavroinput')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('evtavroinput_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('evtavroinput_properties_typeProperties_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/iiotdata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('iiotdata_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('iiotdata_properties_typeProperties_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/iiotstoragebb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('iiotstoragebb_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('iiotstoragebb_properties_typeProperties_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mlopsdev')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('mlopsdev_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('mlopsdev_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('mlopsdev_properties_typeProperties_mlWorkspaceName')]",
					"servicePrincipalId": "[parameters('mlopsdev_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": "[parameters('mlopsdev_properties_typeProperties_servicePrincipalKey')]",
					"tenant": "[parameters('mlopsdev_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nyc_tlc_green')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('nyc_tlc_green_properties_typeProperties_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nyc_tlc_yellow')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('nyc_tlc_yellow_properties_typeProperties_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sample-diabetes')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('sample-diabetes_properties_typeProperties_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/serverlesssqlsvr')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('serverlesssqlsvr_properties_typeProperties_connectionString')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpchinput')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('tpchinput_properties_typeProperties_connectionString')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/us-decennial-census-county')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('us-decennial-census-county_properties_typeProperties_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": "[parameters('AutoResolveIntegrationRuntime_properties_typeProperties_computeProperties')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ConnectionString')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tblconnsvr",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "aaccouputput",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tid as long,\n\t\tconnstr as string,\n\t\tinserttime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 derive(tmpconstr = connstr) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tconnstr = tmpconstr\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid as long,\n\t\tconnstr as string,\n\t\tinserttime as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/tblconnsvr')]",
				"[concat(variables('workspaceId'), '/datasets/aaccouputput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYCyellow')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "NYCYellowDS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NYCYellowRankDS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tvendorID as string,\n\t\ttpepPickupDateTime as timestamp,\n\t\ttpepDropoffDateTime as timestamp,\n\t\tpassengerCount as integer,\n\t\ttripDistance as double,\n\t\tpuLocationId as string,\n\t\tdoLocationId as string,\n\t\tstartLon as double,\n\t\tstartLat as double,\n\t\tendLon as double,\n\t\tendLat as double,\n\t\trateCodeId as integer,\n\t\tstoreAndFwdFlag as string,\n\t\tpaymentType as string,\n\t\tfareAmount as double,\n\t\textra as double,\n\t\tmtaTax as double,\n\t\timprovementSurcharge as string,\n\t\ttipAmount as double,\n\t\ttollsAmount as double,\n\t\ttotalAmount as double,\n\t\tpuYear as integer,\n\t\tpuMonth as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 select(mapColumn(\n\t\tvendorID,\n\t\ttpepPickupDateTime,\n\t\ttpepDropoffDateTime,\n\t\tpassengerCount,\n\t\ttripDistance,\n\t\tpuLocationId,\n\t\tdoLocationId,\n\t\tstartLon,\n\t\tstartLat,\n\t\tendLon,\n\t\tendLat,\n\t\trateCodeId,\n\t\tstoreAndFwdFlag,\n\t\tpaymentType,\n\t\tfareAmount,\n\t\textra,\n\t\tmtaTax,\n\t\timprovementSurcharge,\n\t\ttipAmount,\n\t\ttollsAmount,\n\t\ttotalAmount,\n\t\tpuYear,\n\t\tpuMonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(puYear,\n\t\tpuMonth),\n\tfareAmount = sum(fareAmount),\n\t\ttotalAmount = sum(totalAmount),\n\t\ttipAmount = sum(tipAmount),\n\tpartitionBy('hash', 1)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['yearmonthaggr'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/NYCYellowDS')]",
				"[concat(variables('workspaceId'), '/datasets/NYCYellowRankDS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TransformMovies')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesDBinput",
								"type": "DatasetReference"
							},
							"name": "MoviesDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MoviesSink",
								"type": "DatasetReference"
							},
							"name": "MoviesSink"
						}
					],
					"transformations": [
						{
							"name": "FilterYears"
						},
						{
							"name": "AggregateComedyRatings"
						}
					],
					"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MoviesDB\nMoviesDB filter(toInteger(year) >= 1910 && toInteger(year) <= 2000 && rlike(genres, 'Comedy')) ~> FilterYears\nFilterYears aggregate(groupBy(year),\n\tAverageComedyRating = avg(toInteger(Rating))) ~> AggregateComedyRatings\nAggregateComedyRatings sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MoviesSink"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MoviesDBinput')]",
				"[concat(variables('workspaceId'), '/datasets/MoviesSink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/avrotest')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Dataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "csvout",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tSequenceNumber as long,\n\t\tOffset as string,\n\t\tEnqueuedTimeUtc as string,\n\t\tSystemProperties as string,\n\t\tProperties as string,\n\t\tBody as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tSequenceNumber,\n\t\tOffset,\n\t\tEnqueuedTimeUtc,\n\t\tSystemProperties,\n\t\tProperties,\n\t\tBody\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(BodyNew = toString(Body)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['outputavro.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Dataset')]",
				"[concat(variables('workspaceId'), '/datasets/csvout')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/avrotestbase64')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "evtcaptureinput",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "avroparseparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Parse1"
						}
					],
					"script": "source(output(\n\t\tSequenceNumber as long,\n\t\tOffset as string,\n\t\tEnqueuedTimeUtc as string,\n\t\tSystemProperties as string,\n\t\tProperties as string,\n\t\tBody as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tSequenceNumber,\n\t\tOffset,\n\t\tEnqueuedTimeUtc,\n\t\tSystemProperties,\n\t\tProperties,\n\t\tBody\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(BodyNew = toString(Body)) ~> DerivedColumn1\nDerivedColumn1 parse(json = Body ? (applicationId as string,\n\t\tmessageSource as string,\n\t\tdeviceId as string,\n\t\tschema as string,\n\t\ttemplateId as string,\n\t\tenqueuedTime as string,\n\t\ttelemetry as (gyroscope as (z as float,\n\t\tx as float,\n\t\ty as float),\n\t\taccelerometer as (z as float,\n\t\tx as float,\n\t\ty as float),\n\t\thumidity as float,\n\t\ttemperature as float,\n\t\tpressure as float,\n\t\tmagnetometer as (z as float,\n\t\tx as float,\n\t\ty as float)),\n\t\tmessageProperties as (messageProp as string),\n\t\tenrichments as (userSpecifiedKey as string)),\n\tformat: 'json',\n\tdocumentForm: 'arrayOfDocuments') ~> Parse1\nParse1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['avrooutput.parquet'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/evtcaptureinput')]",
				"[concat(variables('workspaceId'), '/datasets/avroparseparquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/devopsmt')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "devopsjsoninput",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "deveopsjsonoutputdepend",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tAirID as string,\n\t\tComponentName as string,\n\t\tVersion as string,\n\t\tEnvironment as string[],\n\t\tEndpoints as string[],\n\t\tPlatform as string,\n\t\tDependencies as (name as string, version as string, type as string, sourceType as string, source as string, collectionSource as string, meta as ({} as string), custom as (Name as string, Endpoints as string[], {InUse[Yes/No]} as boolean))[],\n\t\tBuilderMeta as (MetadataBuilder as (version as string, updated as string), DateTime as string, VSTS as (Build as (BUILD_REPOSITORY_URI as string, BUILD_SOURCEBRANCHNAME as string, BUILD_ARTIFACTSTAGINGDIRECTORY as string, BUILD_BUILDID as string, BUILD_BUILDNUMBER as string, BUILD_BUILDURI as string, BUILD_BINARIESDIRECTORY as string, BUILD_DEFINITIONNAME as string, BUILD_DEFINITIONVERSION as string, BUILD_REASON as string, BUILD_REPOSITORY_CLEAN as string, BUILD_REPOSITORY_LOCALPATH as string, BUILD_REPOSITORY_ID as string, BUILD_REPOSITORY_NAME as string, BUILD_REPOSITORY_PROVIDER as string), Agent as (AGENT_BUILDDIRECTORY as string, AGENT_HOMEDIRECTORY as string, AGENT_ID as string, AGENT_JOBNAME as string, AGENT_JOBSTATUS as string, AGENT_MACHINENAME as string, AGENT_NAME as string, AGENT_OS as string, AGENT_OSARCHITECTURE as string, AGENT_TOOLSDIRECTORY as string, AGENT_WORKFOLDER as string), System as (PIPELINE_WORKSPACE as string, SYSTEM_COLLECTIONID as string, SYSTEM_DEFAULTWORKINGDIRECTORY as string, SYSTEM_DEFINITIONID as string, SYSTEM_HOSTTYPE as string, SYSTEM_PULLREQUEST_ISFORK as string, SYSTEM_PULLREQUEST_PULLREQUESTID as string, SYSTEM_PULLREQUEST_PULLREQUESTNUMBER as string, SYSTEM_PULLREQUEST_SOURCEBRANCH as string, SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI as string, SYSTEM_PULLREQUEST_TARGETBRANCH as string, SYSTEM_TASKDEFINITIONSURI as string, SYSTEM_TASKDISPLAYNAME as string, SYSTEM_TASKINSTANCEID as string, SYSTEM_TASKINSTANCENAME as string, SYSTEM_TEAMFOUNDATIONCOLLECTIONURI as string, SYSTEM_TEAMPROJECT as string, SYSTEM_TEAMPROJECTID as string, TASK_DISPLAYNAME as string))),\n\t\tEso as string[],\n\t\tServices as (Name as string, Version as string, InUse as boolean, collectionSource as string)[],\n\t\tTemplates as (Name as string, Version as string, InUse as boolean, collectionSource as string)[],\n\t\tMRDR as string[],\n\t\tUnsupportedFiles as string[],\n\t\tErrors as (CRITICAL as (Source as string, Time as string, Message as string)[], ERROR as string[], WARNING as (Source as string, Time as string, Message as string)[]),\n\t\tFilteredData as string[],\n\t\tDataSource as string[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source1\nsource1 select(mapColumn(\n\t\tAirID,\n\t\tComponentName,\n\t\tVersion,\n\t\tEnvironment,\n\t\tEndpoints,\n\t\tPlatform,\n\t\tDependencies,\n\t\tBuilderMeta,\n\t\tEso,\n\t\tServices,\n\t\tTemplates,\n\t\tMRDR,\n\t\tUnsupportedFiles,\n\t\tErrors,\n\t\tFilteredData,\n\t\tDataSource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['devopsoutput.json'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/devopsjsoninput')]",
				"[concat(variables('workspaceId'), '/datasets/deveopsjsonoutputdepend')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/hashtest')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "covid19input",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~>  covid19input",
							"dataset": {
								"referenceName": "covid19input",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "coviddata19output",
								"type": "DatasetReference"
							},
							"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared covid19input = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://accbbstore.dfs.core.windows.net/coviddata19/part-00000-a790a8ae-ed8c-4963-87e5-93fca39b7b70-c000.snappy.parquet\"),\r\n  Parquet = Parquet.Document(AdfDoc)\r\nin\r\n  Parquet;\r\nshared UserQuery = let\r\n  Source = covid19input,\r\n  #\"Added custom\" = Table.AddColumn(Source, \"NeHash\", each [hash])\r\nin\r\n  #\"Added custom\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/covid19input')]",
				"[concat(variables('workspaceId'), '/datasets/coviddata19output')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpchdataflow')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "customerinput",
								"type": "DatasetReference"
							},
							"name": "customer"
						},
						{
							"dataset": {
								"referenceName": "lineiteminput",
								"type": "DatasetReference"
							},
							"name": "lineitem"
						},
						{
							"dataset": {
								"referenceName": "nationinput",
								"type": "DatasetReference"
							},
							"name": "nation"
						},
						{
							"dataset": {
								"referenceName": "orderinput",
								"type": "DatasetReference"
							},
							"name": "orders"
						},
						{
							"dataset": {
								"referenceName": "partinput",
								"type": "DatasetReference"
							},
							"name": "part"
						},
						{
							"dataset": {
								"referenceName": "partsuppinput",
								"type": "DatasetReference"
							},
							"name": "partsupp"
						},
						{
							"dataset": {
								"referenceName": "regioninput",
								"type": "DatasetReference"
							},
							"name": "region"
						},
						{
							"dataset": {
								"referenceName": "supplierinput",
								"type": "DatasetReference"
							},
							"name": "supplier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tpchoutput",
								"type": "DatasetReference"
							},
							"name": "tpchoutput"
						}
					],
					"transformations": [
						{
							"name": "lineitemorder"
						},
						{
							"name": "customerorders"
						},
						{
							"name": "lineitempartsupp"
						},
						{
							"name": "partsuppsupplierpart"
						},
						{
							"name": "partsuppsupplier"
						},
						{
							"name": "nationregion"
						},
						{
							"name": "nationcustomer"
						},
						{
							"name": "linitemordercustomer"
						}
					],
					"script": "source(output(\n\t\tC_CUSTKEY as decimal(9,0),\n\t\tC_NAME as string,\n\t\tC_ADDRESS as string,\n\t\tC_NATIONKEY as decimal(38,0),\n\t\tC_PHONE as string,\n\t\tC_ACCTBAL as decimal(9,2),\n\t\tC_MKTSEGMENT as string,\n\t\tC_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> customer\nsource(output(\n\t\tL_ORDERKEY as decimal(18,0),\n\t\tL_PARTKEY as decimal(9,0),\n\t\tL_SUPPKEY as decimal(9,0),\n\t\tL_LINENUMBER as decimal(38,0),\n\t\tL_QUANTITY as decimal(4,2),\n\t\tL_EXTENDEDPRICE as decimal(9,2),\n\t\tL_DISCOUNT as decimal(12,2),\n\t\tL_TAX as decimal(12,2),\n\t\tL_RETURNFLAG as string,\n\t\tL_LINESTATUS as string,\n\t\tL_SHIPDATE as date,\n\t\tL_COMMITDATE as date,\n\t\tL_RECEIPTDATE as date,\n\t\tL_SHIPINSTRUCT as string,\n\t\tL_SHIPMODE as string,\n\t\tL_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> lineitem\nsource(output(\n\t\tN_NATIONKEY as decimal(38,0),\n\t\tN_NAME as string,\n\t\tN_REGIONKEY as decimal(38,0),\n\t\tN_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> nation\nsource(output(\n\t\tO_ORDERKEY as decimal(18,0),\n\t\tO_CUSTKEY as decimal(9,0),\n\t\tO_ORDERSTATUS as string,\n\t\tO_TOTALPRICE as decimal(9,2),\n\t\tO_ORDERDATE as date,\n\t\tO_ORDERPRIORITY as string,\n\t\tO_CLERK as string,\n\t\tO_SHIPPRIORITY as decimal(38,0),\n\t\tO_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> orders\nsource(output(\n\t\tP_PARTKEY as decimal(9,0),\n\t\tP_NAME as string,\n\t\tP_MFGR as string,\n\t\tP_BRAND as string,\n\t\tP_TYPE as string,\n\t\tP_SIZE as decimal(38,0),\n\t\tP_CONTAINER as string,\n\t\tP_RETAILPRICE as decimal(9,2),\n\t\tP_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> part\nsource(output(\n\t\tPS_PARTKEY as decimal(9,0),\n\t\tPS_SUPPKEY as decimal(9,0),\n\t\tPS_AVAILQTY as decimal(4,0),\n\t\tPS_SUPPLYCOST as decimal(9,2),\n\t\tPS_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> partsupp\nsource(output(\n\t\tR_REGIONKEY as decimal(38,0),\n\t\tR_NAME as string,\n\t\tR_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> region\nsource(output(\n\t\tS_SUPPKEY as decimal(9,0),\n\t\tS_NAME as string,\n\t\tS_ADDRESS as string,\n\t\tS_NATIONKEY as decimal(38,0),\n\t\tS_PHONE as string,\n\t\tS_ACCTBAL as decimal(9,2),\n\t\tS_COMMENT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> supplier\nlineitempartsupp, orders join(L_ORDERKEY == O_ORDERKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lineitemorder\ncustomer, orders join(C_CUSTKEY == O_CUSTKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> customerorders\nlineitem, partsupp join(L_SUPPKEY == PS_SUPPKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lineitempartsupp\npartsuppsupplier, part join(PS_PARTKEY == P_PARTKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> partsuppsupplierpart\npartsupp, supplier join(PS_SUPPKEY == S_SUPPKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> partsuppsupplier\nregion, nation join(R_REGIONKEY == N_REGIONKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> nationregion\nnation, customer join(N_NATIONKEY == C_NATIONKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> nationcustomer\nlineitemorder, customer join(O_CUSTKEY == C_CUSTKEY,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> linitemordercustomer\nlinitemordercustomer sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tpchoutput"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/customerinput')]",
				"[concat(variables('workspaceId'), '/datasets/lineiteminput')]",
				"[concat(variables('workspaceId'), '/datasets/nationinput')]",
				"[concat(variables('workspaceId'), '/datasets/orderinput')]",
				"[concat(variables('workspaceId'), '/datasets/partinput')]",
				"[concat(variables('workspaceId'), '/datasets/partsuppinput')]",
				"[concat(variables('workspaceId'), '/datasets/regioninput')]",
				"[concat(variables('workspaceId'), '/datasets/supplierinput')]",
				"[concat(variables('workspaceId'), '/datasets/tpchoutput')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/anomalysecret')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "adlssvc",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "anomalysecret"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/blobacckey')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "8a3ddafe-6dd6-48af-867e-d745232a1833",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Keyvaultacc",
							"type": "LinkedServiceReference"
						},
						"secretName": "accbbstore"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Keyvaultacc')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/oriondskey')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "8a3ddafe-6dd6-48af-867e-d745232a1833",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "oriondskey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/scvpsecret')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "8a3ddafe-6dd6-48af-867e-d745232a1833",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "scvpsecret"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/svcname')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "8a3ddafe-6dd6-48af-867e-d745232a1833",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "svcname"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapseeventhub')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "8a3ddafe-6dd6-48af-867e-d745232a1833",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "synapseeventhub"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tenantid')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "8a3ddafe-6dd6-48af-867e-d745232a1833",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "tenantid"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/textsecret')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "adlssvc",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "accvault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "textsecret"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/accvault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/00 CREATE WWI TABLES')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n/************************************ Create Tables*********************************/\n\n\ncreate schema wwi\nGo\n\n -- 1. Create [FactTransaction] table\n\nCREATE TABLE [wwi].[FactTransaction]\n( \n\t[TransactionKey] [bigint]  NOT NULL,\n\t[DateKey] [date]  NOT NULL,\n\t[CustomerKey] [int]  NULL,\n\t[BillToCustomerKey] [int]  NULL,\n\t[SupplierKey] [int]  NULL,\n\t[TransactionTypeKey] [int]  NOT NULL,\n\t[PaymentMethodKey] [int]  NULL,\n\t[WWICustomerTransaction ID] [int]  NULL,\n\t[WWISupplierTransaction ID] [int]  NULL,\n\t[WWIInvoiceID] [int]  NULL,\n\t[WWIPurchaseOrderID] [int]  NULL,\n\t[SupplierInvoiceNumber] [nvarchar](20)  NULL,\n\t[TotalExcludingTax] [decimal](18,2)  NOT NULL,\n\t[TaxAmount] [decimal](18,2)  NOT NULL,\n\t[TotalIncludingTax] [decimal](18,2)  NOT NULL,\n\t[OutstandingBalance] [decimal](18,2)  NOT NULL,\n\t[IsFinalized] [nvarchar](5)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [CustomerKey] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n-- 2. [FactStockHolding]\nCREATE TABLE [wwi].[FactStockHolding]\n( \n\t[StockHoldingKey] [bigint]  NOT NULL,\n\t[StockItemKey] [int]  NOT NULL,\n\t[QuantityOnHand] [int]  NOT NULL,\n\t[BinLocation] [nvarchar](20)  NOT NULL,\n\t[LastStocktakeQuantity] [int]  NOT NULL,\n\t[LastCostPrice] [decimal](18,2)  NOT NULL,\n\t[ReorderLevel] [int]  NOT NULL,\n\t[TargetStockLevel] [int]  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [StockItemKey] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n-- 3.  [FactSale]\nCREATE TABLE [wwi].[FactSale]\n( \n\t[SaleKey] [bigint]  NOT NULL,\n\t[CityKey] [int]  NOT NULL,\n\t[CustomerKey] [int]  NOT NULL,\n\t[BillToCustomerKey] [int]  NOT NULL,\n\t[StockItemKey] [int]  NOT NULL,\n\t[InvoiceDateKey] [date]  NOT NULL,\n\t[DeliveryDateKey] [date]  NULL,\n\t[SalespersonKey] [int]  NOT NULL,\n\t[WWIInvoiceID] [int]  NOT NULL,\n\t[Description] [nvarchar](100)  NOT NULL,\n\t[Package] [nvarchar](50)  NOT NULL,\n\t[Quantity] [int]  NOT NULL,\n\t[UnitPrice] [decimal](18,2)  NOT NULL,\n\t[TaxRate] [decimal](18,3)  NOT NULL,\n\t[TotalExcludingTax] [decimal](18,2)  NOT NULL,\n\t[TaxAmount] [decimal](18,2)  NOT NULL,\n\t[Profit] [decimal](18,2)  NOT NULL,\n\t[TotalIncludingTax] [decimal](18,2)  NOT NULL,\n\t[TotalDryItems] [int]  NOT NULL,\n\t[TotalChillerItems] [int]  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [CustomerKey] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n-- 4. [FactPurchase]\n\nCREATE TABLE [wwi].[FactPurchase]\n( \n\t[PurchaseKey] [bigint]  NOT NULL,\n\t[DateKey] [date]  NOT NULL,\n\t[SupplierKey] [int]  NOT NULL,\n\t[StockItemKey] [int]  NOT NULL,\n\t[WWIPurchaseOrderID] [int]  NULL,\n\t[OrderedOuters] [int]  NOT NULL,\n\t[OrderedQuantity] [int]  NOT NULL,\n\t[ReceivedOuters] [int]  NOT NULL,\n\t[Package] [nvarchar](50)  NOT NULL,\n\t[IsOrderFinalized] [nvarchar](5)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [SupplierKey] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n-- 5. [FactOrder]\nCREATE TABLE [wwi].[FactOrder]\n( \n\t[OrderKey] [bigint]  NOT NULL,\n\t[CityKey] [int]  NOT NULL,\n\t[CustomerKey] [int]  NOT NULL,\n\t[StockItemKey] [int]  NOT NULL,\n\t[OrderDateKey] [date]  NOT NULL,\n\t[PickedDateKey] [date]  NULL,\n\t[SalespersonKey] [int]  NOT NULL,\n\t[PickerKey] [int]  NULL,\n\t[WWIOrderID] [int]  NOT NULL,\n\t[WWIBackorderID] [int]  NULL,\n\t[Description] [nvarchar](100)  NOT NULL,\n\t[Package] [nvarchar](50)  NOT NULL,\n\t[Quantity] [int]  NOT NULL,\n\t[UnitPrice] [decimal](18,2)  NOT NULL,\n\t[TaxRate] [decimal](18,3)  NOT NULL,\n\t[TotalExcludingTax] [decimal](18,2)  NOT NULL,\n\t[TaxAmount] [decimal](18,2)  NOT NULL,\n\t[TotalIncludingTax] [decimal](18,2)  NOT NULL,\n\t[LineageKey] [int]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [CustomerKey] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--6. [FactMovement]\nCREATE TABLE [wwi].[FactMovement]\n( \n\t[MovementKey] [bigint]  NOT NULL,\n\t[DateKey] [date]  NOT NULL,\n\t[StockItemKey] [int]  NOT NULL,\n\t[CustomerKey] [int]  NULL,\n\t[SupplierKey] [int]  NULL,\n\t[TransactionTypeKey] [int]  NOT NULL,\n\t[WWIStockItemTransactionID] [int]  NOT NULL,\n\t[WWIInvoiceID] [int]  NULL,\n\t[WWIPurchaseOrderID] [int]  NULL,\n\t[Quantity] [int]  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [CustomerKey] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--7. [DimTransactionType]\nCREATE TABLE [wwi].[DimTransactionType]\n( \n\t[TransactionTypeKey] [int]  NOT NULL,\n\t[WWITransactionTypeID] [int]  NOT NULL,\n\t[TransactionType] [nvarchar](50)  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--8. DimSupplier\nCREATE TABLE [wwi].[DimSupplier]\n( \n\t[SupplierKey] [int]  NOT NULL,\n\t[WWISupplierID] [int]  NOT NULL,\n\t[Supplier] [nvarchar](100)  NOT NULL,\n\t[Category] [nvarchar](50)  NOT NULL,\n\t[PrimaryContact] [nvarchar](50)  NOT NULL,\n\t[SupplierReference] [nvarchar](20)  NULL,\n\t[PaymentDays] [int]  NOT NULL,\n\t[PostalCode] [nvarchar](10)  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--9. [DimStockItem]\n\nCREATE TABLE [wwi].[DimStockItem]\n( \n\t[StockItemKey] [int]  NOT NULL,\n\t[WWIStockItemID] [int]  NOT NULL,\n\t[Stock Item] [nvarchar](100)  NOT NULL,\n\t[Color] [nvarchar](20)  NOT NULL,\n\t[SellingPackage] [nvarchar](50)  NOT NULL,\n\t[Buying Package] [nvarchar](50)  NOT NULL,\n\t[Brand] [nvarchar](50)  NOT NULL,\n\t[Size] [nvarchar](20)  NOT NULL,\n\t[LeadTimeDays] [int]  NOT NULL,\n\t[QuantityPerOuter] [int]  NOT NULL,\n\t[IsChillerStock] [nvarchar](5)  NOT NULL,\n\t[Barcode] [nvarchar](50)  NULL,\n\t[TaxRate] [decimal](18,3)  NOT NULL,\n\t[UnitPrice] [decimal](18,2)  NOT NULL,\n\t[RecommendedRetailPrice] [decimal](18,2)  NULL,\n\t[TypicalWeightPerUnit] [decimal](18,3)  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--10. DimPaymentMethod\nCREATE TABLE [wwi].[DimPaymentMethod]\n( \n\t[PaymentMethodKey] [int]  NOT NULL,\n\t[WWIPaymentMethodID] [int]  NOT NULL,\n\t[PaymentMethod] [nvarchar](50)  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--11. [DimEmployee]\nCREATE TABLE [wwi].[DimEmployee]\n( \n\t[EmployeeKey] [int]  NOT NULL,\n\t[WWIEmployeeID] [int]  NOT NULL,\n\t[Employee] [nvarchar](50)  NOT NULL,\n\t[PreferredName] [nvarchar](50)  NOT NULL,\n\t[IsSalesperson] [nvarchar](5)  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--12. DimDate\nCREATE TABLE [wwi].[DimDate]\n( \n\t[Date] [date]  NOT NULL,\n\t[DayNumber] [int]  NOT NULL,\n\t[Day] [nvarchar](10)  NOT NULL,\n\t[Month] [nvarchar](10)  NOT NULL,\n\t[ShortMonth] [nvarchar](3)  NOT NULL,\n\t[CalendarMonthNumber] [int]  NOT NULL,\n\t[CalendarMonthLabel] [nvarchar](20)  NOT NULL,\n\t[CalendarYear] [int]  NOT NULL,\n\t[CalendarYearLabel] [nvarchar](10)  NOT NULL,\n\t[FiscalMonthNumber] [int]  NOT NULL,\n\t[FiscalMonthLabel] [nvarchar](20)  NOT NULL,\n\t[FiscalYear] [int]  NOT NULL,\n\t[FiscalYearLabel] [nvarchar](10)  NOT NULL,\n\t[ISOWeekNumber] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--13. [DimCity]\nCREATE TABLE [wwi].[DimCity]\n( \n\t[CityKey] [int]  NOT NULL,\n\t[WWICityID] [int]  NOT NULL,\n\t[City] [nvarchar](50)  NOT NULL,\n\t[StateProvince] [nvarchar](50)  NOT NULL,\n\t[Country] [nvarchar](60)  NOT NULL,\n\t[Continent] [nvarchar](30)  NOT NULL,\n\t[SalesTerritory] [nvarchar](50)  NOT NULL,\n\t[Region] [nvarchar](30)  NOT NULL,\n\t[Subregion] [nvarchar](30)  NOT NULL,\n\t[LatestRecordedPopulation] [bigint]  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--14. [DimCustomer]\nCREATE TABLE [wwi].[DimCustomer]\n( \n\t[CustomerKey] [int]  NOT NULL,\n\t[WWICustomerID] [int]  NOT NULL,\n\t[Customer] [nvarchar](100)  NOT NULL,\n\t[BillToCustomer] [nvarchar](100)  NOT NULL,\n\t[Category] [nvarchar](50)  NOT NULL,\n\t[BuyingGroup] [nvarchar](50)  NOT NULL,\n\t[PrimaryContact] [nvarchar](50)  NOT NULL,\n\t[PostalCode] [nvarchar](10)  NOT NULL,\n\t[ValidFrom] [datetime2](7)  NOT NULL,\n\t[ValidTo] [datetime2](7)  NOT NULL,\n\t[LineageKey] [int]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = REPLICATE,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n--15. [PostalCodes]\nCREATE TABLE [wwi].[PostalCodes]\n( \n\t[City] [nvarchar](30)  NULL,\n\t[State] [nvarchar](30)  NULL,\n\t[Zip] [nvarchar](10)  NULL,\n\t[Latitude] [nvarchar](30)  NULL,\n\t[Longitude] [nvarchar](30)  NULL,\n\t[Timezone] [nvarchar](5)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n --16. Employee PII Data\n CREATE TABLE [wwi].[EmployeePIIData]\n( \n\t[Id] [int]  NULL,\n\t[FirstName] [nvarchar](30)  NULL,\n\t[LastName] [nvarchar](30)  NULL,\n\t[Company] [nvarchar](30)  NULL,\n\t[Address] [nvarchar](30)  NULL,\n\t[City] [nvarchar](30)  NULL,\n\t[County] [nvarchar](30)  NULL,\n\t[State] [nvarchar](10)  NULL,\n\t[Phone] [varchar](100)  NULL,\n\t[email] [varchar](100)  NULL,\n\t[SSN] [nvarchar](30)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('00 CREATE WWI TABLES_properties_content_currentConnection_name')]",
						"type": "[parameters('00 CREATE WWI TABLES_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01 COPY INTO WWI TABLES')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n\n/****************** Load data into SQL Pool table using COPY INTO ***********************/\n\n-- 1. FactTransaction\nCOPY INTO wwi.FactTransaction\n(TransactionKey 1, DateKey 2, CustomerKey 3, BillToCustomerKey 4, SupplierKey 5, TransactionTypeKey 6, PaymentMethodKey 7, [WWICustomerTransaction ID] 8, [WWISupplierTransaction ID] 9, WWIInvoiceID 10, WWIPurchaseOrderID 11, SupplierInvoiceNumber 12, TotalExcludingTax 13, TaxAmount 14, TotalIncludingTax 15, OutstandingBalance 16, IsFinalized 17, LineageKey 18)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-facttransaction.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n\n-- 2. FactStockHolding\n\nCOPY INTO wwi.FactStockHolding\n(StockHoldingKey 1, StockItemKey 2, QuantityOnHand 3, BinLocation 4, LastStocktakeQuantity 5, LastCostPrice 6, ReorderLevel 7, TargetStockLevel 8, LineageKey 9)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-factstockholding.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n\n-- 3. FactSale\nCOPY INTO wwi.FactSale\n(SaleKey 1, CityKey 2, CustomerKey 3, BillToCustomerKey 4, StockItemKey 5, InvoiceDateKey 6, DeliveryDateKey 7, SalespersonKey 8, WWIInvoiceID 9, Description 10, Package 11, Quantity 12, UnitPrice 13, TaxRate 14, TotalExcludingTax 15, TaxAmount 16, Profit 17, TotalIncludingTax 18, TotalDryItems 19, TotalChillerItems 20, LineageKey 21)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-factsale.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\nGO\n\n\n-- 4. FactPurchase\nCOPY INTO wwi.FactPurchase\n(PurchaseKey 1, DateKey 2, SupplierKey 3, StockItemKey 4, WWIPurchaseOrderID 5, OrderedOuters 6, OrderedQuantity 7, ReceivedOuters 8, Package 9, IsOrderFinalized 10, LineageKey 11)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-factpurchase.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n\n--5. FactOrder\nCOPY INTO wwi.FactOrder\n(OrderKey 1, CityKey 2, CustomerKey 3, StockItemKey 4, OrderDateKey 5, PickedDateKey 6, SalespersonKey 7, PickerKey 8, WWIOrderID 9, WWIBackorderID 10, Description 11, Package 12, Quantity 13, UnitPrice 14, TaxRate 15, TotalExcludingTax 16, TaxAmount 17, TotalIncludingTax 18, LineageKey 19)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-factorder.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 3\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\nGO\n\n-- 6. [FactMovement]\nCOPY INTO wwi.FactMovement\n(MovementKey 1, DateKey 2, StockItemKey 3, CustomerKey 4, SupplierKey 5, TransactionTypeKey 6, WWIStockItemTransactionID 7, WWIInvoiceID 8, WWIPurchaseOrderID 9, Quantity 10, LineageKey 11)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-factmovement.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\nGO\n\n--7. DimTransactionType\nCOPY INTO wwi.DimTransactionType\n(TransactionTypeKey 1, WWITransactionTypeID 2, TransactionType 3, ValidFrom 4, ValidTo 5, LineageKey 6)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimtransactiontype.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--8. DimSupplier\nCOPY INTO wwi.DimSupplier\n(SupplierKey 1, WWISupplierID 2, Supplier 3, Category 4, PrimaryContact 5, SupplierReference 6, PaymentDays 7, PostalCode 8, ValidFrom 9, ValidTo 10, LineageKey 11)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimsupplier.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--9. DimStockItem\nCOPY INTO wwi.DimStockItem\n--(StockItemKey 1, WWIStockItemID 2, Stock Item 3, Color 4, SellingPackage 5, Buying Package 6, Brand 7, Size 8, LeadTimeDays 9, QuantityPerOuter 10, IsChillerStock 11, Barcode 12, TaxRate 13, UnitPrice 14, RecommendedRetailPrice 15, TypicalWeightPerUnit 16, ValidFrom 17, ValidTo 18, LineageKey 19)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimstockitem.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--10. DimPaymentMethod\nCOPY INTO wwi.DimPaymentMethod\n(PaymentMethodKey 1, WWIPaymentMethodID 2, PaymentMethod 3, ValidFrom 4, ValidTo 5, LineageKey 6)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimpaymentmethod.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--11. DimEmployee\nCOPY INTO wwi.DimEmployee\n(EmployeeKey 1, WWIEmployeeID 2, Employee 3, PreferredName 4, IsSalesperson 5, ValidFrom 6, ValidTo 7, LineageKey 8)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimemployee.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--12. DimDate\nCOPY INTO wwi.DimDate\n(Date 1, DayNumber 2, Day 3, Month 4, ShortMonth 5, CalendarMonthNumber 6, CalendarMonthLabel 7, CalendarYear 8, CalendarYearLabel 9, FiscalMonthNumber 10, FiscalMonthLabel 11, FiscalYear 12, FiscalYearLabel 13, ISOWeekNumber 14)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimdate.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--13. DimCity\nCOPY INTO wwi.DimCity\n(CityKey 1, WWICityID 2, City 3, StateProvince 4, Country 5, Continent 6, SalesTerritory 7, Region 8, Subregion 9, LatestRecordedPopulation 10, ValidFrom 11, ValidTo 12, LineageKey 13)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimcity.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--14. DimCustomer\nCOPY INTO wwi.DimCustomer\n(CustomerKey 1, WWICustomerID 2, Customer 3, BillToCustomer 4, Category 5, BuyingGroup 6, PrimaryContact 7, PostalCode 8, ValidFrom 9, ValidTo 10, LineageKey 11)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimcustomer.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '|'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n\n--15. [PostalCodes]\nCOPY INTO [wwi].[PostalCodes]\n([City] 1, [State] 2,\t[Zip] 3,\t[Latitude] 4,\t[Longitude] 5,\t[Timezone] 6)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/postalcodes.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = ','\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nGO\n\n--16.EmployeePIIData\nCOPY INTO wwi.EmployeePIIData\n(Id 1, FirstName 2, LastName 3, Company 4, Address 5, City 6, County 7, State 8, Phone 9, email 10, SSN 11)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/EmployeePIIData20K.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = ','\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/rawdata/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('01 COPY INTO WWI TABLES_properties_content_currentConnection_name')]",
						"type": "[parameters('01 COPY INTO WWI TABLES_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01 Create Trips Table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[Trips]\n( \n    [vendorID] [real]  NOT NULL,\n    [passengerCount] [real]  NULL,\n    [tripDistance] [real]  NULL,\n    [month_num] [real]  NULL,\n    [day_of_month] [real]  NULL,\n    [day_of_week] [real]  NULL,\n    [day_of_hour] [real]  NULL\n)\nWITH\n(\n    DISTRIBUTION = ROUND_ROBIN,\n    HEAP\n)\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('01 Create Trips Table_properties_content_currentConnection_name')]",
						"type": "[parameters('01 Create Trips Table_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/02 Create Models Table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [dbo].[Models]\n( \n    [Id] [int]  NOT NULL,\n    [Model] [varbinary](max)  NULL,\n    [Description] [varchar](200)  NULL\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    HEAP\n)\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('02 Create Models Table_properties_content_currentConnection_name')]",
						"type": "[parameters('02 Create Models Table_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/02 Set up RLS DDM')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n/*****************************************************************************************************************/\n-- 1. Setting up Dynamic Data Masking on EmailId column of wwi.EmployeePIIData\n\n        ALTER TABLE wwi.EmployeePIIData  \n        ALTER COLUMN Email varchar(100) MASKED WITH (FUNCTION = 'email()'); \n\n        ALTER TABLE wwi.EmployeePIIData  \n        ALTER COLUMN Phone varchar(100) MASKED WITH (FUNCTION = 'partial(0,\"XXX-XXX-XX\",2)'); \n\n/*****************************************************************************************************************/\n\n-- 2. Setting up Row Level Security on State\n\n        --Create User and Grant Select Permissions\n        CREATE USER [babal@microsoft.com] FROM EXTERNAL PROVIDER\n        GRANT SELECT ON wwi.EmployeePIIData TO [babal@microsoft.com] \n        EXEC sp_addrolemember 'db_datareader', 'babal@microsoft.com'\n\n        CREATE USER [youralias@domain.com] FROM EXTERNAL PROVIDER\n        GRANT SELECT ON wwi.EmployeePIIData TO [youralias@domain.com] \n        EXEC sp_addrolemember 'db_datareader', 'youralias@domain.com'\n\n\n        --Grant Impersonate permissions for AAD login \n        GRANT IMPERSONATE ON USER::[babal@microsoft.com] TO [babal@microsoft.com];\n        GRANT IMPERSONATE ON USER::[youralias@domain.com] TO [youralias@domain.com];\n\n        --Create roles as values present in column \n        --CREATE ROLE [DE]; --This role already exists for SQL login\n        CREATE ROLE [CA];\n        CREATE ROLE [PA];\n        CREATE ROLE [NY];\n       \n        -- Add AAD users to roles      \n        EXEC sp_addrolemember 'NY', 'babal@microsoft.com';\n        EXEC sp_addrolemember 'PA', 'babal@microsoft.com';\n        EXEC sp_addrolemember 'CA', 'babal@microsoft.com';\n\n\n        CREATE FUNCTION wwi.fn_securitypredicate_rolemember(@State AS sysname)  \n        RETURNS TABLE  \n        WITH SCHEMABINDING  \n        AS  \n        RETURN SELECT 1 AS fn_securitypredicate_result   \n        WHERE \n            (@State = 'NY' and IS_ROLEMEMBER('NY') = 1) \n        or (@State = 'CA' and IS_ROLEMEMBER('CA') = 1) \n        or (@State = 'PA' and IS_ROLEMEMBER('PA') = 1)\n        or IS_ROLEMEMBER('dbo') = 1; \n\n        --Create Security Policy to filter rows based on column values \n        CREATE SECURITY POLICY StateFilter_rolemember \n        ADD FILTER PREDICATE wwi.fn_securitypredicate_rolemember([state])   \n        ON  wwi.EmployeePIIData \n        WITH (STATE = ON); \n\n\n        --Test Runs\n        select USER_NAME()\n        select top 100 * from wwi.EmployeePIIData \n        EXECUTE AS USER ='babal@microsoft.com'\n        select user_name() as UserName, is_rolemember('NY') As IsALCustomer, is_rolemember('CA') As IsCACustomer\n        select top 100 * from wwi.EmployeePIIData ;\n        revert\n        EXECUTE AS USER ='youralias@domain.com'\n        select user_name() as UserName, is_rolemember('NY') As IsALCustomer, is_rolemember('CA') As IsCACustomer\n        select top 100 [State], * from wwi.EmployeePIIData ;\n        revert\n        select user_name() as UserName, is_rolemember('NY') As IsALCustomer, is_rolemember('CA') As IsCACustomer\n        select top 100 * from wwi.EmployeePIIData ;\n\n\n\n--      DROP SECURITY POLICY StateFilter_rolemember; \n--      DROP FUNCTION Security.fn_securitypredicate_rolemember\n--      DROP SCHEMA Security;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('02 Set up RLS DDM_properties_content_currentConnection_name')]",
						"type": "[parameters('02 Set up RLS DDM_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03 Example run for RLS DDM')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--Returns records for CA state\nEXECUTE AS USER ='babal@microsoft.com'\nSELECT \n    Count(*) as EmployeeCount\nFROM \n    wwi.EmployeePIIData;\n\nSELECT \n    [FirstName]\n    ,[LastName]\n    ,[State]\n    ,[Phone]\n    ,[Email]\nFROM \n    wwi.EmployeePIIData ;\nrevert\n\n\n\n--Returns records for PA and NY state\nEXECUTE AS USER ='youralias@domain.com'\nSELECT \n    Count(*) as EmployeeCount\nFROM \n    wwi.EmployeePIIData;\n\nSELECT \n    [FirstName]\n    ,[LastName]\n    ,[State]\n    ,[Phone]\n    ,[Email]    \nFROM \n    wwi.EmployeePIIData;\nrevert",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('03 Example run for RLS DDM_properties_content_currentConnection_name')]",
						"type": "[parameters('03 Example run for RLS DDM_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03 Register Model in SQL Pool')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nInsert into dbo.Models\n(Id, [Model],[Description])\nVALUES(60,\n,'NYC cab fare prediction model')",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('03 Register Model in SQL Pool_properties_content_currentConnection_name')]",
						"type": "[parameters('03 Register Model in SQL Pool_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/04 Load Trips table with data')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- type your sql script here, we now have intellisense\n\nDROP TABLE dbo.Trips;\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Trips' AND TYPE = 'U')\nCREATE TABLE dbo.Trips\n( \n    [vendorID] [real]  NOT NULL,\n    [passengerCount] [real]  NULL,\n    [tripDistance] [real]  NULL,\n    [month_num] [real]  NULL,\n    [day_of_month] [real]  NULL,\n    [day_of_week] [real]  NULL,\n    [day_of_hour] [real]  NULL\n)\nWITH\n(\n    DISTRIBUTION = ROUND_ROBIN,\n    HEAP\n)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_test\n--AS\n--BEGIN\nCOPY INTO dbo.Trips\n(vendorID 1, passengerCount 2, tripDistance 3, month_num 4, day_of_month 5, day_of_week 6, day_of_hour 7)\nFROM 'https://accsynapsestorage.dfs.core.windows.net/tripsdatascore/trips.txt'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIELDQUOTE = '\"'\n\t,FIELDTERMINATOR = '\t'\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://accsynapsestorage.dfs.core.windows.net/tripsdatascore/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM dbo.Trips\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('04 Load Trips table with data_properties_content_currentConnection_name')]",
						"type": "[parameters('04 Load Trips table with data_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/05 Data Exploration with SQLOD')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.blob.core.windows.net/curateddata/ordersumamtion/OrdersByState/part-00000-e73ae662-3767-44ef-ba2e-84a26ecc7ee5-c000.snappy.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('05 Data Exploration with SQLOD_properties_content_currentConnection_name')]",
						"type": "[parameters('05 Data Exploration with SQLOD_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/05 PREDICT In-Engine ML Scoring')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n-- PREDICTIVE MODELS TABLE\nSELECT * FROM Models;\n\n-- TRIPS DATA TABLE\nselect * from dbo.Trips\n\n-- quick predict\nSELECT TOP 10\n       [vendorID],\n       [passengerCount],\n       [tripDistance],\n       [month_num],\n       [day_of_month],\n       [day_of_week],\n       [day_of_hour],\n       [totalAmount]\nFROM PREDICT (model = (SELECT Model FROM Models WHERE Id = 60), Data = dbo.Trips) WITH (totalAmount float)\n\n\n-- NEXT PREDICTIONS INTO A MORE COMPLEX QUERY\n--DECLARE @model varbinary(max) = (SELECT Model FROM Models WHERE Id = 60);\nSELECT\n\tPassengerCount,\n\tTripCount,\n\tAvgTripAmount,\n\tRANK() OVER (ORDER BY AvgTripAmount DESC) AS RankTripAmount\nFROM (\n\tSELECT \n\t\t   [passengerCount] as PassengerCount,\n\t\t   COUNT(*) as TripCount,\n\t\t   AVG([totalAmount]) as AvgTripAmount\n\tFROM PREDICT (model = (SELECT Model FROM Models WHERE Id = 60), Data = dbo.Trips) WITH (totalAmount float)\n\tGROUP BY\n\t\t[passengerCount]) SubQ\nORDER BY\n\tPassengerCount\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('05 PREDICT In-Engine ML Scoring_properties_content_currentConnection_name')]",
						"type": "[parameters('05 PREDICT In-Engine ML Scoring_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CDC_Synapseserverless')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP VIEW VW_CDCDemo_RAW\nGO\n\nCreate VIEW VW_CDCDemo_RAW\nas\nSELECT\n     *\nFROM\n    OPENROWSET(\n        BULK 'https://integraadls.dfs.core.windows.net/rawdata/cdcdemo_adf/*/*/*/*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\nCreate View VW_CDCDemo_RAW_Ranking\nas\nSELECT\n\t*,\n\tRANK () OVER ( \n\t\tPARTITION BY Id\n        ORDER BY UpdateDateTime DESC\n\t) id_rank \nFROM\n\tVW_CDCDemo_RAW\n\n\n/*\n-- If you do not have a Master Key on your DW you will need to create one.\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = '@Password456' ;\n\nCREATE DATABASE SCOPED CREDENTIAL ADLS_credential\nWITH\n  IDENTITY = 'integraadls' ,\n  SECRET = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n;\n\nCREATE DATABASE SCOPED CREDENTIAL msi_cred \nWITH IDENTITY = 'Managed Service Identity' ;\n\nCREATE SCHEMA EXT\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'rawdata_ds') \n\tDROP EXTERNAL DATA SOURCE [rawdata_ds] \nGO\t\n\tCREATE EXTERNAL DATA SOURCE [rawdata_ds] \n\tWITH (\n\t\tLOCATION   = 'https://integraadls.dfs.core.windows.net/curateddata'\t\n\t\t)\nGo\n\n\n*/\nCREATE PROCEDURE sp_Build_StagingTable_ADLS\nAS\nBEGIN\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'cdcstagingtable') \n\tDrop EXTERNAL TABLE ext.cdcstagingtable\n\nCREATE EXTERNAL TABLE ext.cdcstagingtable \n\tWITH (\n\tLOCATION = 'cdcdemo_stg/cdctable/latest',\n\tDATA_SOURCE = [rawdata_ds],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nAS SELECT ID, Name, UpdateDateTime FROM VW_CDCDemo_RAW_Ranking where id_rank = 1\nEND\n\nCREATE VIEW VW_CDCDemo_Staging\nas\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://integraadls.dfs.core.windows.net/curateddata/cdcdemo_stg/cdctable/latest/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\nexec sp_Build_StagingTable_ADLS\n\nselect count(*) from VW_CDCDemo_Staging\n\n\n\nCREATE PROCEDURE sp_TimeTravel_ADLS\n@timetraveldate datetime\nAS\nBEGIN\n SELECT ID, Name, UpdateDateTime FROM VW_CDCDemo_RAW_Ranking where id_rank = 1 and UpdateDateTime <= @timetraveldate\nEND\n\nexec sp_TimeTravel_ADLS '3/20/2021 12:00:00'\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('CDC_Synapseserverless_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('CDC_Synapseserverless_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MIsqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE USER [accpurview] FROM EXTERNAL PROVIDER\nGO\n\nEXEC sp_addrolemember 'db_owner', [accpurview]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('MIsqlpool_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('MIsqlpool_properties_content_currentConnection_databaseName')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYCYellow')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "use nyctaxi\nGO\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    PuYear, PuMonth, sum(FareAmount) as FareAmount, sum(TotalAmount) as TotalAmount\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result] \n    Group by PuYear, PuMonth\n    Order by PuYear, PuMonth;\n\nselect count(*) \nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result] ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('NYCYellow_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('NYCYellow_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [Id]\n,[FirstName]\n,[LastName]\n,[Company]\n,[Address]\n,[City]\n,[County]\n,[State]\n,[Phone]\n,[email]\n,[SSN]\n FROM [wwi].[EmployeePIIData]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('SQL script 1_properties_content_currentConnection_name')]",
						"type": "[parameters('SQL script 1_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    TOP 2000 *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('SQL script 2_properties_content_currentConnection_name')]",
						"type": "[parameters('SQL script 2_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/rawdata/WWI/wwi-dimstockitem.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('SQL script 3_properties_content_currentConnection_name')]",
						"type": "[parameters('SQL script 3_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accsvctest')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "use master;\nCreate login [accsvcuser] FROM EXTERNAL PROVIDER;\n\nGRANT CREATE ANY DATABASE to [accsvcuser];\n\nDROP login [accsvcuser];\n\nCREATE USER [accsvcuser] FROM EXTERNAL PROVIDER;\n\nALTER ROLE db_datareader ADD MEMBER [accsvcuser]\nALTER ROLE db_owner ADD MEMBER [accsvcuser]\n\nDROP user [accsvcuser];\n\nselect * from dbo.customer;\n\nselect * from dbo.region",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('accsvctest_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('accsvctest_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adbsqlmi')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "use master;\nCreate login [abdtest1] FROM EXTERNAL PROVIDER;\n\nGRANT CREATE ANY DATABASE to [abdtest1];\n\nDROP login [abdtest1];\n\nCREATE USER [abdtest1] FROM EXTERNAL PROVIDER;\n\nALTER ROLE db_datareader ADD MEMBER [abdtest1]\nALTER ROLE db_owner ADD MEMBER [abdtest1]\n\nDROP user [abdtest1];\n\n\nuse master;\nCreate login [accpurview] FROM EXTERNAL PROVIDER;\n\nGRANT CREATE ANY DATABASE to [accpurview];\n\nDROP login [accpurview];\n\nCREATE USER [accpurview] FROM EXTERNAL PROVIDER;\n\nALTER ROLE db_datareader ADD MEMBER [accpurview]\nALTER ROLE db_owner ADD MEMBER [accpurview]\n\nDROP user [accpurview];\n\nselect * from sys.databases;\n\nALTER DATABASE [nyctaxi] MODIFY NAME = [nyctaxiold]\n\nRENAME OBJECT nyctaxi TO nyctaxiold;\nRENAME DATABASE nyctaxi to nyctaxiold;\n\nCreate Database WideWorldImporters;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('adbsqlmi_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('adbsqlmi_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/arcinsightnullquery')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/arcinsight/serverless---71310---Evergreen_AwsLambdaSample---20201215.2---2020-12-15 16_49_35.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/arcinsight/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\nCreate database arcinsight;\n\nuse arcinsight;\n-- 1st View\n-- Timed out after 30 min\n\nDROP VIEW iacAwsView;\n\nCREATE VIEW iacAwsView AS\nSELECT *\nFROM OPENROWSET\n(\n    BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/arcinsight/*.parquet',\n    FORMAT = 'PARQUET'\n)\nWITH (\n  [name] VARCHAR(100) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [stage] VARCHAR(100) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [runtime] VARCHAR(100) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [region] VARCHAR(100) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [airid] VARCHAR(200) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [environment] VARCHAR(100) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [securityGroupIds] VARCHAR(8000) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [subnetIds] VARCHAR(8000) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [resname] VARCHAR(100) COLLATE Latin1_General_100_CI_AI_SC_UTF8,\n  [restype] VARCHAR(2000) COLLATE Latin1_General_100_CI_AI_SC_UTF8\n) AS iacAws;\nGO\n\nSelect * from iacAwsView;\n\nDrop View iacAwsView;\n\nCREATE VIEW iacAwsView AS\nSELECT *\nFROM OPENROWSET\n(\n    BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/arcinsight/*.parquet',\n    FORMAT = 'PARQUET'\n)\nWITH (\n  [name] VARCHAR(100),\n  [stage] VARCHAR(100),\n  [runtime] VARCHAR(100),\n  [region] VARCHAR(100),\n  [airid] VARCHAR(200),\n  [environment] VARCHAR(100),\n  [securityGroupIds] VARCHAR(8000),\n  [subnetIds] VARCHAR(8000),\n  [resname] VARCHAR(100),\n  [restype] VARCHAR(2000)\n) AS iacAws;\nGO\n\nSelect * from iacAwsView;\n\nDrop View iacAwsView;\n\nCREATE VIEW iacAwsView AS\nSELECT *\nFROM OPENROWSET\n(\n    BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/arcinsight/*.parquet',\n    FORMAT = 'PARQUET'\n) AS iacAws;\nGO\n\nSelect * from iacAwsView;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('arcinsightnullquery_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('arcinsightnullquery_properties_content_currentConnection_databaseName')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/blobsizes')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/2021/06/17/20-28-55/DefaultRule-AllBlobs.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0'\n    ) AS [result]\n\n\nSELECT LEFT([Name], CHARINDEX('/', [Name]) - 1) AS Container, \n        COUNT(*) As TotalBlobCount,\n        SUM([Content-Length]) As TotalBlobSize\nFROM OPENROWSET(\n    bulk 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/2021/06/17/20-28-55/DefaultRule-AllBlobs.csv',\n    format='csv', parser_version='2.0', header_row=true\n) AS Source\nGROUP BY LEFT([Name], CHARINDEX('/', [Name]) - 1)\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('blobsizes_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('blobsizes_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/coviddata')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/coviddata/covid_19_data.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        FIRSTROW = 2\n    ) AS [result]\n\nCREATE DATABASE coviddb;\n\nCREATE VIEW covidview AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/coviddata/covid_19_data.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        DATA_SOURCE = 'SqlOnDemandDemo',\n        FIRSTROW = 2\n    ) WITH (\n      SNo int,\n      ObservationDate varchar(50),\n      ProvinceState varchar(200),\n      CountryRegion varchar(200),\n      LastUpdate varchar(50),\n      Confirmed decimal(18,2),\n      Deaths decimal(18,2),\n      Recovered decimal(18,2)\n) AS [result]\n\nuse coviddb\nGO\n\nuse coviddb\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'xyxpojklnbgtyughd234!234$%';\n-- create credentials for containers in our demo storage account\nCREATE DATABASE SCOPED CREDENTIAL sqlondemand\nWITH IDENTITY='SHARED ACCESS SIGNATURE',  \nSECRET = '?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-10-08T20:03:10Z&st=2020-10-08T12:03:10Z&spr=https&sig=73FwbAOqT3VI6SQ%2FjX1E0CQDo0y7Sri8%2FdAdgOnGE8w%3D'\nGO\nCREATE EXTERNAL DATA SOURCE SqlOnDemandDemo WITH (\n    LOCATION = 'https://accsynapsestorage.blob.core.windows.net',\n    CREDENTIAL = sqlondemand\n);\n\n\nDROP VIEW IF EXISTS covidview;\nGO\n\nCREATE VIEW covidview AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'coviddata/covid_19_data.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        DATA_SOURCE = 'SqlOnDemandDemo',\n        FIRSTROW = 2\n    ) WITH (\n      SNo int,\n      ObservationDate varchar(50),\n      ProvinceState varchar(200),\n      CountryRegion varchar(200),\n      LastUpdate varchar(50),\n      Confirmed decimal(18,2),\n      Deaths decimal(18,2),\n      Recovered decimal(18,2)\n) AS [result]\n\nselect top 200 * from covidview;\n\nselect count(*) from covidview;\n\nSelect CountryRegion, sum(Confirmed) as Confirmed, sum(Deaths) as Deaths, sum(Recovered) as Recovered\n from covidview \ngroup by CountryRegion\n\nSelect datepart(YEAR, ObservationDate) as year, datepart(MONTH, ObservationDate) as month, \nCountryRegion, \nsum(Confirmed) as Confirmed, sum(Deaths) as Deaths, sum(Recovered) as Recovered\n from covidview \ngroup by datepart(YEAR, ObservationDate), datepart(MONTH, ObservationDate),CountryRegion\n\n-- create a container called covidoutput in blob or adls container.\nCREATE EXTERNAL DATA SOURCE mycovidioutput WITH (\n    LOCATION = 'https://accsynapsestorage.blob.core.windows.net/covidoutput', CREDENTIAL = sqlondemand\n);\nGO\n\nCREATE EXTERNAL FILE FORMAT [ParquetFF] WITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\nGO\n\nDrop external table covidaggrCETAS;\n\nCREATE EXTERNAL TABLE [dbo].[covidaggrCETAS] WITH (\n        LOCATION = 'covidParquet/',\n        DATA_SOURCE = [mycovidioutput],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'coviddata/covid_19_data.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        DATA_SOURCE = 'SqlOnDemandDemo',\n        FIRSTROW = 2\n    ) WITH (\n      SNo int,\n      ObservationDate varchar(50),\n      ProvinceState varchar(200),\n      CountryRegion varchar(200),\n      LastUpdate varchar(50),\n      Confirmed decimal(18,2),\n      Deaths decimal(18,2),\n      Recovered decimal(18,2)\n) AS [result];\n\nCREATE EXTERNAL TABLE [dbo].[covidaggrCETAS] WITH (\n        LOCATION = 'covidAggr/',\n        DATA_SOURCE = [mycovidioutput],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSelect datepart(YEAR, ObservationDate) as year, datepart(MONTH, ObservationDate) as month, \nCountryRegion, \nsum(Confirmed) as Confirmed, sum(Deaths) as Deaths, sum(Recovered) as Recovered\n from covidview \ngroup by datepart(YEAR, ObservationDate), datepart(MONTH, ObservationDate),CountryRegion;\n\nUSE [coviddb];\nGO\n\nSELECT\n    *\nFROM covidaggrCETAS;\n\nSelect \nYear, Month, CountryRegion, Confirmed, Deaths, Recovered \nfrom covidaggrCETAS;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('coviddata_properties_content_currentConnection_name')]",
						"type": "[parameters('coviddata_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/covidsql1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    title = JSON_VALUE(doc, '$.metadata.title'),\n    first_author = JSON_QUERY(doc, '$.metadata.authors[0]'),\n    first_author_name = JSON_VALUE(doc, '$.metadata.authors[0].first'),\n    complex_object = doc\nFROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/covid19temp/comm_use_subset/pdf_json/000b7d1517ceebb34e1e3e817695b6de03e2fa78.json',\n        FORMAT='CSV', FIELDTERMINATOR ='0x0b', FIELDQUOTE = '0x0b', ROWTERMINATOR = '0x0b'\n    )\n    WITH ( doc varchar(MAX) ) AS docs;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('covidsql1_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('covidsql1_properties_content_currentConnection_databaseName')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dailaggrsql')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- type your sql script here, we now have intellisense\n\nDrop Table [wwi].[dailyaggr];\n\nCREATE TABLE [wwi].[dailyaggr]\n( \n\t[tsYear] [bigint]  NOT NULL,\n\t[tsMonth] [bigint]  NOT NULL,\n\t[tsDay] [bigint]  NULL,\n\t[tsHour] [bigint]  NULL,\n\t[avgFare] [real]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [tsYear] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO\n\n\nSelect  * from [wwi].[dailyaggr];\n\nSelect  count(*) from [wwi].[dailyaggr];\n\n\nCREATE PROCEDURE dropdailyaggr\nAS\nDrop Table [wwi].[dailyaggr]\nGO\n\nexec dropdailyaggr",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('dailaggrsql_properties_content_currentConnection_name')]",
						"type": "[parameters('dailaggrsql_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dailyaggr')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "Drop Table [wwi].[dailyaggr];",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('dailyaggr_properties_content_currentConnection_name')]",
						"type": "[parameters('dailyaggr_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/deltatest')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nselect top 100 *\nfrom openrowset(\n    bulk 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/delta/delta-table-2939450/',\n    format = 'delta') as rows\n\nselect top 100 *\nfrom openrowset(\n    bulk 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/delta/delta-table-136072/',\n    format = 'delta') as rows\n\n\nselect top 1000 *\nfrom openrowset(\n    bulk 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/nycdelta/yellowweather/',\n    format = 'delta') as rows\n\nselect count(*)\nfrom openrowset(\n    bulk 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/nycdelta/yellowweather/',\n    format = 'delta') as row\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('deltatest_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('deltatest_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/eventhubdatacheck')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT count(*)\n FROM [default].[dbo].[eventhubdata]\n\nSelect top 300 * from dbo.eventhubdata order by enqueuedTime DESC;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('eventhubdatacheck_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('eventhubdatacheck_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gcpnested')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create VIEW gcpnested\nAS\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/gcpnested/part-00000-tid-6950694702048029797-6db471ef-546b-4132-b7ed-55a3e8e0c980-193-1-c000.snappy.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/gcpnested/part-00000-tid-6950694702048029797-6db471ef-546b-4132-b7ed-55a3e8e0c980-193-1-c000.snappy.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nselect * from dbo.gcpnested;\n\nSELECT TOP (100) \n[sys_id],\n[company],\n[assigned_to],\nJSON_VALUE(assigned_to, '$.display_value') as 'assigned_to',\nJSON_VALUE(company, '$.display_value') as 'company name'\n FROM [dbo].[gcpnested]\n WHERE [company] is not null\n AND [assigned_to] is not null\n\n\nSELECT TOP (100) \n[sys_id],\n[company],\n[assigned_to],\nJSON_VALUE(assigned_to, '$.display_value') as 'assigned_to',\nJSON_VALUE(company, '$.display_value') as 'company name'\n FROM [dbo].[gcpnested]\n WHERE [company] is not null\n AND [assigned_to] is not null\n\n select * from [dbo].[gcpnested]\n\n \nSELECT \n[sys_id],\n[company],\n[assigned_to],\nJSON_VALUE(assigned_to, '$.display_value') as 'assigned_to',\nJSON_VALUE(company, '$.display_value') as 'company name'\n FROM [dbo].[gcpnested]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/gcpnested1/part-00000-tid-3418887062267300117-840373fd-93b4-4c75-a283-9634f1d891a7-12-1-c000.snappy.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\ncreate VIEW gcpnested1\nAS\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/gcpnested1/part-00000-tid-3418887062267300117-840373fd-93b4-4c75-a283-9634f1d891a7-12-1-c000.snappy.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nSelect * from dbo.gcpnested1;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('gcpnested_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('gcpnested_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/metadatasql')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "use tpchdb;\nSELECT * FROM sys.views;\n;\nselect a.name, a.database_id, b.name, b.object_id, c.name, c.column_id, d.name \nfrom sys.databases a \njoin sys.tables b on a.database_id = b.schema_id \njoin sys.columns c on b.object_id = c.object_id \njoin sys.types d on c.system_type_id = d.system_type_id;\n\nselect a.name, a.database_id, b.name, b.object_id, c.name, c.column_id, d.name \nfrom sys.databases a \njoin sys.views b on a.database_id = b.schema_id \njoin sys.columns c on b.object_id = c.object_id \njoin sys.types d on c.system_type_id = d.system_type_id;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('metadatasql_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('metadatasql_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/navistarsql')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/navistaros/000017_0.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0'\n    ) AS [result]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('navistarsql_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('navistarsql_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nycdata')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- type your sql script here, we now have intellisense\nCreate database nyctaxi;\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/green/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nuse nyctaxi;\nGO\n\nuse nyctaxi\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'xyxpojklnbgtyughd234!234$%';\n-- create credentials for containers in our demo storage account\nuse nyctaxi\nCREATE DATABASE SCOPED CREDENTIAL sqlondemand\nWITH IDENTITY='SHARED ACCESS SIGNATURE',  \nSECRET = '?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-10-08T20:03:10Z&st=2020-10-08T12:03:10Z&spr=https&sig=73FwbAOqT3VI6SQ%2FjX1E0CQDo0y7Sri8%2FdAdgOnGE8w%3D'\nGO\n\nuse nyctaxi\nCREATE EXTERNAL DATA SOURCE SqlOnDemandDemo1 WITH (\n    LOCATION = 'https://accsynapsestorage.blob.core.windows.net',\n    CREDENTIAL = sqlondemand\n);\n\nuse nyctaxi\n-- create a container called covidoutput in blob or adls container.\nCREATE EXTERNAL DATA SOURCE mycovidioutputyellow WITH (\n    LOCATION = 'https://accsynapsestorage.blob.core.windows.net/nyctaxiyellow', CREDENTIAL = sqlondemand\n);\nGO\n\nCREATE EXTERNAL DATA SOURCE mycovidioutputgreen WITH (\n    LOCATION = 'https://accsynapsestorage.blob.core.windows.net/nyctaxigreen', CREDENTIAL = sqlondemand\n);\nGO\n\nuse nyctaxi\nCREATE EXTERNAL FILE FORMAT [ParquetFF] WITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\nGO\n\nuse nyctaxi\nCREATE EXTERNAL TABLE [dbo].[nycyellow] WITH (\n        LOCATION = 'nyctaxiyellow/',\n        DATA_SOURCE = [mycovidioutputyellow],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nuse nyctaxi\nCREATE EXTERNAL TABLE [dbo].[nycgreen] WITH (\n        LOCATION = 'nyctaxigreen/',\n        DATA_SOURCE = [mycovidioutputgreen],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/green/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\n\nuse nyctaxi;\nGO\n\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxigreen/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\n\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxigreen/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    Top 2000 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    PuYear, PuMonth, sum(FareAmount) as FareAmount, sum(TotalAmount) as TotalAmount\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result] \n    Group by PuYear, PuMonth\n    Order by PuYear, PuMonth;\n\nSELECT\n    Top 10000 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    distinct VendorID\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\nSELECT\n    distinct PaymentType\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/synapseroot/nyctaxiyellow/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/censusdatacontainer/release/us_population_county/year=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nuse nyctaxi\nDROP EXTERNAL DATA SOURCE uspopulation;\n\nuse nyctaxi\nCREATE EXTERNAL DATA SOURCE myuspopulation WITH (\n    LOCATION = 'https://accsynapsestorage.blob.core.windows.net/uspopulation', CREDENTIAL = sqlondemand\n);\nGO\n\nuse nyctaxi\nDROP EXTERNAL TABLE [dbo].[factpopulation];\n\nuse nyctaxi\nCREATE EXTERNAL TABLE [dbo].[factpopulation] WITH (\n        LOCATION = 'fact/',\n        DATA_SOURCE = [myuspopulation],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/censusdatacontainer/release/us_population_county/year=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nselect \n top 100 * \nuspopulation\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://accsynapsestorage.blob.core.windows.net/uspopulation/fact/*',\n        FORMAT = 'parquet'\n    ) AS [result];\n\n\nuse nyctaxi\nselect top 200 * from dbo.factpopulation;\n\nSELECT\n    StateName, CountyName, \n    Race, Sex,\n    sum(Population) as Population, \n    Avg(MinAge) as MinAge, \n    Max(MaxAge) as MaxAge\nFROM\n    dbo.factpopulation\n    Group by StateName, CountyName, Race, Sex\n    Order by StateName, CountyName, Race, Sex;\n\n\nSelect distinct StateName from dbo.factpopulation;\n\nCREATE EXTERNAL TABLE [dbo].[dimstate] WITH (\n        LOCATION = 'dimstate/',\n        DATA_SOURCE = [myuspopulation],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSelect distinct StateName from dbo.factpopulation\n\nselect * from dbo.dimstate;\n\nCREATE EXTERNAL TABLE [dbo].[dimcountyname] WITH (\n        LOCATION = 'dimcountryname/',\n        DATA_SOURCE = [myuspopulation],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSelect distinct CountyName from dbo.factpopulation\n\nCREATE EXTERNAL TABLE [dbo].[dimRace] WITH (\n        LOCATION = 'dimRace/',\n        DATA_SOURCE = [myuspopulation],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSelect distinct Race from dbo.factpopulation\n\nCREATE EXTERNAL TABLE [dbo].[dimSex] WITH (\n        LOCATION = 'dimsex/',\n        DATA_SOURCE = [myuspopulation],\n        FILE_FORMAT = [ParquetFF]\n) AS\nSelect distinct Sex from dbo.factpopulation\n\nSelect * from dbo.dimstate\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('nycdata_properties_content_currentConnection_name')]",
						"type": "[parameters('nycdata_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nyctaxisql')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK     'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT = 'parquet'\n    ) AS [result];\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('nyctaxisql_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('nyctaxisql_properties_content_currentConnection_databaseName')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/percept1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/santacruz/incoming/2021/03/07/378287953_0d07aab0c9684f86b66d69e15e8f6aa0_1.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/santacruz/incoming/*/*/*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\ncreate VIEW percept1 AS \nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/santacruz/incoming/*/*/*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nSelect * from percept1;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('percept1_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('percept1_properties_content_currentConnection_databaseName')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/serverlesscovid19sql')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [_c0]\n,[_c1]\n,[_c2]\n,[_c3]\n,[_c4]\n,[_c5]\n,[_c6]\n,[_c7]\n FROM [default].[dbo].[covid19]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "[parameters('serverlesscovid19sql_properties_content_currentConnection_name')]",
						"type": "[parameters('serverlesscovid19sql_properties_content_currentConnection_type')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/serverlessdbroles')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT DP1.name AS DatabaseRoleName, \n    isnull (DP2.name, 'No members') AS DatabaseUserName \n  FROM sys.database_role_members AS DRM \n  RIGHT OUTER JOIN sys.database_principals AS DP1 \n    ON DRM.role_principal_id = DP1.principal_id \n  LEFT OUTER JOIN sys.database_principals AS DP2 \n    ON DRM.member_principal_id = DP2.principal_id \n WHERE DP1.type = 'R' \n  AND DP1.Name in ('db_datawriter', 'db_owner', 'db_datareader', 'db_ddladmin') \n ORDER BY DP1.name;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('serverlessdbroles_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('serverlessdbroles_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlmisetup')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "use master;\n--Create login [accadf1] with PASSWORD='Azure!2345'\nCreate login [accadf1] FROM EXTERNAL PROVIDER;\n--CREATE USER [accadf1] FROM EXTERNAL PROVIDER;\n\nGRANT CREATE ANY DATABASE to [accadf1];\n\nDROP login [accadf1];\n\nCREATE USER [accadf1] FROM EXTERNAL PROVIDER;\n\nALTER ROLE db_datareader ADD MEMBER [accadf1]\nALTER ROLE db_owner ADD MEMBER [accadf1]\nALTER ROLE db_securityadmin ADD MEMBER [accadf1]\n\nGRANT CREATE ANY DATABASE to [accadf1];\n\nGRANT ADMINISTER DATABASE BULK OPERATIONS TO [accadf1]\n\nDROP user [accadf1];\n\n\nEXEC master..sp_addsrvrolemember @loginame = N'accadf1', @rolename = N'dbcreator'\nGO\n\n\nCREATE EXTERNAL DATA SOURCE gcpnestedoutut\nWITH ( LOCATION = 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/gcpnestedoutput/')\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat WITH (  FORMAT_TYPE = PARQUET );\n\nDROP EXTERNAL TABLE gcpnestedinput\n\nUSE [arcinsight];\nGO\nCREATE EXTERNAL TABLE gcpnestedoutput\n(\n    [sys_id] VARCHAR (1000),\n    [assigned] VARCHAR (1000),\n    [company] VARCHAR(8000),\n    [assigned_to] VARCHAR(8000)\n)\nWITH (\n    LOCATION = '*.parquet',\n    DATA_SOURCE = gcpnestedoutut,\n    FILE_FORMAT = ParquetFormat\n);\n\nselect * from dbo.gcpnestedoutput\n\n\nSELECT\n        sm.[name]                                                                AS [schema_name]\n,        tb.[name]                                                                AS [table_name]\n,        st.[name]                                                                AS [stats_name]\n,        st.[has_filter]                                                            AS [stats_is_filtered]\n,       ROW_NUMBER()\n        OVER(ORDER BY (SELECT NULL))                                            AS [seq_nmbr]\n,                                 QUOTENAME(sm.[name])+'.'+QUOTENAME(tb.[name])  AS [two_part_name]\n,        QUOTENAME(DB_NAME())+'.'+QUOTENAME(sm.[name])+'.'+QUOTENAME(tb.[name])  AS [three_part_name]\nFROM    sys.objects            AS ob\nJOIN    sys.stats            AS st    ON    ob.[object_id]        = st.[object_id]\nJOIN    sys.stats_columns    AS sc    ON    st.[stats_id]        = sc.[stats_id]\n                                    AND st.[object_id]        = sc.[object_id]\nJOIN    sys.columns            AS co    ON    sc.[column_id]        = co.[column_id]\n                                    AND    sc.[object_id]        = co.[object_id]\nJOIN    sys.tables            AS tb    ON    co.[object_id]        = tb.[object_id]\nJOIN    sys.schemas            AS sm    ON    tb.[schema_id]        = sm.[schema_id]\n\nselect name as username,\n       create_date,\n       modify_date,\n       type_desc as type,\n       authentication_type_desc as authentication_type\nfrom sys.database_principals\nwhere type not in ('A', 'G', 'R', 'X')\n      and sid is not null\norder by username;\n\n\nSELECT * FROM sys.sql_logins;\n\nSELECT * FROM sys.sysmembers;\n\nselect [name] as database_name,\n    database_id,\n    create_date\nfrom sys.databases\norder by name\n\nIF EXISTS(SELECT * FROM sys.databases where name='arcinsight')\n    PRINT 'The database exists' \n        else PRINT 'The database does not exist'\n\n\nselect l.name as [login name],u.name as [user name] from sysusers u inner join sys.sql_logins l on u.sid=l.sid\n\nselect [name] as database_name,\n    database_id,\n    create_date\nfrom sys.databases\norder by name\n\nIF NOT EXISTS (SELECT 1 FROM [sys].[Databases] WHERE [name]='gbhd5261')\nBEGIN\nCREATE DATABASE \"gbhd5261\";\nSELECT 'Database ''gbhd5261'' created successfully'\nEND\nELSE\nBEGIN\nSELECT 'Database already exists'\nEND\n\nIF NOT EXISTS (SELECT 1 FROM [sys].[Databases] WHERE [name]='gbhd5261')\nBEGIN\nSELECT 'Database doesnt exists'\nEND\nELSE\nBEGIN\nDROP DATABASE \"gbhd5261\";\nSELECT 'Database ''gbhd5261'' deleted successfully'\nEND\n\n\nDROP EXTERNAL DATA SOURCE [5261_BlobStorage];\n\n\nSELECT * FROM [sys].[views]\n\nDROP VIEW IF EXISTS gcpnestedView;\n\nSELECT name FROM [sys].[views] WHERE [name]='gcpnestedView'\n\nIF NOT EXISTS (SELECT 1 FROM [sys].[views] WHERE [name]='gcpnestedView')\nBEGIN\nCREATE VIEW [gcpnestedView] AS \nSELECT * FROM OPENROWSET( \n    BULK 'gcpnestedoutput/*.parquet', \n    DATA_SOURCE = '5261_BlobStorage', \n    FORMAT='PARQUET') as rows;\nGO    \nSELECT 'Created gcpnestedView view';\nEND\nELSE\nBEGIN\nSELECT 'view gcpnestedView already exists'\nEND\n\n\nCREATE VIEW [gcpnestedView] AS \nSELECT * FROM OPENROWSET( \n    BULK 'gcpnestedoutput/*.parquet', \n    DATA_SOURCE = '5261_BlobStorage', \n    FORMAT='PARQUET') as rows;\n\nCREATE VIEW [gcpnestedView] AS \nSELECT * FROM OPENROWSET( \n    BULK 'gcpnestedoutput/*.parquet', \n    DATA_SOURCE = '5261_BlobStorage', \n    FORMAT='PARQUET') as rows;\nGO    \nSELECT 'Created gcpnestedView view';\n\nDROP VIEW IF EXISTS gcpnestedView;\nGo\nSELECT 'Dropped gcpnestedView view';\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('sqlmisetup_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('sqlmisetup_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/titanicsql')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/titanic/Titanic.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0'\n    ) AS [result];\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = '`T2$)bt!8[(ys~kw' ;\n\n--Create database scoped credential with **IDENTITY = 'Managed Service Identity'**\n\nuse coviddb;\nCREATE DATABASE SCOPED CREDENTIAL WorkspaceIdentity WITH IDENTITY = 'Managed Identity';\n\nCREATE EXTERNAL DATA SOURCE DateLakeDS1 WITH (\n    LOCATION = 'https://accsynapsestorage.dfs.core.windows.net/synapseroot/titanic',\n    CREDENTIAL = WorkspaceIdentity\n);\nGO\n\n--Create external data source with abfss:// scheme for connecting to your Azure Data Lake Store Gen2 account\nALTER VIEW titanicview1 AS\n(\n    SELECT\n     *\n    FROM\n        OPENROWSET(\n            BULK 'Titanic.csv',\n            FORMAT = 'CSV',\n            HEADER_ROW = True,\n            PARSER_VERSION='2.0', DATA_SOURCE = 'DateLakeDS1'\n        ) AS [result]\n)\n\nSelect * from titanicview1;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('titanicsql_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('titanicsql_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpchschemaview')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE tpchdb COLLATE Latin1_General_100_CI_AI_SC_UTF8;\n\n-- https://docs.microsoft.com/en-us/azure/synapse-analytics/sql/query-parquet-nested-types\n\nuse tpchdb;\n\nDROP VIEW customer;\nCREATE VIEW customer AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://integraadls.dfs.core.windows.net/rawdata/CUSTOMER/*.snappy.parquet',\n        FORMAT='PARQUET'\n    ) \n    WITH (\n    [C_COMMENT] VARCHAR (4000) ,\n    C_MKTSEGMENT VARCHAR(4000),\n    C_PHONE VARCHAR (4000),\n    C_ADDRESS VARCHAR (4000),\n    C_NAME VARCHAR (4000),\n    C_CUSTKEY DECIMAL,\n    C_NATIONKEY VARCHAR(10)\n    )\nAS [r]\n)\n\nCREATE VIEW supplier AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/SUPPLIER/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n)\n\nCREATE VIEW nation AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/NATION/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n)\n\nCREATE VIEW region AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/REGION/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n)\n\nCREATE VIEW part AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/PART/*.parquet',\n        FORMAT='PARQUET'\n    ) \n    WITH (\n    P_PARTKEY DECIMAL(38, 0),\n    P_NAME VARCHAR(4000),\n    P_MFGR VARCHAR(4000),\n    P_BRAND VARCHAR(4000),\n    P_TYPE VARCHAR(4000),\n    P_SIZE DECIMAL,\n    P_CONTAINER VARCHAR(4000),\n    P_RETAILPRICE DECIMAL(38, 0),\n    P_COMMENT VARCHAR(4000)\n    )\nAS [r]\n)\n\nCREATE VIEW partsupp AS(\nSELECT\n     *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/PARTSUPP/*.parquet',\n        FORMAT='PARQUET'\n    ) \n  WITH (\n    [PS_PARTKEY] DECIMAL,\n\t[PS_SUPPKEY] DECIMAL,\n\t[PS_AVAILQTY] DECIMAL,\n\t[PS_SUPPLYCOST] DECIMAL,\n\t[PS_COMMENT] varchar(8000)\n  )\n  AS [result]\n)\n\nDROP VIEW orders;\nCREATE VIEW orders AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/ORDERS/*.parquet',\n        FORMAT='PARQUET'\n    ) \n  WITH (\n\t[O_ORDERKEY] DECIMAL,\n\t[O_CUSTKEY] DECIMAL,\n\t[O_ORDERSTATUS] varchar(8000),\n\t[O_TOTALPRICE] DECIMAL,\n\t[O_ORDERDATE] date,\n\t[O_ORDERPRIORITY] varchar(8000),\n\t[O_CLERK] varchar(8000),\n\t[O_SHIPPRIORITY] DECIMAL,\n\t[O_COMMENT] varchar(8000)\n  )\n  AS [result]\n)\n\nCREATE VIEW lineitem AS(\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/LINEITEM/*.parquet',\n        FORMAT='PARQUET'\n    ) \n  WITH (\n\t[L_ORDERKEY] DECIMAL,\n\t[L_PARTKEY] DECIMAL,\n\t[L_SUPPKEY] DECIMAL,\n\t[L_LINENUMBER] DECIMAL,\n\t[L_QUANTITY] DECIMAL,\n\t[L_EXTENDEDPRICE] DECIMAL,\n\t[L_DISCOUNT] DECIMAL,\n\t[L_TAX] DECIMAL,\n\t[L_RETURNFLAG] varchar(8000),\n\t[L_LINESTATUS] varchar(8000),\n\t[L_SHIPDATE] date,\n\t[L_COMMITDATE] date,\n\t[L_RECEIPTDATE] date,\n\t[L_SHIPINSTRUCT] varchar(8000),\n\t[L_SHIPMODE] varchar(8000),\n\t[L_COMMENT] varchar(8000)\n  )\n  AS [result]\n)",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('tpchschemaview_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('tpchschemaview_properties_content_currentConnection_databaseName')]"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpchsql11')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/CUSTOMER/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nCREATE DATABASE tpchdb COLLATE Latin1_General_100_CI_AI_SC_UTF8;\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://integraadls.dfs.core.windows.net/rawdata/CUSTOMER/data_0_0_0.snappy.parquet',\n        FORMAT='PARQUET',\n        DATAFILETYPE = 'WIDEchar'\n    ) \n AS [r]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://integraadls.dfs.core.windows.net/rawdata/CUSTOMER/*.snappy.parquet',\n        FORMAT='PARQUET'\n    ) \n    WITH (\n    [C_COMMENT] VARCHAR (4000) ,\n    C_MKTSEGMENT VARCHAR(4000),\n    C_PHONE VARCHAR (4000),\n    C_ADDRESS VARCHAR (4000),\n    C_NAME VARCHAR (4000),\n    C_CUSTKEY VARCHAR(4000),\n    C_NATIONKEY varchar(100)\n    )\nAS [r]\nORDER BY C_NATIONKEY DESC\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://integraadls.dfs.core.windows.net/rawdata/CUSTOMER/*.snappy.parquet',\n        FORMAT='PARQUET'\n    ) \n    WITH (\n    [C_COMMENT] VARCHAR (4000) ,\n    C_MKTSEGMENT VARCHAR(4000),\n    C_PHONE VARCHAR (4000),\n    C_ADDRESS VARCHAR (4000),\n    C_NAME VARCHAR (4000),\n    C_CUSTKEY DECIMAL,\n    C_NATIONKEY VARCHAR(10)\n    )\nAS [r]\nORDER BY C_NATIONKEY DESC\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/SUPPLIER/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/NATION/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/REGION/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/PART/*.parquet',\n        FORMAT='PARQUET'\n    ) \n    WITH (\n    P_PARTKEY DECIMAL(38, 0),\n    P_NAME VARCHAR(4000),\n    P_MFGR VARCHAR(4000),\n    P_BRAND VARCHAR(4000),\n    P_TYPE VARCHAR(4000),\n    P_SIZE DECIMAL,\n    P_CONTAINER VARCHAR(4000),\n    P_RETAILPRICE DECIMAL(38, 0),\n    P_COMMENT VARCHAR(4000)\n    )\nAS [r]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/PARTSUPP/*.parquet',\n        FORMAT='PARQUET'\n    ) \n  WITH (\n    [PS_PARTKEY] DECIMAL,\n\t[PS_SUPPKEY] DECIMAL,\n\t[PS_AVAILQTY] DECIMAL,\n\t[PS_SUPPLYCOST] DECIMAL,\n\t[PS_COMMENT] varchar(8000)\n  )\n  AS [result]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/ORDERS/*.parquet',\n        FORMAT='PARQUET'\n    ) \n  WITH (\n\t[O_ORDERKEY] DECIMAL,\n\t[O_CUSTKEY] DECIMAL,\n\t[O_ORDERSTATUS] varchar(8000),\n\t[O_TOTALPRICE] DECIMAL,\n\t[O_ORDERDATE] date,\n\t[O_ORDERPRIORITY] varchar(8000),\n\t[O_CLERK] varchar(8000),\n\t[O_SHIPPRIORITY] DECIMAL,\n\t[O_COMMENT] varchar(8000)\n  )\n  AS [result]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://accbbstore.dfs.core.windows.net/tpchdata/LINEITEM/*.parquet',\n        FORMAT='PARQUET'\n    ) \n  WITH (\n\t[L_ORDERKEY] DECIMAL,\n\t[L_PARTKEY] DECIMAL,\n\t[L_SUPPKEY] DECIMAL,\n\t[L_LINENUMBER] DECIMAL,\n\t[L_QUANTITY] DECIMAL,\n\t[L_EXTENDEDPRICE] DECIMAL,\n\t[L_DISCOUNT] DECIMAL,\n\t[L_TAX] DECIMAL,\n\t[L_RETURNFLAG] varchar(8000),\n\t[L_LINESTATUS] varchar(8000),\n\t[L_SHIPDATE] date,\n\t[L_COMMITDATE] date,\n\t[L_RECEIPTDATE] date,\n\t[L_SHIPINSTRUCT] varchar(8000),\n\t[L_SHIPMODE] varchar(8000),\n\t[L_COMMENT] varchar(8000)\n  )\n  AS [result]\n\n\n\nSelect \ntop 100 * from dbo.orders a join dbo.customer b on a.O_CUSTKEY = b.C_CUSTKEY;\n\n\nselect * from supplier a join nation b on a.S_NATIONKEY = b.N_NATIONKEY\n\nSelect TOP 2000 * from customer;\n\nselect count(*) from customer;\n\nselect count(*) from lineitem;\n\nselect count(*) from orders;\n\nselect\n       l_returnflag,\n       l_linestatus,\n       sum(l_quantity) as sum_qty,\n       sum(l_extendedprice) as sum_base_price,\n       sum(l_extendedprice * (1-l_discount)) as sum_disc_price,\n       sum(l_extendedprice * (1-l_discount) * (1+l_tax)) as sum_charge,\n       avg(l_quantity) as avg_qty,\n       avg(l_extendedprice) as avg_price,\n       avg(l_discount) as avg_disc,\n       count(*) as count_order\n from\n       lineitem\n where\n       l_shipdate <= dateadd(day, -90, '1998-12-01')\n group by\n       l_returnflag,\n       l_linestatus\n order by\n       l_returnflag,\n       l_linestatus;\n\n\nSelect top 2000 * from lineitem;\n\nSelect top 2000 * from orders;\n\n\nEXEC sp_describe_first_result_set N'\n\tselect count(*) from lineitem;';\n\nselect count(*) from lineitem;\n\nEXEC sp_describe_first_result_set N'\n\tSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK ''https://accbbstore.dfs.core.windows.net/tpchdata/LINEITEM/*.parquet'',\n        FORMAT=''PARQUET''\n    ) AS [result]';\n\n\nEXEC sp_describe_first_result_set N'\n\tSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK ''https://accbbstore.dfs.core.windows.net/tpchdata/ORDERS/*.parquet'',\n        FORMAT=''PARQUET''\n    ) AS [result]';\n\nselect count_big (*) from lineitem; -- 59,999,994,267\nselect count_big (*) from orders; -- 15,000,000,000\nselect count_big (*) from customer; -- 1,500,000,000\nselect count_big (*) from supplier; -- 100,000,000\nselect count_big (*) from nation; -- 25\nselect count_big (*) from region; -- 5\nselect count_big (*) from part; -- 2,000,000,000\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "[parameters('tpchsql11_properties_content_currentConnection_poolName')]",
						"databaseName": "[parameters('tpchsql11_properties_content_currentConnection_databaseName')]"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03 Training NYC Taxi ONNX model')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('03 Training NYC Taxi ONNX model_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {}
				},
				"metadata": {
					"kernelspec": {
						"name": "SQL",
						"display_name": "SQL"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"## Predict-New-York-Taxi-Trip-Amount\n",
							""
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Read data from open dataset"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.opendatasets import NycTlcGreen\r\n",
							"import pandas as pd\r\n",
							"from datetime import datetime\r\n",
							"from dateutil.relativedelta import relativedelta\r\n",
							"\r\n",
							"green_taxi_df = pd.DataFrame([])\r\n",
							"\r\n",
							"start = datetime.strptime(\"1/1/2015\",\"%m/%d/%Y\")\r\n",
							"end = datetime.strptime(\"1/31/2015\",\"%m/%d/%Y\")\r\n",
							"\r\n",
							"for sample_month in range(12):\r\n",
							"    temp_df_green = NycTlcGreen(start + relativedelta(months=sample_month), end + relativedelta(months=sample_month)) \\\r\n",
							"        .to_pandas_dataframe()\r\n",
							"    green_taxi_df = green_taxi_df.append(temp_df_green.sample(2000))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"green_taxi_df.head(10)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Data exploration and feature engineering\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"def build_time_features(vector):\n",
							"    pickup_datetime = vector[0]\n",
							"    month_num = pickup_datetime.month\n",
							"    day_of_month = pickup_datetime.day\n",
							"    day_of_week = pickup_datetime.weekday()\n",
							"    day_of_hour = pickup_datetime.hour\n",
							"    return pd.Series((month_num, day_of_month, day_of_week, day_of_hour))\n",
							"\n",
							"green_taxi_df[[\"month_num\", \"day_of_month\",\"day_of_week\", \"day_of_hour\"]] = green_taxi_df[[\"lpepPickupDatetime\"]].apply(build_time_features, axis=1)\n",
							"\n",
							"green_taxi_df.head(10)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"green_taxi_df.columns"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"columns_to_remove = [\"lpepPickupDatetime\", \"lpepDropoffDatetime\", \"puLocationId\", \"doLocationId\", \"extra\", \"mtaTax\",\n",
							"                     \"improvementSurcharge\", \"tollsAmount\", \"ehailFee\", \"tripType\", \"rateCodeID\", \n",
							"                     \"storeAndFwdFlag\", \"paymentType\", \"fareAmount\", \"tipAmount\",\"puYear\", \"puMonth\"\n",
							"                    ]\n",
							"for col in columns_to_remove:\n",
							"    green_taxi_df.pop(col)\n",
							"    \n",
							"green_taxi_df.head(5)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"green_taxi_df.describe()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"final_df = green_taxi_df.query(\"pickupLatitude>=40.53 and pickupLatitude<=40.88\")\r\n",
							"final_df = final_df.query(\"pickupLongitude>=-74.09 and pickupLongitude<=-73.72\")\r\n",
							"final_df = final_df.query(\"tripDistance>=0.25 and tripDistance<31\")\r\n",
							"final_df = final_df.query(\"passengerCount>0 and totalAmount>0\")\r\n",
							"\r\n",
							"columns_to_remove_for_training = [\"pickupLongitude\", \"pickupLatitude\", \"dropoffLongitude\", \"dropoffLatitude\"]\r\n",
							"for col in columns_to_remove_for_training:\r\n",
							"    final_df.pop(col)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"final_df.describe()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"passengerCount"
									],
									"values": [
										"vendorID"
									],
									"yLabel": "vendorID",
									"xLabel": "passengerCount",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"vendorID\":{\"1\":1487,\"2\":122,\"3\":44,\"4\":7,\"5\":90,\"6\":40}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(final_df)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"source": [
							"## AutoML setup and running experiment\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import azureml.core\n",
							"import logging\n",
							"from azureml.core.workspace import Workspace\n",
							"from azureml.core import Workspace\n",
							"from azureml.core.experiment import Experiment\n",
							"from azureml.train.automl import AutoMLConfig\n",
							"import os\n",
							"\n",
							"subscription_id = os.getenv(\"SUBSCRIPTION_ID\", default=\"c46a9435-c957-4e6c-a0f4-b9a597984773\")\n",
							"resource_group = os.getenv(\"RESOURCE_GROUP\", default=\"mlops\")\n",
							"workspace_name = os.getenv(\"WORKSPACE_NAME\", default=\"mlopsdev\")\n",
							"workspace_region = os.getenv(\"WORKSPACE_REGION\", default=\"Central US\")\n",
							"\n",
							"ws = Workspace(subscription_id = subscription_id, resource_group = resource_group, workspace_name = workspace_name)\n",
							"ws.write_config()"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"source": [
							"from sklearn.model_selection import train_test_split\r\n",
							"\r\n",
							"y_df = final_df.pop(\"totalAmount\")\r\n",
							"x_df = final_df\r\n",
							"\r\n",
							"x_train, x_test, y_train, y_test = train_test_split(x_df, y_df, test_size=0.2, random_state=223)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"source": [
							"import logging\n",
							"\n",
							"automl_settings = {\n",
							"    \"iteration_timeout_minutes\": 2,\n",
							"    \"iterations\": 5,\n",
							"    \"primary_metric\": 'spearman_correlation',\n",
							"    \"preprocess\": True,\n",
							"    \"verbosity\": logging.INFO,\n",
							"    \"n_cross_validations\": 2\n",
							"}"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.train.automl import AutoMLConfig\n",
							"\n",
							"label = \"totalAmount\"\n",
							"\n",
							"automl_config = AutoMLConfig(task='regression',\n",
							"                             debug_log='automl_errors_5.log',\n",
							"#                             compute_target = AMLCompute,\n",
							"                             X=x_train,\n",
							"                             y=y_train,\n",
							"#                             label_column_name = label,\n",
							"                             enable_onnx_compatible_models=True,\n",
							"                             **automl_settings)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.core.experiment import Experiment\n",
							"experiment = Experiment(ws, \"greentaxi-experiment1\")\n",
							"local_run = experiment.submit(automl_config, show_output=True)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Retrieve the best onnx model\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"best_run, onnx_mdl = local_run.get_output(return_onnx_model=True) "
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.automl.runtime.onnx_convert.onnx_converter import OnnxConverter\n",
							"onnx_fl_path = \"./taxi_best_model.onnx\"\n",
							"OnnxConverter.save_onnx_model(onnx_mdl, onnx_fl_path) #save the best onnx model"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 29
					},
					{
						"cell_type": "code",
						"source": [
							"with open(\"taxi_best_model.onnx\", \"wb\") as f:\n",
							"    f.write(onnx_mdl.SerializeToString())"
						],
						"outputs": [],
						"execution_count": 30
					},
					{
						"cell_type": "code",
						"source": [
							"import os, uuid\n",
							"from azure.storage.blob import BlobServiceClient, BlobClient, ContainerClient, __version__\n",
							"\n",
							"try:\n",
							"    print(\"Azure Blob storage v\" + __version__ + \" - Python quickstart sample\")\n",
							"    # Quick start code goes here\n",
							"except Exception as ex:\n",
							"    print('Exception:')\n",
							"    print(ex)"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Export ONNX model\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from azure.storage.blob import BlobServiceClient\n",
							"from azure.storage.blob import BlobClient\n",
							"\n",
							"connection_string = \"DefaultEndpointsProtocol=https;AccountName=accsynapsestorage;AccountKey=ex1PbXf87GVGWh2OkZnBETN0wDCmlgzHDGpPR4+E/+DbJ3MYSeJHgec5lIgOkGOp9m13qVa7dWRXS52CTeRxRQ==;EndpointSuffix=core.windows.net\"\n",
							"service = BlobServiceClient.from_connection_string(conn_str=connection_string)\n",
							"\n",
							"blob = BlobClient.from_connection_string(conn_str=connection_string, container_name=\"taximodel\", blob_name=\"taxiscore/taxi_best_model.onnx\")\n",
							"\n",
							"with open(\"./taxi_best_model.onnx\", \"rb\") as data:\n",
							"    blob.upload_blob(data,overwrite=True)"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"source": [
							"from azure.storage.blob import *"
						],
						"outputs": [],
						"execution_count": 31
					},
					{
						"cell_type": "code",
						"source": [
							"# Create the BlockBlockService that the system uses to call the Blob service for the storage account.\n",
							"block_blob_service = BlockBlobService(\n",
							"    account_name='accsynapsestorage', account_key='ex1PbXf87GVGWh2OkZnBETN0wDCmlgzHDGpPR4+E/+DbJ3MYSeJHgec5lIgOkGOp9m13qVa7dWRXS52CTeRxRQ==')\n",
							"\n",
							"# Create a container called 'quickstartblobs'.\n",
							"container_name = 'taximodel'\n",
							"block_blob_service.create_container(container_name)"
						],
						"outputs": [],
						"execution_count": 32
					},
					{
						"cell_type": "code",
						"source": [
							"# Upload the created file, use local_file_name for the blob name.\n",
							"#block_blob_service.create_blob_from_path(\n",
							"#    container_name, local_file_name, full_path_to_file)\n",
							"\n",
							"filename = \"./taxi_best_model.onnx\"\n",
							"#block_blob_service.create_blob_from_path(container_name,\"taxi_best_model.onnx\",filename)\n",
							"\n",
							"#with open(\"./taxi_best_model.onnx\", \"rb\") as data:\n",
							"#    block_blob_service.create_blob_from_path(data,overwrite=True)\n",
							"\n",
							"with open(\"./taxi_best_model.onnx\", \"rb\") as data:\n",
							"    block_blob_service.create_blob_from_path(container_name,\"taxi_best_model.onnx\",filename)"
						],
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "code",
						"source": [
							"\n",
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/04 Analyze data with Scala')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('04 Analyze data with Scala_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"## Read Data From SQL Pool\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df_City = spark.read.sqlanalytics(\"accsynapsepools.wwi.DimCity\") \n",
							"val df_FactOrder = spark.read.sqlanalytics(\"accsynapsepools.wwi.FactOrder\")\n",
							" // df.show(10)\n",
							" //https://github.com/prlangad/AnalyticsPipeline"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"df_City.createOrReplaceTempView(\"city\")\n",
							"df_FactOrder.createOrReplaceTempView(\"factOrder\")"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data Exploration and Analysis\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df = spark.sql(\"select * from factOrder\")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Use of Magic commands\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"WWICityID"
									],
									"values": [
										"CityKey"
									],
									"yLabel": "CityKey",
									"xLabel": "WWICityID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"CityKey\":{\"154\":115751,\"185\":115464,\"267\":115758,\"349\":116031,\"439\":115765,\"517\":113993,\"570\":115772,\"595\":115471,\"600\":103794,\"662\":115779,\"807\":115786,\"882\":116038,\"962\":114000,\"995\":115793,\"1066\":115478,\"1197\":115800,\"1269\":115807,\"1282\":108326,\"1363\":114007,\"1406\":116045,\"1476\":115814,\"1509\":103801,\"1543\":115485,\"1621\":115821,\"1665\":114014,\"1813\":115828,\"1839\":11883,\"1846\":11890,\"1853\":11897,\"1860\":11904,\"1867\":11911,\"1918\":116052,\"1942\":113510,\"2034\":108333,\"2064\":115835,\"2086\":115492,\"2168\":113517,\"2288\":116059,\"2328\":115842,\"2384\":113524,\"2469\":11757,\"2476\":11764,\"2483\":11771,\"2490\":11778,\"2497\":11785,\"2562\":115849,\"2566\":103808,\"2578\":113531,\"2611\":116066,\"2630\":115499,\"2657\":114021,\"2733\":115856,\"2874\":116073,\"2903\":113538,\"2921\":30181,\"2928\":30188,\"2935\":146058,\"2942\":30202,\"2949\":30209,\"2972\":115870,\"3076\":113545,\"3085\":115877,\"3191\":113552,\"3211\":114028,\"3249\":116080,\"3343\":115884,\"3372\":113559,\"3414\":115506,\"3474\":115891,\"3494\":108340,\"3519\":114035,\"3600\":115898,\"3608\":113566,\"3676\":116087,\"3772\":115905,\"3783\":103815,\"3860\":113573,\"3874\":114042,\"4006\":115912,\"4012\":116094,\"4071\":113580,\"4195\":108347,\"4207\":115513,\"4218\":113587,\"4265\":114049,\"4349\":113594,\"4449\":115919,\"4484\":116101,\"4548\":11918,\"4555\":11925,\"4562\":11932,\"4569\":11939,\"4611\":12016,\"4618\":12037,\"4625\":12044,\"4640\":113601,\"4646\":114056,\"4683\":115520,\"4700\":115926,\"4832\":113608,\"4883\":115933,\"4934\":115940,\"4986\":115947,\"5052\":116108,\"5060\":115954,\"5069\":113615,\"5089\":11792,\"5096\":11799,\"5103\":11806,\"5108\":114063,\"5110\":11813,\"5157\":103822,\"5228\":115961,\"5235\":115527,\"5323\":115968,\"5429\":115975,\"5480\":113622,\"5533\":114070,\"5557\":115982,\"5581\":116115,\"5625\":115989,\"5640\":113629,\"5687\":108354,\"5691\":11981,\"5698\":11988,\"5704\":115534,\"5705\":11995,\"5712\":12002,\"5719\":12009,\"5799\":114077,\"5936\":113636,\"6018\":12079,\"6025\":12086,\"6032\":12093,\"6039\":12100,\"6046\":12107,\"6150\":116122,\"6227\":114084,\"6281\":103829,\"6299\":30993,\"6306\":31000,\"6313\":31007,\"6320\":31014,\"6327\":31021,\"6353\":113643,\"6377\":115541,\"6556\":113650,\"6573\":113713,\"6776\":113720,\"6831\":114091,\"6833\":113657,\"6879\":30447,\"6887\":30454,\"6894\":30461,\"6901\":30468,\"6908\":30475,\"6950\":113727,\"7022\":113664,\"7142\":113734,\"7179\":113671,\"7215\":114098,\"7262\":113741,\"7366\":108361,\"7417\":114105,\"7433\":113678,\"7454\":103836,\"7524\":115548,\"7553\":113748,\"7638\":113685,\"7673\":113755,\"7804\":113762,\"7862\":12457,\"7869\":128019,\"7876\":12471,\"7883\":12478,\"7911\":113769,\"7920\":114112,\"8031\":113776,\"8069\":113692,\"8106\":114119,\"8196\":115562,\"8239\":11946,\"8246\":11953,\"8253\":11960,\"8260\":11967,\"8267\":11974,\"8287\":113699,\"8290\":113783,\"8315\":12023,\"8322\":12030,\"8390\":113706,\"8481\":113790,\"8563\":104690,\"8579\":115569,\"8729\":12051,\"8736\":12058,\"8742\":104697,\"8743\":12065,\"8747\":103843,\"8750\":12072,\"8758\":11820,\"8765\":11827,\"8766\":113797,\"8767\":114126,\"8772\":11834,\"8779\":11841,\"8786\":11848,\"8806\":113804,\"8912\":104704,\"8939\":108368,\"8967\":113811,\"9025\":115576,\"9040\":30720,\"9047\":30727,\"9054\":30734,\"9061\":30741,\"9068\":30748,\"9084\":104711,\"9101\":113818,\"9133\":114133,\"9208\":113825,\"9333\":104718,\"9354\":113832,\"9381\":115583,\"9484\":104725,\"9564\":113839,\"9590\":114140,\"9723\":113846,\"9843\":104732,\"9848\":108375,\"9860\":12485,\"9867\":12492,\"9869\":113853,\"9874\":12499,\"9881\":12506,\"9888\":12513,\"9957\":103850,\"9981\":114147,\"10030\":115590,\"10066\":113860,\"10097\":12520,\"10104\":12527,\"10111\":12534,\"10118\":12541,\"10125\":12548,\"10135\":104739,\"10197\":113867,\"10217\":114154,\"10226\":113874,\"10274\":113881,\"10394\":11855,\"10401\":11862,\"10408\":11869,\"10415\":11876,\"10453\":114161,\"10461\":104746,\"10566\":104753,\"10582\":113888,\"10611\":12114,\"10618\":12121,\"10625\":12128,\"10632\":12135,\"10639\":12142,\"10820\":113895,\"10845\":104760,\"10852\":115597,\"10992\":114168,\"11015\":104767,\"11031\":103857,\"11064\":113902,\"11072\":104774,\"11097\":108382,\"11302\":104781,\"11354\":113909,\"11470\":104788,\"11512\":113916,\"11662\":104795,\"11674\":113923,\"11718\":114175,\"11804\":113930,\"11805\":115604,\"11820\":104802,\"11883\":113937,\"11979\":12555,\"11986\":12562,\"11993\":12569,\"12000\":12576,\"12007\":12583,\"12033\":104809,\"12037\":113944,\"12100\":114182,\"12252\":104816,\"12301\":113951,\"12325\":103864,\"12342\":115611,\"12395\":104823,\"12431\":114189,\"12448\":113958,\"12566\":104830,\"12646\":113965,\"12706\":114196,\"12845\":104837,\"12873\":113972,\"12908\":115618,\"12995\":114203,\"13017\":104844,\"13100\":12590,\"13107\":12597,\"13114\":12604,\"13117\":104851,\"13121\":12611,\"13128\":12618,\"13176\":113979,\"13267\":115625,\"13272\":104410,\"13320\":114210,\"13327\":104858,\"13356\":113986,\"13455\":103871,\"13461\":104417,\"13466\":108389,\"13472\":114259,\"13546\":104865,\"13573\":104424,\"13597\":114217,\"13668\":12625,\"13675\":12632,\"13682\":12639,\"13683\":104872,\"13689\":12646,\"13690\":115632,\"13734\":114266,\"13779\":104879,\"13903\":114273,\"13936\":108396,\"13941\":104431,\"13943\":104886,\"14009\":114224,\"14087\":114280,\"14088\":103878,\"14174\":114287,\"14245\":104438,\"14311\":114231,\"14312\":104893,\"14329\":115639,\"14421\":114294,\"14450\":104445,\"14506\":103885,\"14562\":12653,\"14569\":12660,\"14576\":12667,\"14583\":12674,\"14590\":12681,\"14602\":104900,\"14610\":115646,\"14786\":114301,\"14787\":108403,\"14816\":104907,\"14883\":104452,\"14961\":114238,\"15011\":104914,\"15074\":114308,\"15077\":115653,\"15248\":114315,\"15258\":104921,\"15307\":104459,\"15335\":114245,\"15408\":114322,\"15522\":104928,\"15531\":103892,\"15585\":114329,\"15711\":115660,\"15747\":104935,\"15819\":114336,\"15894\":11687,\"15901\":11694,\"15908\":11701,\"15915\":11708,\"15922\":11715,\"15939\":104466,\"15951\":104942,\"16034\":114252,\"16061\":104949,\"16218\":104956,\"16366\":104963,\"16372\":104473,\"16389\":115667,\"16570\":104970,\"16615\":104480,\"16616\":12688,\"16623\":12695,\"16627\":108410,\"16630\":12702,\"16637\":12709,\"16644\":12716,\"16715\":115674,\"16806\":103899,\"16957\":104487,\"17024\":108417,\"17111\":115681,\"17163\":104494,\"17385\":104501,\"17468\":12723,\"17475\":12730,\"17482\":12737,\"17489\":12744,\"17496\":12751,\"17539\":115688,\"17696\":104508,\"17910\":115695,\"17954\":104977,\"18039\":104515,\"18084\":109201,\"18234\":109208,\"18256\":104522,\"18309\":12758,\"18316\":12765,\"18323\":12772,\"18330\":12779,\"18335\":115702,\"18337\":12786,\"18360\":109215,\"18452\":109222,\"18595\":109229,\"18607\":104984,\"18648\":103906,\"18719\":109236,\"18745\":104529,\"18976\":104536,\"19005\":115709,\"19112\":109243,\"19114\":12793,\"19121\":12800,\"19122\":104543,\"19152\":104991,\"19340\":109250,\"19389\":104550,\"19515\":109257,\"19530\":104998,\"19594\":103913,\"19654\":109264,\"19711\":104557,\"19795\":105005,\"19864\":109271,\"19875\":115716,\"19938\":104564,\"20004\":109103,\"20021\":109110,\"20166\":109117,\"20168\":109278,\"20223\":108424,\"20248\":11561,\"20255\":11568,\"20262\":11575,\"20269\":11582,\"20318\":104571,\"20366\":109285,\"20413\":109124,\"20491\":109131,\"20492\":103920,\"20589\":109292,\"20629\":115723,\"20733\":109138,\"20790\":104578,\"20831\":109299,\"20903\":109306,\"20963\":109145,\"21026\":108431,\"21057\":104585,\"21081\":109313,\"21086\":11589,\"21093\":11596,\"21100\":11603,\"21107\":11610,\"21114\":11617,\"21311\":109320,\"21314\":109152,\"21396\":115730,\"21557\":109159,\"21577\":12352,\"21578\":104592,\"21584\":12359,\"21591\":12366,\"21597\":109327,\"21598\":12373,\"21605\":12380,\"21761\":115737,\"21765\":109334,\"21817\":109166,\"21853\":104599,\"21857\":109341,\"21918\":103927,\"21938\":109173,\"21959\":11624,\"21966\":11631,\"21973\":11638,\"21980\":11645,\"21987\":11652,\"22025\":109348,\"22199\":109180,\"22220\":115744,\"22332\":109355,\"22372\":104606,\"22474\":109362,\"22496\":109187,\"22520\":12317,\"22525\":12387,\"22532\":12394,\"22539\":12401,\"22546\":12408,\"22553\":12415,\"22575\":104613,\"22576\":109194,\"22663\":109369,\"22785\":108438,\"22795\":109376,\"22844\":11659,\"22851\":11666,\"22858\":11673,\"22865\":11680,\"22903\":104620,\"23085\":109383,\"23118\":103934,\"23120\":104627,\"23234\":109390,\"23286\":108445,\"23422\":12422,\"23429\":12429,\"23436\":12436,\"23443\":12443,\"23450\":12450,\"23484\":109397,\"23651\":104634,\"23680\":109404,\"23811\":104046,\"23948\":103941,\"24020\":104641,\"24265\":103948,\"24308\":104053,\"24454\":104648,\"24615\":108452,\"24629\":12149,\"24636\":12156,\"24643\":12163,\"24650\":12170,\"24657\":12177,\"24661\":12247,\"24668\":12254,\"24675\":12261,\"24682\":12268,\"24689\":12275,\"24747\":103955,\"24830\":108459,\"24933\":104060,\"25039\":104655,\"25314\":104067,\"25716\":103962,\"25717\":104662,\"25826\":12184,\"25834\":12191,\"25841\":12198,\"25848\":12205,\"25855\":12212,\"25860\":12282,\"25866\":104074,\"25867\":12289,\"25874\":12296,\"25881\":12303,\"25888\":12310,\"25897\":12324,\"25904\":12331,\"25911\":12338,\"25918\":12345,\"26105\":108466,\"26230\":104669,\"26338\":104081,\"26661\":104676,\"26853\":113475,\"26909\":104088,\"26955\":108830,\"26972\":12219,\"26979\":12226,\"26986\":12233,\"26994\":12240,\"26996\":113482,\"27041\":108837,\"27045\":104095,\"27051\":104683,\"27092\":113489,\"27136\":104102,\"27147\":103969,\"27163\":108844,\"27189\":108473,\"27203\":113496,\"27284\":108851,\"27360\":113503,\"27390\":11722,\"27397\":11729,\"27404\":11736,\"27411\":11743,\"27418\":11750,\"27444\":104109,\"27462\":108578,\"27469\":108858,\"27601\":108585,\"27660\":108865,\"27760\":108872,\"27865\":108592,\"27924\":104116,\"28090\":108480,\"28143\":108599,\"28148\":108879,\"28237\":104123,\"28278\":108886,\"28285\":108893,\"28403\":108606,\"28504\":108900,\"28521\":104130,\"28579\":108907,\"28768\":108613,\"28799\":223986,\"28827\":113307,\"28831\":104137,\"28850\":103976,\"28984\":224000,\"29012\":113314,\"29032\":108620,\"29046\":224014,\"29154\":104144,\"29196\":108487,\"29241\":113321,\"29291\":224028,\"29335\":113230,\"29349\":104151,\"29419\":224042,\"29423\":108627,\"29599\":113328,\"29608\":108634,\"29614\":104158,\"29619\":224056,\"29770\":113335,\"29799\":224070,\"29806\":104165,\"29978\":113237,\"29979\":108641,\"30107\":108494,\"30117\":113342,\"30232\":103983,\"30238\":104172,\"30264\":224084,\"30344\":224098,\"30361\":224112,\"30378\":224126,\"30399\":224140,\"30415\":224154,\"30435\":113244,\"30439\":224168,\"30520\":104179,\"30553\":224182,\"30582\":224196,\"30599\":224210,\"30614\":108648,\"30659\":113349,\"30686\":224224,\"30802\":113356,\"30857\":104186,\"30916\":103990,\"30929\":108655,\"30930\":224238,\"30988\":104193,\"31006\":113251,\"31024\":108662,\"31037\":224252,\"31191\":104200,\"31236\":224266,\"31266\":104305,\"31268\":113363,\"31280\":108501,\"31404\":113370,\"31422\":104312,\"31471\":104319,\"31485\":224280,\"31490\":108669,\"31601\":104207,\"31605\":224294,\"31629\":113258,\"31651\":104326,\"31707\":113377,\"31736\":108676,\"31742\":224308,\"31768\":104333,\"31821\":224322,\"31826\":104340,\"31906\":113265,\"31916\":108683,\"31959\":224336,\"31999\":104347,\"32012\":104214,\"32077\":224350,\"32109\":104354,\"32112\":108508,\"32141\":113384,\"32153\":115261,\"32214\":104361,\"32231\":115268,\"32247\":104221,\"32278\":108690,\"32311\":104368,\"32345\":104228,\"32377\":113391,\"32429\":104375,\"32460\":108697,\"32525\":113398,\"32528\":104382,\"32539\":115275,\"32559\":104235,\"32656\":103997,\"32664\":113272,\"32690\":104242,\"32761\":104389,\"32776\":108704,\"32779\":113405,\"32801\":30048,\"32808\":30055,\"32815\":30062,\"32822\":30069,\"32829\":30076,\"32834\":108515,\"32836\":30083,\"32842\":104396,\"32843\":30090,\"32850\":30097,\"32857\":30104,\"32864\":30111,\"32866\":115282,\"32871\":30118,\"32878\":30125,\"32879\":113412,\"32885\":30132,\"32892\":30139,\"32899\":30146,\"32900\":113279,\"32906\":30153,\"32913\":30160,\"32916\":104249,\"32920\":30167,\"32927\":30174,\"32948\":104403,\"32969\":30216,\"32976\":30223,\"32983\":30230,\"32990\":30237,\"32997\":30244,\"33004\":30251,\"33011\":30258,\"33018\":30265,\"33025\":30272,\"33032\":30279,\"33039\":30286,\"33046\":30293,\"33049\":113419,\"33053\":30300,\"33060\":30307,\"33067\":30314,\"33074\":30321,\"33081\":30328,\"33088\":30335,\"33095\":30342,\"33102\":30349,\"33109\":30356,\"33116\":30363,\"33119\":104004,\"33123\":30370,\"33130\":30377,\"33137\":115289,\"33138\":30384,\"33145\":30391,\"33152\":30398,\"33159\":30405,\"33166\":30412,\"33173\":30419,\"33180\":30426,\"33188\":30433,\"33192\":113426,\"33195\":30440,\"33237\":30482,\"33244\":30489,\"33251\":30496,\"33258\":30503,\"33265\":30510,\"33267\":108711,\"33272\":30517,\"33279\":115296,\"33281\":30524,\"33288\":30531,\"33296\":30538,\"33302\":104256,\"33303\":30545,\"33310\":30552,\"33317\":30559,\"33324\":30566,\"33331\":30573,\"33338\":30580,\"33345\":30587,\"33352\":30594,\"33356\":115303,\"33359\":30601,\"33366\":30608,\"33374\":30615,\"33381\":30622,\"33388\":30629,\"33392\":108522,\"33395\":30636,\"33402\":30643,\"33410\":30650,\"33417\":138906,\"33424\":30664,\"33431\":30671,\"33438\":30678,\"33440\":113286,\"33445\":30685,\"33452\":30692,\"33459\":30699,\"33466\":30706,\"33473\":30713,\"33481\":113433,\"33484\":108718,\"33508\":104263,\"33515\":30755,\"33522\":30762,\"33529\":30769,\"33536\":30776,\"33543\":30783,\"33550\":30790,\"33557\":30797,\"33564\":30804,\"33569\":115310,\"33571\":30811,\"33578\":30818,\"33586\":30825,\"33593\":30832,\"33600\":30839,\"33607\":30846,\"33614\":30853,\"33621\":30860,\"33628\":30867,\"33635\":30874,\"33642\":30881,\"33649\":30888,\"33656\":30895,\"33663\":30902,\"33670\":30909,\"33677\":30916,\"33684\":30923,\"33691\":30930,\"33698\":30937,\"33705\":30944,\"33713\":30951,\"33720\":30958,\"33726\":115317,\"33727\":30965,\"33734\":30972,\"33741\":30979,\"33742\":108725,\"33748\":30986,\"33751\":104011,\"33799\":115324,\"33809\":108256,\"33943\":113440,\"33958\":113293,\"33976\":115331,\"33983\":108732,\"34005\":31028,\"34012\":31035,\"34019\":31042,\"34026\":31049,\"34033\":31056,\"34040\":31063,\"34047\":31070,\"34054\":31077,\"34060\":113447,\"34061\":31084,\"34068\":31091,\"34075\":31098,\"34077\":104270,\"34082\":31105,\"34089\":31112,\"34096\":31119,\"34103\":31126,\"34110\":31133,\"34117\":31140,\"34124\":31147,\"34131\":31154,\"34138\":31161,\"34145\":31168,\"34146\":115338,\"34152\":31175,\"34159\":31182,\"34166\":31189,\"34173\":31196,\"34180\":31203,\"34183\":108263,\"34187\":31210,\"34194\":31217,\"34201\":31224,\"34208\":31231,\"34215\":31238,\"34222\":31245,\"34238\":115345,\"34251\":108739,\"34303\":113300,\"34307\":113454,\"34356\":115352,\"34382\":104277,\"34473\":115359,\"34551\":108746,\"34580\":113461,\"34602\":104284,\"34609\":115366,\"34613\":108270,\"34685\":115373,\"34799\":113468,\"34803\":108753,\"34805\":104018,\"34822\":108277,\"34946\":108760,\"35011\":115380,\"35045\":104291,\"35046\":115387,\"35157\":108767,\"35165\":104298,\"35227\":115394,\"35252\":108529,\"35346\":108284,\"35389\":115401,\"35476\":108774,\"35485\":115408,\"35742\":115415,\"35827\":108781,\"35877\":108291,\"35897\":108536,\"36035\":115422,\"36080\":104025,\"36129\":108788,\"36284\":115429,\"36462\":108543,\"36533\":115436,\"36630\":108795,\"36662\":108550,\"36723\":108298,\"36747\":115443,\"36891\":115450,\"36923\":108557,\"37030\":104032,\"37123\":115457,\"37158\":108802,\"37178\":108305,\"37346\":108564,\"37379\":115996,\"37428\":108312,\"37569\":116003,\"37579\":108809,\"37724\":116010,\"37770\":108816,\"37811\":108571,\"37815\":104039,\"37987\":108319,\"38038\":116017,\"38052\":108823,\"38107\":116024}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql \n",
							"SELECT * FROM city"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Join Data\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"StateProvince"
									],
									"values": [
										"TotalOrders"
									],
									"yLabel": "TotalOrders",
									"xLabel": "StateProvince",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"TotalOrders\":{\"California\":484498,\"Florida\":298035,\"Minnesota\":271092,\"Missouri\":255080,\"New Jersey\":270617,\"New Mexico\":257567,\"New York\":470182,\"Ohio\":302124,\"Pennsylvania\":531114,\"Texas\":651960}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"val df = (spark.sql(\"\"\"SELECT city.StateProvince, SUM(Quantity) as TotalOrders \n",
							"                    FROM factorder \n",
							"                    JOIN  city on city.CityKey=factorder.CityKey \n",
							"                    group by city.StateProvince \n",
							"                    order by SUM(Quantity) desc \"\"\"))\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Write result to ADLS Gen2 in Parquet format\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Primary storage info\n",
							"val account_name = \"accsynapsestorage\" // fill in your primary account name\n",
							"val container_name = \"curateddata\" // fill in your container name\n",
							"val relative_path = \"ordersumamtion\" // fill in your relative folder path\n",
							"\n",
							"val adls_path = f\"abfss://$container_name@$account_name.dfs.core.windows.net/$relative_path/\"\n",
							"print(\"Primary storage account path: \" + adls_path)\n",
							"val parquet_path = adls_path + \"OrdersByState\"\n",
							"df.write.mode(\"Overwrite\").parquet(parquet_path)\n",
							""
						],
						"outputs": [],
						"execution_count": 7
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AMLtest1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('AMLtest1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"blob_account_name = \"azureopendatastorage\"\n",
							"blob_container_name = \"nyctlc\"\n",
							"blob_relative_path = \"yellow\"\n",
							"blob_sas_token = r\"\""
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"# Allow Spark to read from Blob remotely\n",
							"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
							"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),blob_sas_token)\n",
							"\n",
							"# Spark read parquet, note that it won't load any data yet by now\n",
							"df = spark.read.parquet(wasbs_path)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"# Create an ingestion filter\n",
							"start_date = '2015-01-01 00:00:00'\n",
							"end_date = '2015-12-31 00:00:00'\n",
							"\n",
							"filtered_df = df.filter('tpepPickupDateTime > \"' + start_date + '\" and tpepPickupDateTime < \"' + end_date + '\"')\n",
							"\n",
							"filtered_df.describe().show()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"from datetime import datetime\n",
							"from pyspark.sql.functions import *\n",
							"\n",
							"# To make development easier, faster and less expensive down sample for now\n",
							"sampled_taxi_df = filtered_df.sample(True, 0.001, seed=1234)\n",
							"\n",
							"taxi_df = sampled_taxi_df.select('vendorID', 'passengerCount', 'tripDistance',  'startLon', 'startLat', 'endLon' \\\n",
							"                                , 'endLat', 'paymentType', 'fareAmount', 'tipAmount'\\\n",
							"                                , column('puMonth').alias('month_num') \\\n",
							"                                , date_format('tpepPickupDateTime', 'hh').alias('hour_of_day')\\\n",
							"                                , date_format('tpepPickupDateTime', 'EEEE').alias('day_of_week')\\\n",
							"                                , dayofmonth(col('tpepPickupDateTime')).alias('day_of_month')\n",
							"                                ,(unix_timestamp(col('tpepDropoffDateTime')) - unix_timestamp(col('tpepPickupDateTime'))).alias('trip_time'))\\\n",
							"                        .filter((sampled_taxi_df.passengerCount > 0) & (sampled_taxi_df.passengerCount < 8)\\\n",
							"                                & (sampled_taxi_df.tipAmount >= 0)\\\n",
							"                                & (sampled_taxi_df.fareAmount >= 1) & (sampled_taxi_df.fareAmount <= 250)\\\n",
							"                                & (sampled_taxi_df.tipAmount < sampled_taxi_df.fareAmount)\\\n",
							"                                & (sampled_taxi_df.tripDistance > 0) & (sampled_taxi_df.tripDistance <= 200)\\\n",
							"                                & (sampled_taxi_df.rateCodeId <= 5)\\\n",
							"                                & (sampled_taxi_df.paymentType.isin({\"1\", \"2\"})))\n",
							"taxi_df.show(10)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"# Random split dataset using spark, convert Spark to Pandas\n",
							"training_data, validation_data = taxi_df.randomSplit([0.8,0.2], 223)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.core import Workspace\n",
							"\n",
							"# Enter your workspace subscription, resource group, name, and region.\n",
							"subscription_id = \"c46a9435-c957-4e6c-a0f4-b9a597984773\" #you should be owner or contributor\n",
							"resource_group = \"mlops\" #you should be owner or contributor\n",
							"workspace_name = \"mlopsdev\" #your workspace name\n",
							"#workspace_region = \"<enter workspace region>\" #your region\n",
							"\n",
							"ws = Workspace(workspace_name = workspace_name,\n",
							"               subscription_id = subscription_id,\n",
							"               resource_group = resource_group)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"import pandas \n",
							"from azureml.core import Dataset\n",
							"\n",
							"# Get the AML Default Datastore\n",
							"datastore = ws.get_default_datastore()\n",
							"training_pd = training_data.toPandas().to_csv('training_pd.csv', index=False)\n",
							"\n",
							"# Convert into AML Tabular Dataset\n",
							"datastore.upload_files(files = ['training_pd.csv'],\n",
							"                       target_path = 'train-dataset/tabular/',\n",
							"                       overwrite = True,\n",
							"                       show_progress = True)\n",
							"dataset_training = Dataset.Tabular.from_delimited_files(path = [(datastore, 'train-dataset/tabular/training_pd.csv')])"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"import logging\n",
							"\n",
							"automl_settings = {\n",
							"    \"iteration_timeout_minutes\": 10,\n",
							"    \"experiment_timeout_minutes\": 30,\n",
							"    \"enable_early_stopping\": True,\n",
							"    \"primary_metric\": 'r2_score',\n",
							"    \"featurization\": 'auto',\n",
							"    \"verbosity\": logging.INFO,\n",
							"    \"n_cross_validations\": 2}"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.train.automl import AutoMLConfig\n",
							"\n",
							"automl_config = AutoMLConfig(task='regression',\n",
							"                             debug_log='automated_ml_errors.log',\n",
							"                             training_data = dataset_training,\n",
							"                             spark_context = sc,\n",
							"                             model_explainability = False, \n",
							"                             label_column_name =\"fareAmount\",**automl_settings)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.core.experiment import Experiment\n",
							"\n",
							"# Start an experiment in Azure Machine Learning\n",
							"experiment = Experiment(ws, \"aml-synapse-regression\")\n",
							"tags = {\"Synapse\": \"regression\"}\n",
							"local_run = experiment.submit(automl_config, show_output=True, tags = tags)\n",
							"\n",
							"# Use the get_details function to retrieve the detailed output for the run.\n",
							"run_details = local_run.get_details()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"# Get best model\n",
							"best_run, fitted_model = local_run.get_output()"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"# Test best model accuracy\n",
							"validation_data_pd = validation_data.toPandas()\n",
							"y_test = validation_data_pd.pop(\"fareAmount\").to_frame()\n",
							"y_predict = fitted_model.predict(validation_data_pd)"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"from sklearn.metrics import mean_squared_error\n",
							"from math import sqrt\n",
							"\n",
							"# Calculate Root Mean Square Error\n",
							"y_actual = y_test.values.flatten().tolist()\n",
							"rmse = sqrt(mean_squared_error(y_actual, y_predict))\n",
							"\n",
							"print(\"Root Mean Square Error:\")\n",
							"print(rmse)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							"# Calculate MAPE and Model Accuracy \n",
							"sum_actuals = sum_errors = 0\n",
							"\n",
							"for actual_val, predict_val in zip(y_actual, y_predict):\n",
							"    abs_error = actual_val - predict_val\n",
							"    if abs_error < 0:\n",
							"        abs_error = abs_error * -1\n",
							"\n",
							"    sum_errors = sum_errors + abs_error\n",
							"    sum_actuals = sum_actuals + actual_val\n",
							"\n",
							"mean_abs_percent_error = sum_errors / sum_actuals\n",
							"\n",
							"print(\"Model MAPE:\")\n",
							"print(mean_abs_percent_error)\n",
							"print()\n",
							"print(\"Model Accuracy:\")\n",
							"print(1 - mean_abs_percent_error)"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\n",
							"import numpy as np\n",
							"from sklearn.metrics import mean_squared_error, r2_score\n",
							"\n",
							"# Calculate the R2 score using the predicted and actual fare prices\n",
							"y_test_actual = y_test[\"fareAmount\"]\n",
							"r2 = r2_score(y_test_actual, y_predict)\n",
							"\n",
							"# Plot the Actual vs Predicted Fare Amount Values\n",
							"plt.style.use('ggplot')\n",
							"plt.figure(figsize=(10, 7))\n",
							"plt.scatter(y_test_actual,y_predict)\n",
							"plt.plot([np.min(y_test_actual), np.max(y_test_actual)], [np.min(y_test_actual), np.max(y_test_actual)], color='lightblue')\n",
							"plt.xlabel(\"Actual Fare Amount\")\n",
							"plt.ylabel(\"Predicted Fare Amount\")\n",
							"plt.title(\"Actual vs Predicted Fare Amont R^2={}\".format(r2))\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"source": [
							"description = 'My AutoML Model'\n",
							"model_path='outputs/model.pkl'\n",
							"model = best_run.register_model(model_name = 'NYCGreenTaxiModel', model_path = model_path, description = description)\n",
							"print(model.name, model.version)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLRun')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('AzureMLRun_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from azureml.core import Workspace"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"import azureml.core\n",
							"print(azureml.core.VERSION)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql import SparkSession\n",
							"\n",
							"sc = SparkSession.builder.getOrCreate()\n",
							"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\n",
							"tenantid = token_library.getConnectionStringAsMap(\"Keyvaultacc\").get(\"tenantid\")\n",
							"svcpid = token_library.getConnectionStringAsMap(\"Keyvaultacc\").get(\"svcpid\")\n",
							"scvpsecret = token_library.getConnectionStringAsMap(\"Keyvaultacc\").get(\"scvpsecret\")\n",
							"#connection_string = token_library.getConnectionString(\"Keyvaultacc\")\n",
							"print(tenantid)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.core.authentication import ServicePrincipalAuthentication\n",
							"\n",
							"sp = ServicePrincipalAuthentication(tenant_id=\"your-tenant-id\", # tenantID\n",
							"                                    service_principal_id=\"your-client-id\", # clientId\n",
							"                                    service_principal_password=\"your-client-secret\") # clientSecret"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.core import Workspace\n",
							"\n",
							"ws = Workspace.get(name=\"ml-example\",\n",
							"                   auth=sp,\n",
							"                   subscription_id=\"your-sub-id\")\n",
							"ws.get_details()"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLSynapse')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('AzureMLSynapse_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLTips')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('AzureMLTips_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from azureml.core import Workspace"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"ws = Workspace.get(name=\"mlopsdev\", subscription_id='c46a9435-c957-4e6c-a0f4-b9a597984773', resource_group='mlops')"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print('Workspace name: ' + ws.name, \r\n",
							"      'Azure region: ' + ws.location, \r\n",
							"      'Subscription id: ' + ws.subscription_id, \r\n",
							"      'Resource group: ' + ws.resource_group, sep = '\\n')"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"ws.write_config(path='.azureml')"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"ws = Workspace.from_config()\r\n",
							"ws.get_details()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.core import Workspace\n",
							"from azureml.core.compute import ComputeTarget, AmlCompute\n",
							"from azureml.core.compute_target import ComputeTargetException\n",
							"\n",
							"ws = Workspace.from_config() # This automatically looks for a directory .azureml\n",
							"\n",
							"# Choose a name for your CPU cluster\n",
							"cpu_cluster_name = \"cpu-cluster1\"\n",
							"\n",
							"# Verify that the cluster does not exist already\n",
							"try:\n",
							"    cpu_cluster = ComputeTarget(workspace=ws, name=cpu_cluster_name)\n",
							"    print('Found existing cluster, use it.')\n",
							"except ComputeTargetException:\n",
							"    compute_config = AmlCompute.provisioning_configuration(vm_size='STANDARD_D2_V2',\n",
							"                                                           idle_seconds_before_scaledown=2400,\n",
							"                                                           min_nodes=0,\n",
							"                                                           max_nodes=4)\n",
							"    cpu_cluster = ComputeTarget.create(ws, cpu_cluster_name, compute_config)\n",
							"\n",
							"cpu_cluster.wait_for_completion(show_output=True)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.opendatasets import NycTlcGreen\r\n",
							"import pandas as pd\r\n",
							"from datetime import datetime\r\n",
							"from dateutil.relativedelta import relativedelta"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"green_taxi_df = pd.DataFrame([])\r\n",
							"start = datetime.strptime(\"1/1/2015\",\"%m/%d/%Y\")\r\n",
							"end = datetime.strptime(\"1/31/2015\",\"%m/%d/%Y\")\r\n",
							"\r\n",
							"for sample_month in range(12):\r\n",
							"    temp_df_green = NycTlcGreen(start + relativedelta(months=sample_month), end + relativedelta(months=sample_month)) \\\r\n",
							"        .to_pandas_dataframe()\r\n",
							"    green_taxi_df = green_taxi_df.append(temp_df_green.sample(2000))\r\n",
							"\r\n",
							"green_taxi_df.head(10)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"display(green_taxi_df)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"def build_time_features(vector):\r\n",
							"    pickup_datetime = vector[0]\r\n",
							"    month_num = pickup_datetime.month\r\n",
							"    day_of_month = pickup_datetime.day\r\n",
							"    day_of_week = pickup_datetime.weekday()\r\n",
							"    hour_of_day = pickup_datetime.hour\r\n",
							"\r\n",
							"    return pd.Series((month_num, day_of_month, day_of_week, hour_of_day))\r\n",
							"\r\n",
							"green_taxi_df[[\"month_num\", \"day_of_month\",\"day_of_week\", \"hour_of_day\"]] = green_taxi_df[[\"lpepPickupDatetime\"]].apply(build_time_features, axis=1)\r\n",
							"green_taxi_df.head(10)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"columns_to_remove = [\"lpepPickupDatetime\", \"lpepDropoffDatetime\", \"puLocationId\", \"doLocationId\", \"extra\", \"mtaTax\",\r\n",
							"                     \"improvementSurcharge\", \"tollsAmount\", \"ehailFee\", \"tripType\", \"rateCodeID\",\r\n",
							"                     \"storeAndFwdFlag\", \"paymentType\", \"fareAmount\" #, \"tipAmount\"\r\n",
							"                    ]\r\n",
							"for col in columns_to_remove:\r\n",
							"    green_taxi_df.pop(col)\r\n",
							"\r\n",
							"green_taxi_df.head(5)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"green_taxi_df.columns"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"green_taxi_df.describe()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"final_df = green_taxi_df.query(\"pickupLatitude>=40.53 and pickupLatitude<=40.88\")\r\n",
							"final_df = final_df.query(\"pickupLongitude>=-74.09 and pickupLongitude<=-73.72\")\r\n",
							"final_df = final_df.query(\"tripDistance>=0.25 and tripDistance<31\")\r\n",
							"final_df = final_df.query(\"passengerCount>0 and totalAmount>0\")\r\n",
							"\r\n",
							"columns_to_remove_for_training = [\"pickupLongitude\", \"pickupLatitude\", \"dropoffLongitude\", \"dropoffLatitude\"]\r\n",
							"for col in columns_to_remove_for_training:\r\n",
							"    final_df.pop(col)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"final_df.describe()"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from sklearn.model_selection import train_test_split\r\n",
							"\r\n",
							"x_train, x_test = train_test_split(final_df, test_size=0.2, random_state=223)"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import logging\r\n",
							"\r\n",
							"automl_settings = {\r\n",
							"    \"iteration_timeout_minutes\": 2,\r\n",
							"    \"experiment_timeout_hours\": 0.3,\r\n",
							"    \"enable_early_stopping\": True,\r\n",
							"    \"primary_metric\": 'spearman_correlation',\r\n",
							"    \"featurization\": 'auto',\r\n",
							"    \"verbosity\": logging.INFO,\r\n",
							"    \"n_cross_validations\": 5\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.train.automl import AutoMLConfig\r\n",
							"\r\n",
							"automl_config = AutoMLConfig(task='regression',\r\n",
							"                             debug_log='automated_ml_errors.log',\r\n",
							"                             #compute_target=cpu_cluster,\r\n",
							"                             training_data=x_train,\r\n",
							"                             label_column_name=\"tipAmount\",\r\n",
							"                             **automl_settings)"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.core.experiment import Experiment\n",
							"experiment = Experiment(ws, \"taxi-experiment-fromsynapsews-tips\")\n",
							"local_run = experiment.submit(automl_config, show_output=True)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"best_run, fitted_model = local_run.get_output()\r\n",
							"print(best_run)\r\n",
							"print(fitted_model)"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"y_test = x_test.pop(\"tipAmount\")\r\n",
							"\r\n",
							"y_predict = fitted_model.predict(x_test)\r\n",
							"print(y_predict[:10])"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from sklearn.metrics import mean_squared_error\r\n",
							"from math import sqrt\r\n",
							"\r\n",
							"y_actual = y_test.values.flatten().tolist()\r\n",
							"rmse = sqrt(mean_squared_error(y_actual, y_predict))\r\n",
							"rmse"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sum_actuals = sum_errors = 0\r\n",
							"\r\n",
							"for actual_val, predict_val in zip(y_actual, y_predict):\r\n",
							"    abs_error = actual_val - predict_val\r\n",
							"    if abs_error < 0:\r\n",
							"        abs_error = abs_error * -1\r\n",
							"\r\n",
							"    sum_errors = sum_errors + abs_error\r\n",
							"    sum_actuals = sum_actuals + actual_val\r\n",
							"\r\n",
							"mean_abs_percent_error = sum_errors / sum_actuals\r\n",
							"print(\"Model MAPE:\")\r\n",
							"print(mean_abs_percent_error)\r\n",
							"print()\r\n",
							"print(\"Model Accuracy:\")\r\n",
							"print(1 - mean_abs_percent_error)"
						],
						"outputs": [],
						"execution_count": 22
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLtest')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('AzureMLtest_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from azureml.core import Workspace"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import azureml.core\r\n",
							"print(azureml.core.VERSION)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"ws = Workspace.get(name=\"mlopsdev\", subscription_id='c46a9435-c957-4e6c-a0f4-b9a597984773', resource_group='mlops')"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print('Workspace name: ' + ws.name, \r\n",
							"      'Azure region: ' + ws.location, \r\n",
							"      'Subscription id: ' + ws.subscription_id, \r\n",
							"      'Resource group: ' + ws.resource_group, sep = '\\n')"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"ws.write_config(path='.azureml')"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# tutorial/02-create-compute.py\r\n",
							"from azureml.core import Workspace\r\n",
							"from azureml.core.compute import ComputeTarget, AmlCompute\r\n",
							"from azureml.core.compute_target import ComputeTargetException\r\n",
							"\r\n",
							"ws = Workspace.from_config() # This automatically looks for a directory .azureml\r\n",
							"\r\n",
							"# Choose a name for your CPU cluster\r\n",
							"cpu_cluster_name = \"cpu-cluster\"\r\n",
							"\r\n",
							"# Verify that the cluster does not exist already\r\n",
							"try:\r\n",
							"    cpu_cluster = ComputeTarget(workspace=ws, name=cpu_cluster_name)\r\n",
							"    print('Found existing cluster, use it.')\r\n",
							"except ComputeTargetException:\r\n",
							"    compute_config = AmlCompute.provisioning_configuration(vm_size='STANDARD_D2_V2',\r\n",
							"                                                           idle_seconds_before_scaledown=2400,\r\n",
							"                                                           min_nodes=0,\r\n",
							"                                                           max_nodes=4)\r\n",
							"    cpu_cluster = ComputeTarget.create(ws, cpu_cluster_name, compute_config)\r\n",
							"\r\n",
							"cpu_cluster.wait_for_completion(show_output=True)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.opendatasets import NycTlcGreen\r\n",
							"import pandas as pd\r\n",
							"from datetime import datetime\r\n",
							"from dateutil.relativedelta import relativedelta"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"green_taxi_df = pd.DataFrame([])\r\n",
							"start = datetime.strptime(\"1/1/2015\",\"%m/%d/%Y\")\r\n",
							"end = datetime.strptime(\"1/31/2015\",\"%m/%d/%Y\")\r\n",
							"\r\n",
							"for sample_month in range(12):\r\n",
							"    temp_df_green = NycTlcGreen(start + relativedelta(months=sample_month), end + relativedelta(months=sample_month)) \\\r\n",
							"        .to_pandas_dataframe()\r\n",
							"    green_taxi_df = green_taxi_df.append(temp_df_green.sample(2000))\r\n",
							"\r\n",
							"green_taxi_df.head(10)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"def build_time_features(vector):\r\n",
							"    pickup_datetime = vector[0]\r\n",
							"    month_num = pickup_datetime.month\r\n",
							"    day_of_month = pickup_datetime.day\r\n",
							"    day_of_week = pickup_datetime.weekday()\r\n",
							"    hour_of_day = pickup_datetime.hour\r\n",
							"\r\n",
							"    return pd.Series((month_num, day_of_month, day_of_week, hour_of_day))\r\n",
							"\r\n",
							"green_taxi_df[[\"month_num\", \"day_of_month\",\"day_of_week\", \"hour_of_day\"]] = green_taxi_df[[\"lpepPickupDatetime\"]].apply(build_time_features, axis=1)\r\n",
							"green_taxi_df.head(10)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"columns_to_remove = [\"lpepPickupDatetime\", \"lpepDropoffDatetime\", \"puLocationId\", \"doLocationId\", \"extra\", \"mtaTax\",\r\n",
							"                     \"improvementSurcharge\", \"tollsAmount\", \"ehailFee\", \"tripType\", \"rateCodeID\",\r\n",
							"                     \"storeAndFwdFlag\", \"paymentType\", \"fareAmount\", \"tipAmount\"\r\n",
							"                    ]\r\n",
							"for col in columns_to_remove:\r\n",
							"    green_taxi_df.pop(col)\r\n",
							"\r\n",
							"green_taxi_df.head(5)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"green_taxi_df.describe()"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"final_df = green_taxi_df.query(\"pickupLatitude>=40.53 and pickupLatitude<=40.88\")\r\n",
							"final_df = final_df.query(\"pickupLongitude>=-74.09 and pickupLongitude<=-73.72\")\r\n",
							"final_df = final_df.query(\"tripDistance>=0.25 and tripDistance<31\")\r\n",
							"final_df = final_df.query(\"passengerCount>0 and totalAmount>0\")\r\n",
							"\r\n",
							"columns_to_remove_for_training = [\"pickupLongitude\", \"pickupLatitude\", \"dropoffLongitude\", \"dropoffLatitude\"]\r\n",
							"for col in columns_to_remove_for_training:\r\n",
							"    final_df.pop(col)"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"final_df.describe()"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from sklearn.model_selection import train_test_split\r\n",
							"\r\n",
							"x_train, x_test = train_test_split(final_df, test_size=0.2, random_state=223)"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import logging\r\n",
							"\r\n",
							"automl_settings = {\r\n",
							"    \"iteration_timeout_minutes\": 2,\r\n",
							"    \"experiment_timeout_hours\": 0.3,\r\n",
							"    \"enable_early_stopping\": True,\r\n",
							"    \"primary_metric\": 'spearman_correlation',\r\n",
							"    \"featurization\": 'auto',\r\n",
							"    \"verbosity\": logging.INFO,\r\n",
							"    \"n_cross_validations\": 5\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.train.automl import AutoMLConfig\r\n",
							"\r\n",
							"automl_config = AutoMLConfig(task='regression',\r\n",
							"                             debug_log='automated_ml_errors.log',\r\n",
							"                             training_data=x_train,\r\n",
							"                             label_column_name=\"totalAmount\",\r\n",
							"                             **automl_settings)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.core.experiment import Experiment\n",
							"experiment = Experiment(ws, \"taxi-experiment-fromsynapsews-total\")\n",
							"local_run = experiment.submit(automl_config, show_output=True)"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"#from azureml.widgets import RunDetails\n",
							"#RunDetails(local_run).show()"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"best_run, fitted_model = local_run.get_output()\r\n",
							"print(best_run)\r\n",
							"print(fitted_model)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"y_test = x_test.pop(\"totalAmount\")\r\n",
							"\r\n",
							"y_predict = fitted_model.predict(x_test)\r\n",
							"print(y_predict[:10])"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from sklearn.metrics import mean_squared_error\r\n",
							"from math import sqrt\r\n",
							"\r\n",
							"y_actual = y_test.values.flatten().tolist()\r\n",
							"rmse = sqrt(mean_squared_error(y_actual, y_predict))\r\n",
							"rmse"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sum_actuals = sum_errors = 0\r\n",
							"\r\n",
							"for actual_val, predict_val in zip(y_actual, y_predict):\r\n",
							"    abs_error = actual_val - predict_val\r\n",
							"    if abs_error < 0:\r\n",
							"        abs_error = abs_error * -1\r\n",
							"\r\n",
							"    sum_errors = sum_errors + abs_error\r\n",
							"    sum_actuals = sum_actuals + actual_val\r\n",
							"\r\n",
							"mean_abs_percent_error = sum_errors / sum_actuals\r\n",
							"print(\"Model MAPE:\")\r\n",
							"print(mean_abs_percent_error)\r\n",
							"print()\r\n",
							"print(\"Model Accuracy:\")\r\n",
							"print(1 - mean_abs_percent_error)"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSparkMLLib')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('AzureSparkMLLib_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\r\n",
							"from datetime import datetime\r\n",
							"from dateutil import parser\r\n",
							"from pyspark.sql.functions import unix_timestamp, date_format, col, when\r\n",
							"from pyspark.ml import Pipeline\r\n",
							"from pyspark.ml import PipelineModel\r\n",
							"from pyspark.ml.feature import RFormula\r\n",
							"from pyspark.ml.feature import OneHotEncoder, StringIndexer, VectorIndexer\r\n",
							"from pyspark.ml.classification import LogisticRegression\r\n",
							"from pyspark.mllib.evaluation import BinaryClassificationMetrics\r\n",
							"from pyspark.ml.evaluation import BinaryClassificationEvaluator"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from azureml.opendatasets import NycTlcYellow\r\n",
							"\r\n",
							"end_date = parser.parse('2018-06-06')\r\n",
							"start_date = parser.parse('2018-05-01')\r\n",
							"nyc_tlc = NycTlcYellow(start_date=start_date, end_date=end_date)\r\n",
							"filtered_df = nyc_tlc.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# To make development easier, faster and less expensive down sample for now\r\n",
							"sampled_taxi_df = filtered_df.sample(True, 0.001, seed=1234)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"tpepPickupDateTime\":{\"1\":0,\"2\":0}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"#sampled_taxi_df.show(5)\r\n",
							"display(sampled_taxi_df)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sampled_taxi_df.createOrReplaceTempView(\"nytaxi\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"taxi_df = sampled_taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'rateCodeId', 'passengerCount'\\\r\n",
							"                                , 'tripDistance', 'tpepPickupDateTime', 'tpepDropoffDateTime'\\\r\n",
							"                                , date_format('tpepPickupDateTime', 'hh').alias('pickupHour')\\\r\n",
							"                                , date_format('tpepPickupDateTime', 'EEEE').alias('weekdayString')\\\r\n",
							"                                , (unix_timestamp(col('tpepDropoffDateTime')) - unix_timestamp(col('tpepPickupDateTime'))).alias('tripTimeSecs')\\\r\n",
							"                                , (when(col('tipAmount') > 0, 1).otherwise(0)).alias('tipped')\r\n",
							"                                )\\\r\n",
							"                        .filter((sampled_taxi_df.passengerCount > 0) & (sampled_taxi_df.passengerCount < 8)\\\r\n",
							"                                & (sampled_taxi_df.tipAmount >= 0) & (sampled_taxi_df.tipAmount <= 25)\\\r\n",
							"                                & (sampled_taxi_df.fareAmount >= 1) & (sampled_taxi_df.fareAmount <= 250)\\\r\n",
							"                                & (sampled_taxi_df.tipAmount < sampled_taxi_df.fareAmount)\\\r\n",
							"                                & (sampled_taxi_df.tripDistance > 0) & (sampled_taxi_df.tripDistance <= 100)\\\r\n",
							"                                & (sampled_taxi_df.rateCodeId <= 5)\r\n",
							"                                & (sampled_taxi_df.paymentType.isin({\"1\", \"2\"}))\r\n",
							"                                )"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"taxi_featurised_df = taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'passengerCount'\\\r\n",
							"                                                , 'tripDistance', 'weekdayString', 'pickupHour','tripTimeSecs','tipped'\\\r\n",
							"                                                , when((taxi_df.pickupHour <= 6) | (taxi_df.pickupHour >= 20),\"Night\")\\\r\n",
							"                                                .when((taxi_df.pickupHour >= 7) & (taxi_df.pickupHour <= 10), \"AMRush\")\\\r\n",
							"                                                .when((taxi_df.pickupHour >= 11) & (taxi_df.pickupHour <= 15), \"Afternoon\")\\\r\n",
							"                                                .when((taxi_df.pickupHour >= 16) & (taxi_df.pickupHour <= 19), \"PMRush\")\\\r\n",
							"                                                .otherwise(0).alias('trafficTimeBins')\r\n",
							"                                              )\\\r\n",
							"                                       .filter((taxi_df.tripTimeSecs >= 30) & (taxi_df.tripTimeSecs <= 7200))"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# Since the sample uses an algorithm that only works with numeric features, convert them so they can be consumed\r\n",
							"sI1 = StringIndexer(inputCol=\"trafficTimeBins\", outputCol=\"trafficTimeBinsIndex\")\r\n",
							"en1 = OneHotEncoder(dropLast=False, inputCol=\"trafficTimeBinsIndex\", outputCol=\"trafficTimeBinsVec\")\r\n",
							"sI2 = StringIndexer(inputCol=\"weekdayString\", outputCol=\"weekdayIndex\")\r\n",
							"en2 = OneHotEncoder(dropLast=False, inputCol=\"weekdayIndex\", outputCol=\"weekdayVec\")\r\n",
							"\r\n",
							"# Create a new dataframe that has had the encodings applied\r\n",
							"encoded_final_df = Pipeline(stages=[sI1, en1, sI2, en2]).fit(taxi_featurised_df).transform(taxi_featurised_df)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"#Decide on the split between training and testing data from the dataframe\r\n",
							"trainingFraction = 0.7\r\n",
							"testingFraction = (1-trainingFraction)\r\n",
							"seed = 1234\r\n",
							"\r\n",
							"# Split the dataframe into test and training dataframes\r\n",
							"train_data_df, test_data_df = encoded_final_df.randomSplit([trainingFraction, testingFraction], seed=seed)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"## Create a new LR object for the model\r\n",
							"logReg = LogisticRegression(maxIter=10, regParam=0.3, labelCol = 'tipped')\r\n",
							"\r\n",
							"## The formula for the model\r\n",
							"classFormula = RFormula(formula=\"tipped ~ pickupHour + weekdayVec + passengerCount + tripTimeSecs + tripDistance + fareAmount + paymentType+ trafficTimeBinsVec\")\r\n",
							"\r\n",
							"## Undertake training and create an LR model\r\n",
							"lrModel = Pipeline(stages=[classFormula, logReg]).fit(train_data_df)\r\n",
							"\r\n",
							"## Saving the model is optional but its another form of inter session cache\r\n",
							"datestamp = datetime.now().strftime('%m-%d-%Y-%s')\r\n",
							"fileName = \"lrModel_\" + datestamp\r\n",
							"logRegDirfilename = fileName\r\n",
							"lrModel.save(logRegDirfilename)\r\n",
							"\r\n",
							"## Predict tip 1/0 (yes/no) on the test dataset, evaluation using AUROC\r\n",
							"predictions = lrModel.transform(test_data_df)\r\n",
							"predictionAndLabels = predictions.select(\"label\",\"prediction\").rdd\r\n",
							"metrics = BinaryClassificationMetrics(predictionAndLabels)\r\n",
							"print(\"Area under ROC = %s\" % metrics.areaUnderROC)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"## Plot the ROC curve, no need for pandas as this uses the modelSummary object\r\n",
							"modelSummary = lrModel.stages[-1].summary\r\n",
							"\r\n",
							"plt.plot([0, 1], [0, 1], 'r--')\r\n",
							"plt.plot(modelSummary.roc.select('FPR').collect(),\r\n",
							"         modelSummary.roc.select('TPR').collect())\r\n",
							"plt.xlabel('False Positive Rate')\r\n",
							"plt.ylabel('True Positive Rate')\r\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Bankruptcy Prediction with LightGBM Classifier')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Bankruptcy Prediction with LightGBM Classifier_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Bankruptcy Prediction with LightGBM Classifier\r\n",
							""
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Introduction of LightGBM\n",
							"[LightGBM](https://github.com/Microsoft/LightGBM) is an open-source, distributed, high-performance gradient boosting framework with following advantages: \n",
							"-   Composability: LightGBM models can be incorporated into existing\n",
							"    SparkML Pipelines, and used for batch, streaming, and serving\n",
							"    workloads.\n",
							"-   Performance: LightGBM on Spark is 10-30% faster than SparkML on\n",
							"    the Higgs dataset, and achieves a 15% increase in AUC.  [Parallel\n",
							"    experiments](https://github.com/Microsoft/LightGBM/blob/master/docs/Experiments.rst#parallel-experiment)\n",
							"    have verified that LightGBM can achieve a linear speed-up by using\n",
							"    multiple machines for training in specific settings.\n",
							"-   Functionality: LightGBM offers a wide array of [tunable\n",
							"    parameters](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst),\n",
							"    that one can use to customize their decision tree system. LightGBM on\n",
							"    Spark also supports new types of problems such as quantile regression.\n",
							"-   Cross platform：LightGBM on Spark is available on Spark (Scala) and PySpark (Python).\n",
							""
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"\n",
							"<img src=\"https://mmlspark.blob.core.windows.net/graphics/Documentation/bankruptcy image.png\" width=\"800\" style=\"float: center;\"/>\n",
							"\n",
							"In this example, we use LightGBM to build a classification model in order to predict bankruptcy."
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read dataset\r\n",
							"\r\n",
							"Get a sample data of financial statements for 6819 companies, 220 represents bankrupted companies while 6599 firms are not bankrupted. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"dataset = spark.read.format(\"csv\")\\\n",
							"  .option(\"header\", True)\\\n",
							"  .load(\"wasbs://publicwasb@mmlspark.blob.core.windows.net/company_bankruptcy_prediction_data.csv\")"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Exploratory data\r\n",
							"\r\n",
							"Look at the data and evaluate its suitability for use in a model."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"Bankrupt?"
									],
									"values": [
										"Bankrupt?"
									],
									"yLabel": "Bankrupt?",
									"xLabel": "Bankrupt?",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"Bankrupt?\":{\"1\":5}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"display(dataset.head(5))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# print dataset size\r\n",
							"print(\"Total number of records: \" + str(dataset.count()))"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"# convert features to double type\n",
							"from pyspark.sql.functions import col\n",
							"from pyspark.sql.types import DoubleType\n",
							"for colName in dataset.columns:\n",
							"  dataset = dataset.withColumn(colName, col(colName).cast(DoubleType()))\n",
							"print(\"Schema: \")\n",
							"dataset.printSchema()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Generation of testing and training data sets\r\n",
							"\r\n",
							"Simple split, 85% for training and 15% for testing the model. Playing with this ratio may result in different models.\r\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Split the dataset into train and test\n",
							"\n",
							"train, test = dataset.randomSplit([0.70, 0.30], seed=1)\n",
							"\n",
							"# Add featurizer to convert features to vector\n",
							"\n",
							"from pyspark.ml.feature import VectorAssembler\n",
							"feature_cols = dataset.columns[1:]\n",
							"featurizer = VectorAssembler(\n",
							"    inputCols=feature_cols,\n",
							"    outputCol='features'\n",
							")\n",
							"train_data = featurizer.transform(train)['Bankrupt?', 'features']\n",
							"test_data = featurizer.transform(test)['Bankrupt?', 'features']"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"# check if the data is unbalanced\r\n",
							"train_data.groupBy(\"Bankrupt?\").count().show()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Train the model\r\n",
							"Train the Classifier model."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from mmlspark.lightgbm import LightGBMClassifier\n",
							"\n",
							"model = LightGBMClassifier(objective=\"binary\", featuresCol=\"features\", labelCol=\"Bankrupt?\", isUnbalance=True)\n",
							"model = model.fit(train_data)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"from mmlspark.lightgbm import LightGBMClassificationModel\n",
							"model.saveNativeModel(\"/lgbmcmodel\")\n",
							"model = LightGBMClassificationModel.loadNativeModelFromFile(\"/lgbmcmodel\")"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"print(model.getFeatureImportances())"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Model Performance Evaluation\r\n",
							"\r\n",
							"After training the model, we evaluate the performance of the model using the test set."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"predictions = model.transform(test_data)\n",
							"#predictions.limit(10).toPandas()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from mmlspark.train import ComputeModelStatistics\r\n",
							"\r\n",
							"# Compute model performance metrics\r\n",
							"metrics = ComputeModelStatistics(evaluationMetric=\"classification\", \r\n",
							"                                 labelCol=\"prediction\", \r\n",
							"                                 scoredLabelsCol=\"Bankrupt?\").transform(predictions)\r\n",
							"metrics.toPandas()"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Clean up resources\r\n",
							"To ensure the Spark instance is shut down, end any connected sessions(notebooks). The pool shuts down when the **idle time** specified in the Apache Spark pool is reached. You can also select **stop session** from the status bar at the upper right of the notebook.\r\n",
							"\r\n",
							"![stopsession](https://adsnotebookrelease.blob.core.windows.net/adsnotebookrelease/adsnotebook/image/stopsession.png)"
						]
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Next steps\r\n",
							"\r\n",
							"* [Check out Synapse sample notebooks](https://github.com/Azure-Samples/Synapse/tree/main/MachineLearning) \r\n",
							"* [MMLSpark GitHub Repo](https://github.com/Azure/mmlspark)"
						]
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Covid19AutoMLSpark')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Covid19AutoMLSpark_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 6,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "6",
						"spark.dynamicAllocation.maxExecutors": "6"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import azureml.core\n",
							"\n",
							"from azureml.core import Experiment, Workspace, Dataset, Datastore\n",
							"from azureml.train.automl import AutoMLConfig\n",
							"from azureml.data.dataset_factory import TabularDatasetFactory"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"subscription_id = \"c46a9435-c957-4e6c-a0f4-b9a597984773\"\n",
							"resource_group = \"accenture\"\n",
							"workspace_name = \"accml\"\n",
							"experiment_name = \"bbaccsynapse-covid19-20201217032226\"\n",
							"\n",
							"ws = Workspace(subscription_id = subscription_id, resource_group = resource_group, workspace_name = workspace_name)\n",
							"experiment = Experiment(ws, experiment_name)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df = spark.sql(\"SELECT * FROM default.covid19\")\r\n",
							"from pyspark.sql.types import *"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df = df.withColumn(\"_c5\", df[\"_c5\"].cast(DoubleType()).alias(\"_c5\"))\r\n",
							"df = df.withColumn(\"_c6\", df[\"_c6\"].cast(DoubleType()).alias(\"_c6\"))\r\n",
							"df = df.withColumn(\"_c7\", df[\"_c7\"].cast(DoubleType()).alias(\"_c7\"))"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"datastore = Datastore.get_default(ws)\n",
							"dataset = TabularDatasetFactory.register_spark_dataframe(df, datastore, name = experiment_name + \"-dataset\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"automl_config = AutoMLConfig(spark_context = sc,\n",
							"                             task = \"regression\",\n",
							"                             training_data = dataset,\n",
							"                             label_column_name = \"_c7\",\n",
							"                             primary_metric = \"spearman_correlation\",\n",
							"                             experiment_timeout_hours = 3,\n",
							"                             max_concurrent_iterations = 6,\n",
							"                             enable_onnx_compatible_models = False)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"run = experiment.submit(automl_config)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"run.wait_for_completion(show_output=False)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"displayHTML(\"<a href={} target='_blank'>Your experiment in Azure Machine Learning portal: {}</a>\".format(run.get_portal_url(), run.id))"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"run.wait_for_completion()\n",
							"\n",
							"# Install required dependency\n",
							"import pip\n",
							"pip.main([\"install\", \"azure-storage-blob==12.5.0\"])\n",
							"\n",
							"import mlflow\n",
							"\n",
							"# Get best model from automl run\n",
							"best_run, non_onnx_model = run.get_output()\n",
							"\n",
							"artifact_path = experiment_name + \"_artifact\"\n",
							"\n",
							"mlflow.set_tracking_uri(ws.get_mlflow_tracking_uri())\n",
							"mlflow.set_experiment(experiment_name)\n",
							"\n",
							"with mlflow.start_run() as run:\n",
							"    # Save the model to the outputs directory for capture\n",
							"    mlflow.sklearn.log_model(non_onnx_model, artifact_path)\n",
							"\n",
							"    # Register the model to AML model registry\n",
							"    mlflow.register_model(\"runs:/\" + run.info.run_id + \"/\" + artifact_path, \"bbaccsynapse-covid19-20201217032226-Best\")"
						],
						"outputs": [],
						"execution_count": 10
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Covid19AutoMLSparkOnnx')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Covid19AutoMLSparkOnnx_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"6390ccdc-c467-40f8-a1a6-d2bdd5bf9938": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"_c3": "Russia",
												"_c5": "3241.0",
												"_c0": "60939",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2883.0",
												"_c2": "Mari El Republic",
												"_c6": "26.0"
											},
											{
												"_c3": "France",
												"_c5": "255.0",
												"_c0": "60940",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "98.0",
												"_c2": "Martinique",
												"_c6": "15.0"
											},
											{
												"_c3": "US",
												"_c5": "71910.0",
												"_c0": "60941",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Maryland",
												"_c6": "3303.0"
											},
											{
												"_c3": "US",
												"_c5": "111110.0",
												"_c0": "60942",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Massachusetts",
												"_c6": "8296.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "26396.0",
												"_c0": "60943",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "11660.0",
												"_c2": "Mato Grosso",
												"_c6": "986.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "12261.0",
												"_c0": "60944",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "8008.0",
												"_c2": "Mato Grosso do Sul",
												"_c6": "146.0"
											},
											{
												"_c3": "Chile",
												"_c5": "6833.0",
												"_c0": "60945",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5615.0",
												"_c2": "Maule",
												"_c6": "86.0"
											},
											{
												"_c3": "France",
												"_c5": "2711.0",
												"_c0": "60946",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2480.0",
												"_c2": "Mayotte",
												"_c6": "37.0"
											},
											{
												"_c3": "Germany",
												"_c5": "804.0",
												"_c0": "60947",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "779.0",
												"_c2": "Mecklenburg-Vorpommern",
												"_c6": "20.0"
											},
											{
												"_c3": "India",
												"_c5": "207.0",
												"_c0": "60948",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "66.0",
												"_c2": "Meghalaya",
												"_c6": "2.0"
											},
											{
												"_c3": "Spain",
												"_c5": "126.0",
												"_c0": "60949",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "125.0",
												"_c2": "Melilla",
												"_c6": "2.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1432.0",
												"_c0": "60950",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1024.0",
												"_c2": "Meta",
												"_c6": "19.0"
											},
											{
												"_c3": "Chile",
												"_c5": "235370.0",
												"_c0": "60951",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "216627.0",
												"_c2": "Metropolitana",
												"_c6": "5673.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "41529.0",
												"_c0": "60952",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "33640.0",
												"_c2": "Mexico",
												"_c6": "5109.0"
											},
											{
												"_c3": "US",
												"_c5": "75685.0",
												"_c0": "60953",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Michigan",
												"_c6": "6285.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "7008.0",
												"_c0": "60954",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5993.0",
												"_c2": "Michoacan",
												"_c6": "552.0"
											},
											{
												"_c3": "Japan",
												"_c5": "46.0",
												"_c0": "60955",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "45.0",
												"_c2": "Mie",
												"_c6": "1.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "70086.0",
												"_c0": "60956",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "45145.0",
												"_c2": "Minas Gerais",
												"_c6": "1504.0"
											},
											{
												"_c3": "US",
												"_c5": "40767.0",
												"_c0": "60957",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Minnesota",
												"_c6": "1533.0"
											},
											{
												"_c3": "US",
												"_c5": "34622.0",
												"_c0": "60958",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Mississippi",
												"_c6": "1215.0"
											},
											{
												"_c3": "US",
												"_c5": "27069.0",
												"_c0": "60959",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Missouri",
												"_c6": "1084.0"
											},
											{
												"_c3": "Japan",
												"_c5": "100.0",
												"_c0": "60960",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "91.0",
												"_c2": "Miyagi",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "18.0",
												"_c0": "60961",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "17.0",
												"_c2": "Miyazaki",
												"_c6": "0.0"
											},
											{
												"_c3": "India",
												"_c5": "226.0",
												"_c0": "60962",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "143.0",
												"_c2": "Mizoram",
												"_c6": "0.0"
											},
											{
												"_c3": "Italy",
												"_c5": "445.0",
												"_c0": "60963",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "407.0",
												"_c2": "Molise",
												"_c6": "23.0"
											},
											{
												"_c3": "US",
												"_c5": "1593.0",
												"_c0": "60964",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Montana",
												"_c6": "28.0"
											},
											{
												"_c3": "UK",
												"_c5": "11.0",
												"_c0": "60965",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "10.0",
												"_c2": "Montserrat",
												"_c6": "1.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1254.0",
												"_c0": "60966",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Moquegua",
												"_c6": "23.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3755.0",
												"_c0": "60967",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2660.0",
												"_c2": "Mordovia Republic",
												"_c6": "28.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "3316.0",
												"_c0": "60968",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2377.0",
												"_c2": "Morelos",
												"_c6": "735.0"
											},
											{
												"_c3": "Russia",
												"_c5": "228000.0",
												"_c0": "60969",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "163093.0",
												"_c2": "Moscow",
												"_c6": "4087.0"
											},
											{
												"_c3": "Russia",
												"_c5": "60107.0",
												"_c0": "60970",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "40299.0",
												"_c2": "Moscow Oblast",
												"_c6": "992.0"
											},
											{
												"_c3": "Spain",
												"_c5": "1726.0",
												"_c0": "60971",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2180.0",
												"_c2": "Murcia",
												"_c6": "148.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6685.0",
												"_c0": "60972",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3889.0",
												"_c2": "Murmansk Oblast",
												"_c6": "26.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "467.0",
												"_c0": "60973",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "356.0",
												"_c2": "Mykolaiv Oblast",
												"_c6": "11.0"
											},
											{
												"_c3": "India",
												"_c5": "732.0",
												"_c0": "60974",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "304.0",
												"_c2": "Nagaland",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "76.0",
												"_c0": "60975",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "76.0",
												"_c2": "Nagano",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "20.0",
												"_c0": "60976",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "17.0",
												"_c2": "Nagasaki",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "107.0",
												"_c0": "60977",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "90.0",
												"_c2": "Nara",
												"_c6": "2.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "4275.0",
												"_c0": "60978",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2445.0",
												"_c2": "Narino",
												"_c6": "136.0"
											},
											{
												"_c3": "Spain",
												"_c5": "5523.0",
												"_c0": "60979",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3905.0",
												"_c2": "Navarra",
												"_c6": "528.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2244.0",
												"_c0": "60980",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1571.0",
												"_c2": "Nayarit",
												"_c6": "242.0"
											},
											{
												"_c3": "US",
												"_c5": "20777.0",
												"_c0": "60981",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Nebraska",
												"_c6": "286.0"
											},
											{
												"_c3": "Russia",
												"_c5": "190.0",
												"_c0": "60982",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "43.0",
												"_c2": "Nenets Autonomous Okrug",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "25908.0",
												"_c0": "60983",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Nevada",
												"_c6": "579.0"
											},
											{
												"_c3": "Canada",
												"_c5": "166.0",
												"_c0": "60984",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "163.0",
												"_c2": "New Brunswick",
												"_c6": "2.0"
											},
											{
												"_c3": "France",
												"_c5": "21.0",
												"_c0": "60985",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "21.0",
												"_c2": "New Caledonia",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "5991.0",
												"_c0": "60986",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "New Hampshire",
												"_c6": "390.0"
											},
											{
												"_c3": "US",
												"_c5": "174628.0",
												"_c0": "60987",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "New Jersey",
												"_c6": "15479.0"
											},
											{
												"_c3": "US",
												"_c5": "14549.0",
												"_c0": "60988",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "New Mexico",
												"_c6": "539.0"
											},
											{
												"_c3": "Australia",
												"_c5": "3474.0",
												"_c0": "60989",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2997.0",
												"_c2": "New South Wales",
												"_c6": "49.0"
											},
											{
												"_c3": "US",
												"_c5": "400299.0",
												"_c0": "60990",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "New York",
												"_c6": "32331.0"
											},
											{
												"_c3": "Canada",
												"_c5": "262.0",
												"_c0": "60991",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "258.0",
												"_c2": "Newfoundland and Labrador",
												"_c6": "3.0"
											},
											{
												"_c3": "Germany",
												"_c5": "13791.0",
												"_c0": "60992",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "12800.0",
												"_c2": "Niedersachsen",
												"_c6": "643.0"
											},
											{
												"_c3": "Japan",
												"_c5": "85.0",
												"_c0": "60993",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "83.0",
												"_c2": "Niigata",
												"_c6": "0.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "75.0",
												"_c0": "60994",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "75.0",
												"_c2": "Ningxia",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "19684.0",
												"_c0": "60995",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "13734.0",
												"_c2": "Nizhny Novgorod Oblast",
												"_c6": "282.0"
											},
											{
												"_c3": "Germany",
												"_c5": "44645.0",
												"_c0": "60996",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "40900.0",
												"_c2": "Nordrhein-Westfalen",
												"_c6": "1701.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1472.0",
												"_c0": "60997",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Norrbotten",
												"_c6": "70.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "434.0",
												"_c0": "60998",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "208.0",
												"_c2": "Norte de Santander",
												"_c6": "25.0"
											},
											{
												"_c3": "US",
												"_c5": "82032.0",
												"_c0": "60999",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "North Carolina",
												"_c6": "1497.0"
											},
											{
												"_c3": "US",
												"_c5": "4155.0",
												"_c0": "61000",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "North Dakota",
												"_c6": "85.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4209.0",
												"_c0": "61001",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3647.0",
												"_c2": "North Ossetia - Alania Republic",
												"_c6": "67.0"
											},
											{
												"_c3": "UK",
												"_c5": "5772.0",
												"_c0": "61002",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Northern Ireland",
												"_c6": "554.0"
											},
											{
												"_c3": "US",
												"_c5": "31.0",
												"_c0": "61003",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Northern Mariana Islands",
												"_c6": "2.0"
											},
											{
												"_c3": "Australia",
												"_c5": "31.0",
												"_c0": "61004",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "29.0",
												"_c2": "Northern Territory",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "5.0",
												"_c0": "61005",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5.0",
												"_c2": "Northwest Territories",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "1066.0",
												"_c0": "61006",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1000.0",
												"_c2": "Nova Scotia",
												"_c6": "63.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3296.0",
												"_c0": "61007",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1254.0",
												"_c2": "Novgorod Oblast",
												"_c6": "39.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7043.0",
												"_c0": "61008",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4869.0",
												"_c2": "Novosibirsk Oblast",
												"_c6": "133.0"
											},
											{
												"_c3": "Chile",
												"_c5": "2838.0",
												"_c0": "61009",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2376.0",
												"_c2": "Nuble",
												"_c6": "37.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "9140.0",
												"_c0": "61010",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6859.0",
												"_c2": "Nuevo Leon",
												"_c6": "508.0"
											},
											{
												"_c3": "Chile",
												"_c5": "8069.0",
												"_c0": "61011",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6377.0",
												"_c2": "OHiggins",
												"_c6": "113.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "7438.0",
												"_c0": "61012",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5936.0",
												"_c2": "Oaxaca",
												"_c6": "699.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2108.0",
												"_c0": "61013",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "903.0",
												"_c2": "Odessa Oblast",
												"_c6": "27.0"
											},
											{
												"_c3": "India",
												"_c5": "11956.0",
												"_c0": "61014",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "7972.0",
												"_c2": "Odisha",
												"_c6": "56.0"
											},
											{
												"_c3": "US",
												"_c5": "62856.0",
												"_c0": "61015",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Ohio",
												"_c6": "3032.0"
											},
											{
												"_c3": "Japan",
												"_c5": "60.0",
												"_c0": "61016",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "59.0",
												"_c2": "Oita",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "28.0",
												"_c0": "61017",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "26.0",
												"_c2": "Okayama",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "149.0",
												"_c0": "61018",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "139.0",
												"_c2": "Okinawa",
												"_c6": "7.0"
											},
											{
												"_c3": "US",
												"_c5": "19092.0",
												"_c0": "61019",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Oklahoma",
												"_c6": "416.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4469.0",
												"_c0": "61020",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2581.0",
												"_c2": "Omsk Oblast",
												"_c6": "40.0"
											},
											{
												"_c3": "Canada",
												"_c5": "38323.0",
												"_c0": "61021",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "33720.0",
												"_c2": "Ontario",
												"_c6": "2760.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2469.0",
												"_c0": "61022",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Orebro",
												"_c6": "167.0"
											},
											{
												"_c3": "US",
												"_c5": "11454.0",
												"_c0": "61023",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Oregon",
												"_c6": "232.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4930.0",
												"_c0": "61024",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3546.0",
												"_c2": "Orel Oblast",
												"_c6": "75.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4610.0",
												"_c0": "61025",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3394.0",
												"_c2": "Orenburg Oblast",
												"_c6": "27.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1967.0",
												"_c0": "61026",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1750.0",
												"_c2": "Osaka",
												"_c6": "86.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "3393.0",
												"_c0": "61027",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Ostergotland",
												"_c6": "224.0"
											},
											{
												"_c3": "Italy",
												"_c5": "2658.0",
												"_c0": "61028",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2280.0",
												"_c2": "P.A. Bolzano",
												"_c6": "292.0"
											},
											{
												"_c3": "Italy",
												"_c5": "4879.0",
												"_c0": "61029",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4447.0",
												"_c2": "P.A. Trento",
												"_c6": "405.0"
											},
											{
												"_c3": "Spain",
												"_c5": "13939.0",
												"_c0": "61030",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "16160.0",
												"_c2": "Pais Vasco",
												"_c6": "1562.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "122674.0",
												"_c0": "61031",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "109699.0",
												"_c2": "Para",
												"_c6": "5224.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "59118.0",
												"_c0": "61032",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "21481.0",
												"_c2": "Paraiba",
												"_c6": "1229.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "39512.0",
												"_c0": "61033",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "13374.0",
												"_c2": "Parana",
												"_c6": "978.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1280.0",
												"_c0": "61034",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Pasco",
												"_c6": "25.0"
											},
											{
												"_c3": "US",
												"_c5": "98482.0",
												"_c0": "61035",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Pennsylvania",
												"_c6": "6880.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5663.0",
												"_c0": "61036",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5126.0",
												"_c2": "Penza Oblast",
												"_c6": "60.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4282.0",
												"_c0": "61037",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3310.0",
												"_c2": "Perm Krai",
												"_c6": "91.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "70100.0",
												"_c0": "61038",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "49483.0",
												"_c2": "Pernambuco",
												"_c6": "5482.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "31269.0",
												"_c0": "61039",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "30676.0",
												"_c2": "Piaui",
												"_c6": "896.0"
											},
											{
												"_c3": "Italy",
												"_c5": "31485.0",
												"_c0": "61040",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "26300.0",
												"_c2": "Piemonte",
												"_c6": "4110.0"
											},
											{
												"_c3": "Peru",
												"_c5": "18394.0",
												"_c0": "61041",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Piura",
												"_c6": "827.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "330.0",
												"_c0": "61042",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "290.0",
												"_c2": "Poltava Oblast",
												"_c6": "13.0"
											},
											{
												"_c3": "Japan",
												"_c5": "368.0",
												"_c0": "61043",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "201.0",
												"_c2": "Port Quarantine",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4959.0",
												"_c0": "61044",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3509.0",
												"_c2": "Primorsky Krai",
												"_c6": "57.0"
											},
											{
												"_c3": "Canada",
												"_c5": "33.0",
												"_c0": "61045",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "27.0",
												"_c2": "Prince Edward Island",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3172.0",
												"_c0": "61046",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1769.0",
												"_c2": "Pskov Oblast",
												"_c6": "34.0"
											},
											{
												"_c3": "India",
												"_c5": "1272.0",
												"_c0": "61047",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "637.0",
												"_c2": "Puducherry",
												"_c6": "17.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "13752.0",
												"_c0": "61048",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "10844.0",
												"_c2": "Puebla",
												"_c6": "1742.0"
											},
											{
												"_c3": "US",
												"_c5": "9137.0",
												"_c0": "61049",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Puerto Rico",
												"_c6": "159.0"
											},
											{
												"_c3": "Italy",
												"_c5": "4540.0",
												"_c0": "61050",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3922.0",
												"_c2": "Puglia",
												"_c6": "546.0"
											},
											{
												"_c3": "India",
												"_c5": "7357.0",
												"_c0": "61051",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5017.0",
												"_c2": "Punjab",
												"_c6": "187.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "85991.0",
												"_c0": "61052",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "53836.0",
												"_c2": "Punjab",
												"_c6": "1985.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1135.0",
												"_c0": "61053",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Puno",
												"_c6": "36.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "41.0",
												"_c0": "61054",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "10.0",
												"_c2": "Putumayo",
												"_c6": "8.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "18.0",
												"_c0": "61055",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "18.0",
												"_c2": "Qinghai",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "56316.0",
												"_c0": "61056",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "25675.0",
												"_c2": "Quebec",
												"_c6": "5612.0"
											},
											{
												"_c3": "Australia",
												"_c5": "1070.0",
												"_c0": "61057",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1058.0",
												"_c2": "Queensland",
												"_c6": "6.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2407.0",
												"_c0": "61058",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1737.0",
												"_c2": "Queretaro",
												"_c6": "366.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "188.0",
												"_c0": "61059",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "137.0",
												"_c2": "Quindio",
												"_c6": "6.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "4824.0",
												"_c0": "61060",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3264.0",
												"_c2": "Quintana Roo",
												"_c6": "686.0"
											},
											{
												"_c3": "India",
												"_c5": "23174.0",
												"_c0": "61061",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "17620.0",
												"_c2": "Rajasthan",
												"_c6": "497.0"
											},
											{
												"_c3": "US",
												"_c5": "0.0",
												"_c0": "61062",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "983185.0",
												"_c2": "Recovered",
												"_c6": "0.0"
											},
											{
												"_c3": "France",
												"_c5": "571.0",
												"_c0": "61063",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "472.0",
												"_c2": "Reunion",
												"_c6": "3.0"
											},
											{
												"_c3": "Germany",
												"_c5": "7127.0",
												"_c0": "61064",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6690.0",
												"_c2": "Rheinland-Pfalz",
												"_c6": "236.0"
											},
											{
												"_c3": "US",
												"_c5": "17312.0",
												"_c0": "61065",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Rhode Island",
												"_c6": "976.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "38265.0",
												"_c0": "61066",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2904.0",
												"_c2": "Rio Grande do Norte",
												"_c6": "1356.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "37490.0",
												"_c0": "61067",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "31317.0",
												"_c2": "Rio Grande do Sul",
												"_c6": "919.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "129443.0",
												"_c0": "61068",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "108151.0",
												"_c2": "Rio de Janeiro",
												"_c6": "11280.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "709.0",
												"_c0": "61069",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "359.0",
												"_c2": "Risaralda",
												"_c6": "21.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "4454.0",
												"_c0": "61070",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2501.0",
												"_c2": "Rivne Oblast",
												"_c6": "79.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "26000.0",
												"_c0": "61071",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "15290.0",
												"_c2": "Rondonia",
												"_c6": "605.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "21220.0",
												"_c0": "61072",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "8191.0",
												"_c2": "Roraima",
												"_c6": "393.0"
											},
											{
												"_c3": "Russia",
												"_c5": "10533.0",
												"_c0": "61073",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "7760.0",
												"_c2": "Rostov Oblast",
												"_c6": "156.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5585.0",
												"_c0": "61074",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4375.0",
												"_c2": "Ryazan Oblast",
												"_c6": "21.0"
											},
											{
												"_c3": "Germany",
												"_c5": "2812.0",
												"_c0": "61075",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2590.0",
												"_c2": "Saarland",
												"_c6": "174.0"
											},
											{
												"_c3": "Germany",
												"_c5": "5469.0",
												"_c0": "61076",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5205.0",
												"_c2": "Sachsen",
												"_c6": "225.0"
											},
											{
												"_c3": "Germany",
												"_c5": "1909.0",
												"_c0": "61077",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1799.0",
												"_c2": "Sachsen-Anhalt",
												"_c6": "61.0"
											},
											{
												"_c3": "Japan",
												"_c5": "45.0",
												"_c0": "61078",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "45.0",
												"_c2": "Saga",
												"_c6": "0.0"
											},
											{
												"_c3": "France",
												"_c5": "6.0",
												"_c0": "61079",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6.0",
												"_c2": "Saint Barthelemy",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "26981.0",
												"_c0": "61080",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "20890.0",
												"_c2": "Saint Petersburg",
												"_c6": "1541.0"
											},
											{
												"_c3": "France",
												"_c5": "2.0",
												"_c0": "61081",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1.0",
												"_c2": "Saint Pierre and Miquelon",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1396.0",
												"_c0": "61082",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1041.0",
												"_c2": "Saitama",
												"_c6": "67.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4710.0",
												"_c0": "61083",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3999.0",
												"_c2": "Sakha (Yakutiya) Republic",
												"_c6": "35.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1240.0",
												"_c0": "61084",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "472.0",
												"_c2": "Sakhalin Oblast",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5721.0",
												"_c0": "61085",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3504.0",
												"_c2": "Samara Oblast",
												"_c6": "61.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "28.0",
												"_c0": "61086",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "21.0",
												"_c2": "San Andres y Providencia",
												"_c6": "1.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "4170.0",
												"_c0": "61087",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3230.0",
												"_c2": "San Luis Potosi",
												"_c6": "247.0"
											},
											{
												"_c3": "Peru",
												"_c5": "6433.0",
												"_c0": "61088",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "San Martin",
												"_c6": "176.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "40106.0",
												"_c0": "61089",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "31616.0",
												"_c2": "Santa Catarina",
												"_c6": "459.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1159.0",
												"_c0": "61090",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "325.0",
												"_c2": "Santander",
												"_c6": "24.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "359110.0",
												"_c0": "61091",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "204531.0",
												"_c2": "Sao Paulo",
												"_c6": "17442.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7417.0",
												"_c0": "61092",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4116.0",
												"_c2": "Saratov Oblast",
												"_c6": "47.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1372.0",
												"_c0": "61093",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1228.0",
												"_c2": "Sardegna",
												"_c6": "134.0"
											},
											{
												"_c3": "Canada",
												"_c5": "815.0",
												"_c0": "61094",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "757.0",
												"_c2": "Saskatchewan",
												"_c6": "15.0"
											},
											{
												"_c3": "Germany",
												"_c5": "3206.0",
												"_c0": "61095",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3000.0",
												"_c2": "Schleswig-Holstein",
												"_c6": "154.0"
											},
											{
												"_c3": "UK",
												"_c5": "18333.0",
												"_c0": "61096",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Scotland",
												"_c6": "2490.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "34713.0",
												"_c0": "61097",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "22686.0",
												"_c2": "Sergipe",
												"_c6": "931.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "258.0",
												"_c0": "61098",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "198.0",
												"_c2": "Sevastopol*",
												"_c6": "5.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "321.0",
												"_c0": "61099",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "314.0",
												"_c2": "Shaanxi",
												"_c6": "3.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "792.0",
												"_c0": "61100",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "785.0",
												"_c2": "Shandong",
												"_c6": "7.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "721.0",
												"_c0": "61101",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "689.0",
												"_c2": "Shanghai",
												"_c6": "7.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "199.0",
												"_c0": "61102",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "198.0",
												"_c2": "Shanxi",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "104.0",
												"_c0": "61103",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "99.0",
												"_c2": "Shiga",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "24.0",
												"_c0": "61104",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "24.0",
												"_c2": "Shimane",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "93.0",
												"_c0": "61105",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "82.0",
												"_c2": "Shizuoka",
												"_c6": "1.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "599.0",
												"_c0": "61106",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "582.0",
												"_c2": "Sichuan",
												"_c6": "3.0"
											},
											{
												"_c3": "Italy",
												"_c5": "3098.0",
												"_c0": "61107",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2691.0",
												"_c2": "Sicilia",
												"_c6": "283.0"
											},
											{
												"_c3": "India",
												"_c5": "134.0",
												"_c0": "61108",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "80.0",
												"_c2": "Sikkim",
												"_c6": "0.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "9775.0",
												"_c0": "61109",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "7761.0",
												"_c2": "Sinaloa",
												"_c6": "1578.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "102368.0",
												"_c0": "61110",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "59165.0",
												"_c2": "Sindh",
												"_c6": "1713.0"
											},
											{
												"_c3": "Netherlands",
												"_c5": "78.0",
												"_c0": "61111",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "63.0",
												"_c2": "Sint Maarten",
												"_c6": "15.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "3245.0",
												"_c0": "61112",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Skane",
												"_c6": "255.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4986.0",
												"_c0": "61113",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2856.0",
												"_c2": "Smolensk Oblast",
												"_c6": "75.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "11220.0",
												"_c0": "61114",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "9525.0",
												"_c2": "Sonora",
												"_c6": "1027.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2294.0",
												"_c0": "61115",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Sormland",
												"_c6": "247.0"
											},
											{
												"_c3": "Australia",
												"_c5": "443.0",
												"_c0": "61116",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "439.0",
												"_c2": "South Australia",
												"_c6": "4.0"
											},
											{
												"_c3": "US",
												"_c5": "52419.0",
												"_c0": "61117",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "South Carolina",
												"_c6": "929.0"
											},
											{
												"_c3": "US",
												"_c5": "7401.0",
												"_c0": "61118",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "South Dakota",
												"_c6": "107.0"
											},
											{
												"_c3": "France",
												"_c5": "43.0",
												"_c0": "61119",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "37.0",
												"_c2": "St Martin",
												"_c6": "3.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5975.0",
												"_c0": "61120",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3771.0",
												"_c2": "Stavropol Krai",
												"_c6": "114.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "21907.0",
												"_c0": "61121",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Stockholm",
												"_c6": "2362.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "2273.0",
												"_c0": "61122",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "333.0",
												"_c2": "Sucre",
												"_c6": "137.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "332.0",
												"_c0": "61123",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "275.0",
												"_c2": "Sumy Oblast",
												"_c6": "5.0"
											},
											{
												"_c3": "Russia",
												"_c5": "15343.0",
												"_c0": "61124",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "9522.0",
												"_c2": "Sverdlovsk Oblast",
												"_c6": "154.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "13999.0",
												"_c0": "61125",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "11216.0",
												"_c2": "Tabasco",
												"_c6": "1332.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1223.0",
												"_c0": "61126",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Tacna",
												"_c6": "11.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "8582.0",
												"_c0": "61127",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "7274.0",
												"_c2": "Tamaulipas",
												"_c6": "559.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5157.0",
												"_c0": "61128",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3604.0",
												"_c2": "Tambov Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "India",
												"_c5": "130261.0",
												"_c0": "61129",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "82324.0",
												"_c2": "Tamil Nadu",
												"_c6": "1829.0"
											},
											{
												"_c3": "Chile",
												"_c5": "6961.0",
												"_c0": "61130",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6085.0",
												"_c2": "Tarapaca",
												"_c6": "107.0"
											},
											{
												"_c3": "Australia",
												"_c5": "228.0",
												"_c0": "61131",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "215.0",
												"_c2": "Tasmania",
												"_c6": "13.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4929.0",
												"_c0": "61132",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3833.0",
												"_c2": "Tatarstan Republic",
												"_c6": "15.0"
											},
											{
												"_c3": "India",
												"_c5": "32224.0",
												"_c0": "61133",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "19205.0",
												"_c2": "Telangana",
												"_c6": "339.0"
											},
											{
												"_c3": "US",
												"_c5": "59546.0",
												"_c0": "61134",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Tennessee",
												"_c6": "723.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2174.0",
												"_c0": "61135",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1353.0",
												"_c2": "Ternopil Oblast",
												"_c6": "32.0"
											},
											{
												"_c3": "US",
												"_c5": "244756.0",
												"_c0": "61136",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Texas",
												"_c6": "3062.0"
											},
											{
												"_c3": "Germany",
												"_c5": "3288.0",
												"_c0": "61137",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3080.0",
												"_c2": "Thuringen",
												"_c6": "182.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "199.0",
												"_c0": "61138",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "195.0",
												"_c2": "Tianjin",
												"_c6": "3.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "1.0",
												"_c0": "61139",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1.0",
												"_c2": "Tibet",
												"_c6": "0.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "3235.0",
												"_c0": "61140",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2455.0",
												"_c2": "Tlaxcala",
												"_c6": "446.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "14509.0",
												"_c0": "61141",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "8915.0",
												"_c2": "Tocantins",
												"_c6": "245.0"
											},
											{
												"_c3": "Japan",
												"_c5": "93.0",
												"_c0": "61142",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "74.0",
												"_c2": "Tochigi",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "10.0",
												"_c0": "61143",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4.0",
												"_c2": "Tokushima",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "7525.0",
												"_c0": "61144",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "5979.0",
												"_c2": "Tokyo",
												"_c6": "325.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1297.0",
												"_c0": "61145",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "464.0",
												"_c2": "Tolima",
												"_c6": "29.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2846.0",
												"_c0": "61146",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1613.0",
												"_c2": "Tomsk Oblast",
												"_c6": "22.0"
											},
											{
												"_c3": "Italy",
												"_c5": "10316.0",
												"_c0": "61147",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "8865.0",
												"_c2": "Toscana",
												"_c6": "1121.0"
											},
											{
												"_c3": "Japan",
												"_c5": "4.0",
												"_c0": "61148",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3.0",
												"_c2": "Tottori",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "230.0",
												"_c0": "61149",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "205.0",
												"_c2": "Toyama",
												"_c6": "22.0"
											},
											{
												"_c3": "India",
												"_c5": "1918.0",
												"_c0": "61150",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1372.0",
												"_c2": "Tripura",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7376.0",
												"_c0": "61151",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6079.0",
												"_c2": "Tula Oblast",
												"_c6": "145.0"
											},
											{
												"_c3": "Peru",
												"_c5": "3309.0",
												"_c0": "61152",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Tumbes",
												"_c6": "127.0"
											},
											{
												"_c3": "UK",
												"_c5": "66.0",
												"_c0": "61153",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "11.0",
												"_c2": "Turks and Caicos Islands",
												"_c6": "2.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4001.0",
												"_c0": "61154",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3231.0",
												"_c2": "Tver Oblast",
												"_c6": "94.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3870.0",
												"_c0": "61155",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2374.0",
												"_c2": "Tyumen Oblast",
												"_c6": "18.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5325.0",
												"_c0": "61156",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2023.0",
												"_c2": "Tyva Republic",
												"_c6": "31.0"
											},
											{
												"_c3": "Peru",
												"_c5": "8558.0",
												"_c0": "61157",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Ucayali",
												"_c6": "162.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1652.0",
												"_c0": "61158",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1329.0",
												"_c2": "Udmurt Republic",
												"_c6": "19.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6836.0",
												"_c0": "61159",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4125.0",
												"_c2": "Ulyanovsk Oblast",
												"_c6": "52.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1448.0",
												"_c0": "61160",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1360.0",
												"_c2": "Umbria",
												"_c6": "80.0"
											},
											{
												"_c3": "Chile",
												"_c5": "0.0",
												"_c0": "61161",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "70.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "0.0",
												"_c0": "61162",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Germany",
												"_c5": "1018.0",
												"_c0": "61163",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "India",
												"_c5": "3416.0",
												"_c0": "61164",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "8.0",
												"_c0": "61165",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "8.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Peru",
												"_c5": "0.0",
												"_c0": "61166",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "210638.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Spain",
												"_c5": "0.0",
												"_c0": "61167",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "UK",
												"_c5": "0.0",
												"_c0": "61168",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "3430.0",
												"_c0": "61169",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Uppsala",
												"_c6": "234.0"
											},
											{
												"_c3": "US",
												"_c5": "28223.0",
												"_c0": "61170",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Utah",
												"_c6": "207.0"
											},
											{
												"_c3": "India",
												"_c5": "33700.0",
												"_c0": "61171",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "21787.0",
												"_c2": "Uttar Pradesh",
												"_c6": "889.0"
											},
											{
												"_c3": "India",
												"_c5": "3373.0",
												"_c0": "61172",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2706.0",
												"_c2": "Uttarakhand",
												"_c6": "46.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1196.0",
												"_c0": "61173",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1045.0",
												"_c2": "Valle d'Aosta",
												"_c6": "146.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "13389.0",
												"_c0": "61174",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6083.0",
												"_c2": "Valle del Cauca",
												"_c6": "541.0"
											},
											{
												"_c3": "Chile",
												"_c5": "14053.0",
												"_c0": "61175",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "11854.0",
												"_c2": "Valparaiso",
												"_c6": "320.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1000.0",
												"_c0": "61176",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Varmland",
												"_c6": "70.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "752.0",
												"_c0": "61177",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Vasterbotten",
												"_c6": "31.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1545.0",
												"_c0": "61178",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Vasternorrland",
												"_c6": "119.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2477.0",
												"_c0": "61179",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Vastmanland",
												"_c6": "175.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "16650.0",
												"_c0": "61180",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Vastra Gotaland",
												"_c6": "789.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "29.0",
												"_c0": "61181",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "21.0",
												"_c2": "Vaupes",
												"_c6": "1.0"
											},
											{
												"_c3": "Italy",
												"_c5": "19369.0",
												"_c0": "61182",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "16936.0",
												"_c2": "Veneto",
												"_c6": "2039.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "13293.0",
												"_c0": "61183",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "9977.0",
												"_c2": "Veracruz",
												"_c6": "1928.0"
											},
											{
												"_c3": "US",
												"_c5": "1277.0",
												"_c0": "61184",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Vermont",
												"_c6": "56.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1.0",
												"_c0": "61185",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1.0",
												"_c2": "Vichada",
												"_c6": "0.0"
											},
											{
												"_c3": "Australia",
												"_c5": "3560.0",
												"_c0": "61186",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2286.0",
												"_c2": "Victoria",
												"_c6": "23.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2060.0",
												"_c0": "61187",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1485.0",
												"_c2": "Vinnytsia Oblast",
												"_c6": "34.0"
											},
											{
												"_c3": "US",
												"_c5": "153.0",
												"_c0": "61188",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Virgin Islands",
												"_c6": "6.0"
											},
											{
												"_c3": "US",
												"_c5": "68931.0",
												"_c0": "61189",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Virginia",
												"_c6": "1958.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4829.0",
												"_c0": "61190",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3652.0",
												"_c2": "Vladimir Oblast",
												"_c6": "86.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7240.0",
												"_c0": "61191",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "3837.0",
												"_c2": "Volgograd Oblast",
												"_c6": "47.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1818.0",
												"_c0": "61192",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1447.0",
												"_c2": "Vologda Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2932.0",
												"_c0": "61193",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1406.0",
												"_c2": "Volyn Oblast",
												"_c6": "71.0"
											},
											{
												"_c3": "Russia",
												"_c5": "9036.0",
												"_c0": "61194",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "6146.0",
												"_c2": "Voronezh Oblast",
												"_c6": "59.0"
											},
											{
												"_c3": "Japan",
												"_c5": "71.0",
												"_c0": "61195",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "61.0",
												"_c2": "Wakayama",
												"_c6": "3.0"
											},
											{
												"_c3": "UK",
												"_c5": "15939.0",
												"_c0": "61196",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Wales",
												"_c6": "1540.0"
											},
											{
												"_c3": "US",
												"_c5": "39218.0",
												"_c0": "61197",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Washington",
												"_c6": "1424.0"
											},
											{
												"_c3": "India",
												"_c5": "27109.0",
												"_c0": "61198",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "17348.0",
												"_c2": "West Bengal",
												"_c6": "880.0"
											},
											{
												"_c3": "US",
												"_c5": "3983.0",
												"_c0": "61199",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "West Virginia",
												"_c6": "95.0"
											},
											{
												"_c3": "Australia",
												"_c5": "634.0",
												"_c0": "61200",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "604.0",
												"_c2": "Western Australia",
												"_c6": "9.0"
											},
											{
												"_c3": "US",
												"_c5": "34753.0",
												"_c0": "61201",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Wisconsin",
												"_c6": "814.0"
											},
											{
												"_c3": "US",
												"_c5": "1790.0",
												"_c0": "61202",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "0.0",
												"_c2": "Wyoming",
												"_c6": "21.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "76.0",
												"_c0": "61203",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "73.0",
												"_c2": "Xinjiang",
												"_c6": "3.0"
											},
											{
												"_c3": "Japan",
												"_c5": "71.0",
												"_c0": "61204",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "68.0",
												"_c2": "Yamagata",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "37.0",
												"_c0": "61205",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "37.0",
												"_c2": "Yamaguchi",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7547.0",
												"_c0": "61206",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2930.0",
												"_c2": "Yamalo-Nenets Autonomous Okrug",
												"_c6": "52.0"
											},
											{
												"_c3": "Japan",
												"_c5": "76.0",
												"_c0": "61207",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "74.0",
												"_c2": "Yamanashi",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5190.0",
												"_c0": "61208",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4214.0",
												"_c2": "Yaroslavl Oblast",
												"_c6": "22.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "5890.0",
												"_c0": "61209",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "4098.0",
												"_c2": "Yucatan",
												"_c6": "572.0"
											},
											{
												"_c3": "Canada",
												"_c5": "11.0",
												"_c0": "61210",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "11.0",
												"_c2": "Yukon",
												"_c6": "0.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "187.0",
												"_c0": "61211",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "183.0",
												"_c2": "Yunnan",
												"_c6": "2.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3555.0",
												"_c0": "61212",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "2642.0",
												"_c2": "Zabaykalsky Krai",
												"_c6": "44.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "1300.0",
												"_c0": "61213",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "844.0",
												"_c2": "Zacatecas",
												"_c6": "135.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "3734.0",
												"_c0": "61214",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1179.0",
												"_c2": "Zakarpattia Oblast",
												"_c6": "132.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "610.0",
												"_c0": "61215",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "493.0",
												"_c2": "Zaporizhia Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "1269.0",
												"_c0": "61216",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1267.0",
												"_c2": "Zhejiang",
												"_c6": "1.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "1512.0",
												"_c0": "61217",
												"_c4": "2020-07-11 04:34:26",
												"_c1": "07/10/2020",
												"_c7": "1106.0",
												"_c2": "Zhytomyr Oblast",
												"_c6": "33.0"
											},
											{
												"_c3": "Afghanistan",
												"_c5": "34366.0",
												"_c0": "61218",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21135.0",
												"_c2": "null",
												"_c6": "994.0"
											},
											{
												"_c3": "Albania",
												"_c5": "3371.0",
												"_c0": "61219",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1881.0",
												"_c2": "null",
												"_c6": "89.0"
											},
											{
												"_c3": "Algeria",
												"_c5": "18712.0",
												"_c0": "61220",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13124.0",
												"_c2": "null",
												"_c6": "1004.0"
											},
											{
												"_c3": "Andorra",
												"_c5": "855.0",
												"_c0": "61221",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "803.0",
												"_c2": "null",
												"_c6": "52.0"
											},
											{
												"_c3": "Angola",
												"_c5": "462.0",
												"_c0": "61222",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "118.0",
												"_c2": "null",
												"_c6": "23.0"
											},
											{
												"_c3": "Antigua and Barbuda",
												"_c5": "74.0",
												"_c0": "61223",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "57.0",
												"_c2": "null",
												"_c6": "3.0"
											},
											{
												"_c3": "Argentina",
												"_c5": "97509.0",
												"_c0": "61224",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "41408.0",
												"_c2": "null",
												"_c6": "1810.0"
											},
											{
												"_c3": "Armenia",
												"_c5": "31392.0",
												"_c0": "61225",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "19419.0",
												"_c2": "null",
												"_c6": "559.0"
											},
											{
												"_c3": "Austria",
												"_c5": "18783.0",
												"_c0": "61226",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "16864.0",
												"_c2": "null",
												"_c6": "706.0"
											},
											{
												"_c3": "Azerbaijan",
												"_c5": "23521.0",
												"_c0": "61227",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "14607.0",
												"_c2": "null",
												"_c6": "298.0"
											},
											{
												"_c3": "Bahamas",
												"_c5": "111.0",
												"_c0": "61228",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "89.0",
												"_c2": "null",
												"_c6": "11.0"
											},
											{
												"_c3": "Bahrain",
												"_c5": "32470.0",
												"_c0": "61229",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "27828.0",
												"_c2": "null",
												"_c6": "104.0"
											},
											{
												"_c3": "Bangladesh",
												"_c5": "181129.0",
												"_c0": "61230",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "88034.0",
												"_c2": "null",
												"_c6": "2305.0"
											},
											{
												"_c3": "Barbados",
												"_c5": "103.0",
												"_c0": "61231",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "90.0",
												"_c2": "null",
												"_c6": "7.0"
											},
											{
												"_c3": "Belarus",
												"_c5": "64767.0",
												"_c0": "61232",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "54919.0",
												"_c2": "null",
												"_c6": "459.0"
											},
											{
												"_c3": "Belgium",
												"_c5": "62469.0",
												"_c0": "61233",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "17196.0",
												"_c2": "null",
												"_c6": "9782.0"
											},
											{
												"_c3": "Belize",
												"_c5": "37.0",
												"_c0": "61234",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "20.0",
												"_c2": "null",
												"_c6": "2.0"
											},
											{
												"_c3": "Benin",
												"_c5": "1378.0",
												"_c0": "61235",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "557.0",
												"_c2": "null",
												"_c6": "26.0"
											},
											{
												"_c3": "Bhutan",
												"_c5": "82.0",
												"_c0": "61236",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "57.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Bolivia",
												"_c5": "47200.0",
												"_c0": "61237",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "14333.0",
												"_c2": "null",
												"_c6": "1754.0"
											},
											{
												"_c3": "Bosnia and Herzegovina",
												"_c5": "6719.0",
												"_c0": "61238",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3078.0",
												"_c2": "null",
												"_c6": "219.0"
											},
											{
												"_c3": "Botswana",
												"_c5": "314.0",
												"_c0": "61239",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "31.0",
												"_c2": "null",
												"_c6": "1.0"
											},
											{
												"_c3": "Brunei",
												"_c5": "141.0",
												"_c0": "61240",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "138.0",
												"_c2": "null",
												"_c6": "3.0"
											},
											{
												"_c3": "Bulgaria",
												"_c5": "7175.0",
												"_c0": "61241",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3311.0",
												"_c2": "null",
												"_c6": "267.0"
											},
											{
												"_c3": "Burkina Faso",
												"_c5": "1033.0",
												"_c0": "61242",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "869.0",
												"_c2": "null",
												"_c6": "53.0"
											},
											{
												"_c3": "Burma",
												"_c5": "330.0",
												"_c0": "61243",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "260.0",
												"_c2": "null",
												"_c6": "6.0"
											},
											{
												"_c3": "Burundi",
												"_c5": "191.0",
												"_c0": "61244",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "118.0",
												"_c2": "null",
												"_c6": "1.0"
											},
											{
												"_c3": "Cabo Verde",
												"_c5": "1623.0",
												"_c0": "61245",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "748.0",
												"_c2": "null",
												"_c6": "19.0"
											},
											{
												"_c3": "Cambodia",
												"_c5": "156.0",
												"_c0": "61246",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "133.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Cameroon",
												"_c5": "15173.0",
												"_c0": "61247",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11928.0",
												"_c2": "null",
												"_c6": "359.0"
											},
											{
												"_c3": "Central African Republic",
												"_c5": "4288.0",
												"_c0": "61248",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1145.0",
												"_c2": "null",
												"_c6": "53.0"
											},
											{
												"_c3": "Chad",
												"_c5": "874.0",
												"_c0": "61249",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "790.0",
												"_c2": "null",
												"_c6": "74.0"
											},
											{
												"_c3": "Comoros",
												"_c5": "317.0",
												"_c0": "61250",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "296.0",
												"_c2": "null",
												"_c6": "7.0"
											},
											{
												"_c3": "Congo (Brazzaville)",
												"_c5": "2028.0",
												"_c0": "61251",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "589.0",
												"_c2": "null",
												"_c6": "47.0"
											},
											{
												"_c3": "Congo (Kinshasa)",
												"_c5": "7971.0",
												"_c0": "61252",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3615.0",
												"_c2": "null",
												"_c6": "189.0"
											},
											{
												"_c3": "Costa Rica",
												"_c5": "7231.0",
												"_c0": "61253",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2220.0",
												"_c2": "null",
												"_c6": "28.0"
											},
											{
												"_c3": "Croatia",
												"_c5": "3672.0",
												"_c0": "61254",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2466.0",
												"_c2": "null",
												"_c6": "118.0"
											},
											{
												"_c3": "Cuba",
												"_c5": "2420.0",
												"_c0": "61255",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2254.0",
												"_c2": "null",
												"_c6": "87.0"
											},
											{
												"_c3": "Cyprus",
												"_c5": "1014.0",
												"_c0": "61256",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "839.0",
												"_c2": "null",
												"_c6": "19.0"
											},
											{
												"_c3": "Czech Republic",
												"_c5": "13115.0",
												"_c0": "61257",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8227.0",
												"_c2": "null",
												"_c6": "352.0"
											},
											{
												"_c3": "Denmark",
												"_c5": "12946.0",
												"_c0": "61258",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12077.0",
												"_c2": "null",
												"_c6": "609.0"
											},
											{
												"_c3": "Diamond Princess",
												"_c5": "712.0",
												"_c0": "61259",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "651.0",
												"_c2": "null",
												"_c6": "13.0"
											},
											{
												"_c3": "Djibouti",
												"_c5": "4968.0",
												"_c0": "61260",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4689.0",
												"_c2": "null",
												"_c6": "56.0"
											},
											{
												"_c3": "Dominica",
												"_c5": "18.0",
												"_c0": "61261",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "18.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Dominican Republic",
												"_c5": "43114.0",
												"_c0": "61262",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "20996.0",
												"_c2": "null",
												"_c6": "880.0"
											},
											{
												"_c3": "Ecuador",
												"_c5": "67209.0",
												"_c0": "61263",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "30107.0",
												"_c2": "null",
												"_c6": "5031.0"
											},
											{
												"_c3": "Egypt",
												"_c5": "81158.0",
												"_c0": "61264",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "23876.0",
												"_c2": "null",
												"_c6": "3769.0"
											},
											{
												"_c3": "El Salvador",
												"_c5": "9391.0",
												"_c0": "61265",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5516.0",
												"_c2": "null",
												"_c6": "254.0"
											},
											{
												"_c3": "Equatorial Guinea",
												"_c5": "3071.0",
												"_c0": "61266",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "842.0",
												"_c2": "null",
												"_c6": "51.0"
											},
											{
												"_c3": "Eritrea",
												"_c5": "232.0",
												"_c0": "61267",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "107.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Estonia",
												"_c5": "2014.0",
												"_c0": "61268",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1895.0",
												"_c2": "null",
												"_c6": "69.0"
											},
											{
												"_c3": "Eswatini",
												"_c5": "1311.0",
												"_c0": "61269",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "656.0",
												"_c2": "null",
												"_c6": "18.0"
											},
											{
												"_c3": "Ethiopia",
												"_c5": "7402.0",
												"_c0": "61270",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2430.0",
												"_c2": "null",
												"_c6": "124.0"
											},
											{
												"_c3": "Fiji",
												"_c5": "26.0",
												"_c0": "61271",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "18.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Finland",
												"_c5": "7291.0",
												"_c0": "61272",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6800.0",
												"_c2": "null",
												"_c6": "329.0"
											},
											{
												"_c3": "France",
												"_c5": "198199.0",
												"_c0": "61273",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "72200.0",
												"_c2": "null",
												"_c6": "29909.0"
											},
											{
												"_c3": "Gabon",
												"_c5": "5942.0",
												"_c0": "61274",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3004.0",
												"_c2": "null",
												"_c6": "46.0"
											},
											{
												"_c3": "Gambia",
												"_c5": "64.0",
												"_c0": "61275",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "34.0",
												"_c2": "null",
												"_c6": "3.0"
											},
											{
												"_c3": "Georgia",
												"_c5": "981.0",
												"_c0": "61276",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "851.0",
												"_c2": "null",
												"_c6": "15.0"
											},
											{
												"_c3": "Ghana",
												"_c5": "24248.0",
												"_c0": "61277",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "19831.0",
												"_c2": "null",
												"_c6": "135.0"
											},
											{
												"_c3": "Greece",
												"_c5": "3772.0",
												"_c0": "61278",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1374.0",
												"_c2": "null",
												"_c6": "193.0"
											},
											{
												"_c3": "Grenada",
												"_c5": "23.0",
												"_c0": "61279",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "23.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Guatemala",
												"_c5": "28598.0",
												"_c0": "61280",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4073.0",
												"_c2": "null",
												"_c6": "1172.0"
											},
											{
												"_c3": "Guinea",
												"_c5": "6044.0",
												"_c0": "61281",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4802.0",
												"_c2": "null",
												"_c6": "37.0"
											},
											{
												"_c3": "Guinea-Bissau",
												"_c5": "1842.0",
												"_c0": "61282",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "773.0",
												"_c2": "null",
												"_c6": "26.0"
											},
											{
												"_c3": "Guyana",
												"_c5": "291.0",
												"_c0": "61283",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "148.0",
												"_c2": "null",
												"_c6": "17.0"
											},
											{
												"_c3": "Haiti",
												"_c5": "6690.0",
												"_c0": "61284",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2590.0",
												"_c2": "null",
												"_c6": "139.0"
											},
											{
												"_c3": "Holy See",
												"_c5": "12.0",
												"_c0": "61285",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Honduras",
												"_c5": "27583.0",
												"_c0": "61286",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2901.0",
												"_c2": "null",
												"_c6": "771.0"
											},
											{
												"_c3": "Hungary",
												"_c5": "4229.0",
												"_c0": "61287",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2974.0",
												"_c2": "null",
												"_c6": "595.0"
											},
											{
												"_c3": "Iceland",
												"_c5": "1888.0",
												"_c0": "61288",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1860.0",
												"_c2": "null",
												"_c6": "10.0"
											},
											{
												"_c3": "Indonesia",
												"_c5": "74018.0",
												"_c0": "61289",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "34719.0",
												"_c2": "null",
												"_c6": "3535.0"
											},
											{
												"_c3": "Iran",
												"_c5": "255117.0",
												"_c0": "61290",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "217666.0",
												"_c2": "null",
												"_c6": "12635.0"
											},
											{
												"_c3": "Iraq",
												"_c5": "75194.0",
												"_c0": "61291",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "43079.0",
												"_c2": "null",
												"_c6": "3055.0"
											},
											{
												"_c3": "Ireland",
												"_c5": "25611.0",
												"_c0": "61292",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "23364.0",
												"_c2": "null",
												"_c6": "1746.0"
											},
											{
												"_c3": "Israel",
												"_c5": "37464.0",
												"_c0": "61293",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "18814.0",
												"_c2": "null",
												"_c6": "354.0"
											},
											{
												"_c3": "Ivory Coast",
												"_c5": "12443.0",
												"_c0": "61294",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6357.0",
												"_c2": "null",
												"_c6": "82.0"
											},
											{
												"_c3": "Jamaica",
												"_c5": "758.0",
												"_c0": "61295",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "615.0",
												"_c2": "null",
												"_c6": "10.0"
											},
											{
												"_c3": "Jordan",
												"_c5": "1176.0",
												"_c0": "61296",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "991.0",
												"_c2": "null",
												"_c6": "10.0"
											},
											{
												"_c3": "Kazakhstan",
												"_c5": "58253.0",
												"_c0": "61297",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "33814.0",
												"_c2": "null",
												"_c6": "264.0"
											},
											{
												"_c3": "Kenya",
												"_c5": "9726.0",
												"_c0": "61298",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2832.0",
												"_c2": "null",
												"_c6": "184.0"
											},
											{
												"_c3": "Kosovo",
												"_c5": "4715.0",
												"_c0": "61299",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2227.0",
												"_c2": "null",
												"_c6": "101.0"
											},
											{
												"_c3": "Kuwait",
												"_c5": "54058.0",
												"_c0": "61300",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "43961.0",
												"_c2": "null",
												"_c6": "386.0"
											},
											{
												"_c3": "Kyrgyzstan",
												"_c5": "10410.0",
												"_c0": "61301",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3253.0",
												"_c2": "null",
												"_c6": "129.0"
											},
											{
												"_c3": "Laos",
												"_c5": "19.0",
												"_c0": "61302",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "19.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Latvia",
												"_c5": "1173.0",
												"_c0": "61303",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1019.0",
												"_c2": "null",
												"_c6": "30.0"
											},
											{
												"_c3": "Lebanon",
												"_c5": "2168.0",
												"_c0": "61304",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1402.0",
												"_c2": "null",
												"_c6": "36.0"
											},
											{
												"_c3": "Lesotho",
												"_c5": "184.0",
												"_c0": "61305",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "26.0",
												"_c2": "null",
												"_c6": "1.0"
											},
											{
												"_c3": "Liberia",
												"_c5": "998.0",
												"_c0": "61306",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "420.0",
												"_c2": "null",
												"_c6": "47.0"
											},
											{
												"_c3": "Libya",
												"_c5": "1389.0",
												"_c0": "61307",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "340.0",
												"_c2": "null",
												"_c6": "38.0"
											},
											{
												"_c3": "Liechtenstein",
												"_c5": "84.0",
												"_c0": "61308",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "81.0",
												"_c2": "null",
												"_c6": "1.0"
											},
											{
												"_c3": "Lithuania",
												"_c5": "1865.0",
												"_c0": "61309",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1579.0",
												"_c2": "null",
												"_c6": "79.0"
											},
											{
												"_c3": "Luxembourg",
												"_c5": "4842.0",
												"_c0": "61310",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4086.0",
												"_c2": "null",
												"_c6": "110.0"
											},
											{
												"_c3": "MS Zaandam",
												"_c5": "9.0",
												"_c0": "61311",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "null",
												"_c6": "2.0"
											},
											{
												"_c3": "Madagascar",
												"_c5": "4578.0",
												"_c0": "61312",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2287.0",
												"_c2": "null",
												"_c6": "34.0"
											},
											{
												"_c3": "Malawi",
												"_c5": "2261.0",
												"_c0": "61313",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "517.0",
												"_c2": "null",
												"_c6": "33.0"
											},
											{
												"_c3": "Malaysia",
												"_c5": "8704.0",
												"_c0": "61314",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8515.0",
												"_c2": "null",
												"_c6": "122.0"
											},
											{
												"_c3": "Maldives",
												"_c5": "2664.0",
												"_c0": "61315",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2268.0",
												"_c2": "null",
												"_c6": "13.0"
											},
											{
												"_c3": "Mali",
												"_c5": "2406.0",
												"_c0": "61316",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1683.0",
												"_c2": "null",
												"_c6": "121.0"
											},
											{
												"_c3": "Malta",
												"_c5": "674.0",
												"_c0": "61317",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "658.0",
												"_c2": "null",
												"_c6": "9.0"
											},
											{
												"_c3": "Mauritania",
												"_c5": "5275.0",
												"_c0": "61318",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2160.0",
												"_c2": "null",
												"_c6": "147.0"
											},
											{
												"_c3": "Mauritius",
												"_c5": "342.0",
												"_c0": "61319",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "330.0",
												"_c2": "null",
												"_c6": "10.0"
											},
											{
												"_c3": "Moldova",
												"_c5": "19208.0",
												"_c0": "61320",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12456.0",
												"_c2": "null",
												"_c6": "640.0"
											},
											{
												"_c3": "Monaco",
												"_c5": "109.0",
												"_c0": "61321",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "96.0",
												"_c2": "null",
												"_c6": "4.0"
											},
											{
												"_c3": "Mongolia",
												"_c5": "230.0",
												"_c0": "61322",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "202.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Montenegro",
												"_c5": "1164.0",
												"_c0": "61323",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "325.0",
												"_c2": "null",
												"_c6": "23.0"
											},
											{
												"_c3": "Morocco",
												"_c5": "15542.0",
												"_c0": "61324",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12065.0",
												"_c2": "null",
												"_c6": "245.0"
											},
											{
												"_c3": "Mozambique",
												"_c5": "1135.0",
												"_c0": "61325",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "349.0",
												"_c2": "null",
												"_c6": "9.0"
											},
											{
												"_c3": "Namibia",
												"_c5": "668.0",
												"_c0": "61326",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "25.0",
												"_c2": "null",
												"_c6": "1.0"
											},
											{
												"_c3": "Nepal",
												"_c5": "16719.0",
												"_c0": "61327",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8442.0",
												"_c2": "null",
												"_c6": "38.0"
											},
											{
												"_c3": "Netherlands",
												"_c5": "50921.0",
												"_c0": "61328",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "null",
												"_c6": "6137.0"
											},
											{
												"_c3": "New Zealand",
												"_c5": "1544.0",
												"_c0": "61329",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1497.0",
												"_c2": "null",
												"_c6": "22.0"
											},
											{
												"_c3": "Nicaragua",
												"_c5": "2846.0",
												"_c0": "61330",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1993.0",
												"_c2": "null",
												"_c6": "91.0"
											},
											{
												"_c3": "Niger",
												"_c5": "1099.0",
												"_c0": "61331",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "992.0",
												"_c2": "null",
												"_c6": "68.0"
											},
											{
												"_c3": "Nigeria",
												"_c5": "31987.0",
												"_c0": "61332",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13103.0",
												"_c2": "null",
												"_c6": "724.0"
											},
											{
												"_c3": "North Macedonia",
												"_c5": "7975.0",
												"_c0": "61333",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4080.0",
												"_c2": "null",
												"_c6": "376.0"
											},
											{
												"_c3": "Norway",
												"_c5": "8977.0",
												"_c0": "61334",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8138.0",
												"_c2": "null",
												"_c6": "252.0"
											},
											{
												"_c3": "Oman",
												"_c5": "54697.0",
												"_c0": "61335",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "35255.0",
												"_c2": "null",
												"_c6": "248.0"
											},
											{
												"_c3": "Panama",
												"_c5": "44332.0",
												"_c0": "61336",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "22170.0",
												"_c2": "null",
												"_c6": "893.0"
											},
											{
												"_c3": "Papua New Guinea",
												"_c5": "11.0",
												"_c0": "61337",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Paraguay",
												"_c5": "2820.0",
												"_c0": "61338",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1261.0",
												"_c2": "null",
												"_c6": "21.0"
											},
											{
												"_c3": "Philippines",
												"_c5": "54222.0",
												"_c0": "61339",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "14037.0",
												"_c2": "null",
												"_c6": "1372.0"
											},
											{
												"_c3": "Poland",
												"_c5": "37521.0",
												"_c0": "61340",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "26635.0",
												"_c2": "null",
												"_c6": "1568.0"
											},
											{
												"_c3": "Portugal",
												"_c5": "46221.0",
												"_c0": "61341",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "30655.0",
												"_c2": "null",
												"_c6": "1654.0"
											},
											{
												"_c3": "Qatar",
												"_c5": "103128.0",
												"_c0": "61342",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "98934.0",
												"_c2": "null",
												"_c6": "146.0"
											},
											{
												"_c3": "Romania",
												"_c5": "32079.0",
												"_c0": "61343",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21414.0",
												"_c2": "null",
												"_c6": "1871.0"
											},
											{
												"_c3": "Rwanda",
												"_c5": "1299.0",
												"_c0": "61344",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "663.0",
												"_c2": "null",
												"_c6": "4.0"
											},
											{
												"_c3": "Saint Kitts and Nevis",
												"_c5": "17.0",
												"_c0": "61345",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "15.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Saint Lucia",
												"_c5": "22.0",
												"_c0": "61346",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "19.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Saint Vincent and the Grenadines",
												"_c5": "29.0",
												"_c0": "61347",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "29.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "San Marino",
												"_c5": "699.0",
												"_c0": "61348",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "656.0",
												"_c2": "null",
												"_c6": "42.0"
											},
											{
												"_c3": "Sao Tome and Principe",
												"_c5": "727.0",
												"_c0": "61349",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "284.0",
												"_c2": "null",
												"_c6": "14.0"
											},
											{
												"_c3": "Saudi Arabia",
												"_c5": "229480.0",
												"_c0": "61350",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "165396.0",
												"_c2": "null",
												"_c6": "2181.0"
											},
											{
												"_c3": "Senegal",
												"_c5": "8014.0",
												"_c0": "61351",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5381.0",
												"_c2": "null",
												"_c6": "145.0"
											},
											{
												"_c3": "Serbia",
												"_c5": "18073.0",
												"_c0": "61352",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13780.0",
												"_c2": "null",
												"_c6": "382.0"
											},
											{
												"_c3": "Seychelles",
												"_c5": "100.0",
												"_c0": "61353",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Sierra Leone",
												"_c5": "1618.0",
												"_c0": "61354",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1141.0",
												"_c2": "null",
												"_c6": "63.0"
											},
											{
												"_c3": "Singapore",
												"_c5": "45783.0",
												"_c0": "61355",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "42026.0",
												"_c2": "null",
												"_c6": "26.0"
											},
											{
												"_c3": "Slovakia",
												"_c5": "1893.0",
												"_c0": "61356",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1493.0",
												"_c2": "null",
												"_c6": "28.0"
											},
											{
												"_c3": "Slovenia",
												"_c5": "1827.0",
												"_c0": "61357",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1429.0",
												"_c2": "null",
												"_c6": "111.0"
											},
											{
												"_c3": "Somalia",
												"_c5": "3051.0",
												"_c0": "61358",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1264.0",
												"_c2": "null",
												"_c6": "92.0"
											},
											{
												"_c3": "South Africa",
												"_c5": "264184.0",
												"_c0": "61359",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "127715.0",
												"_c2": "null",
												"_c6": "3971.0"
											},
											{
												"_c3": "South Korea",
												"_c5": "13417.0",
												"_c0": "61360",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12178.0",
												"_c2": "null",
												"_c6": "289.0"
											},
											{
												"_c3": "South Sudan",
												"_c5": "2021.0",
												"_c0": "61361",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "333.0",
												"_c2": "null",
												"_c6": "38.0"
											},
											{
												"_c3": "Sri Lanka",
												"_c5": "2511.0",
												"_c0": "61362",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1980.0",
												"_c2": "null",
												"_c6": "11.0"
											},
											{
												"_c3": "Sudan",
												"_c5": "10250.0",
												"_c0": "61363",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5341.0",
												"_c2": "null",
												"_c6": "650.0"
											},
											{
												"_c3": "Suriname",
												"_c5": "741.0",
												"_c0": "61364",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "495.0",
												"_c2": "null",
												"_c6": "18.0"
											},
											{
												"_c3": "Switzerland",
												"_c5": "32817.0",
												"_c0": "61365",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "29500.0",
												"_c2": "null",
												"_c6": "1968.0"
											},
											{
												"_c3": "Syria",
												"_c5": "394.0",
												"_c0": "61366",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "126.0",
												"_c2": "null",
												"_c6": "16.0"
											},
											{
												"_c3": "Taiwan",
												"_c5": "451.0",
												"_c0": "61367",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "438.0",
												"_c2": "null",
												"_c6": "7.0"
											},
											{
												"_c3": "Tajikistan",
												"_c5": "6506.0",
												"_c0": "61368",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5176.0",
												"_c2": "null",
												"_c6": "55.0"
											},
											{
												"_c3": "Tanzania",
												"_c5": "509.0",
												"_c0": "61369",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "183.0",
												"_c2": "null",
												"_c6": "21.0"
											},
											{
												"_c3": "Thailand",
												"_c5": "3216.0",
												"_c0": "61370",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3088.0",
												"_c2": "null",
												"_c6": "58.0"
											},
											{
												"_c3": "Timor-Leste",
												"_c5": "24.0",
												"_c0": "61371",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "24.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "Togo",
												"_c5": "710.0",
												"_c0": "61372",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "494.0",
												"_c2": "null",
												"_c6": "15.0"
											},
											{
												"_c3": "Trinidad and Tobago",
												"_c5": "133.0",
												"_c0": "61373",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "120.0",
												"_c2": "null",
												"_c6": "8.0"
											},
											{
												"_c3": "Tunisia",
												"_c5": "1245.0",
												"_c0": "61374",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1076.0",
												"_c2": "null",
												"_c6": "50.0"
											},
											{
												"_c3": "Turkey",
												"_c5": "211981.0",
												"_c0": "61375",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "193217.0",
												"_c2": "null",
												"_c6": "5344.0"
											},
											{
												"_c3": "Uganda",
												"_c5": "1013.0",
												"_c0": "61376",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "952.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "United Arab Emirates",
												"_c5": "54453.0",
												"_c0": "61377",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "44648.0",
												"_c2": "null",
												"_c6": "331.0"
											},
											{
												"_c3": "Uruguay",
												"_c5": "986.0",
												"_c0": "61378",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "896.0",
												"_c2": "null",
												"_c6": "30.0"
											},
											{
												"_c3": "Uzbekistan",
												"_c5": "12513.0",
												"_c0": "61379",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7723.0",
												"_c2": "null",
												"_c6": "57.0"
											},
											{
												"_c3": "Venezuela",
												"_c5": "9178.0",
												"_c0": "61380",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2671.0",
												"_c2": "null",
												"_c6": "85.0"
											},
											{
												"_c3": "Vietnam",
												"_c5": "370.0",
												"_c0": "61381",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "350.0",
												"_c2": "null",
												"_c6": "0.0"
											},
											{
												"_c3": "West Bank and Gaza",
												"_c5": "5931.0",
												"_c0": "61382",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "536.0",
												"_c2": "null",
												"_c6": "33.0"
											},
											{
												"_c3": "Western Sahara",
												"_c5": "10.0",
												"_c0": "61383",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8.0",
												"_c2": "null",
												"_c6": "1.0"
											},
											{
												"_c3": "Yemen",
												"_c5": "1389.0",
												"_c0": "61384",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "642.0",
												"_c2": "null",
												"_c6": "365.0"
											},
											{
												"_c3": "Zambia",
												"_c5": "1895.0",
												"_c0": "61385",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1348.0",
												"_c2": "null",
												"_c6": "42.0"
											},
											{
												"_c3": "Zimbabwe",
												"_c5": "982.0",
												"_c0": "61386",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "320.0",
												"_c2": "null",
												"_c6": "18.0"
											},
											{
												"_c3": "Italy",
												"_c5": "3323.0",
												"_c0": "61387",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2712.0",
												"_c2": "Abruzzo",
												"_c6": "464.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "16080.0",
												"_c0": "61388",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9128.0",
												"_c2": "Acre",
												"_c6": "419.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2224.0",
												"_c0": "61389",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1701.0",
												"_c2": "Adygea Republic",
												"_c6": "14.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2875.0",
												"_c0": "61390",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2323.0",
												"_c2": "Aguascalientes",
												"_c6": "185.0"
											},
											{
												"_c3": "Japan",
												"_c5": "529.0",
												"_c0": "61391",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "481.0",
												"_c2": "Aichi",
												"_c6": "34.0"
											},
											{
												"_c3": "Japan",
												"_c5": "16.0",
												"_c0": "61392",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "16.0",
												"_c2": "Akita",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "51947.0",
												"_c0": "61393",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Alabama",
												"_c6": "1114.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "44633.0",
												"_c0": "61394",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "36973.0",
												"_c2": "Alagoas",
												"_c6": "1264.0"
											},
											{
												"_c3": "US",
												"_c5": "1385.0",
												"_c0": "61395",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Alaska",
												"_c6": "17.0"
											},
											{
												"_c3": "Canada",
												"_c5": "8596.0",
												"_c0": "61396",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7844.0",
												"_c2": "Alberta",
												"_c6": "160.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5589.0",
												"_c0": "61397",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3800.0",
												"_c2": "Altai Krai",
												"_c6": "50.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1036.0",
												"_c0": "61398",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "515.0",
												"_c2": "Altai Republic",
												"_c6": "1.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "31279.0",
												"_c0": "61399",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "19965.0",
												"_c2": "Amapa",
												"_c6": "473.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "83230.0",
												"_c0": "61400",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "69736.0",
												"_c2": "Amazonas",
												"_c6": "3023.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "2406.0",
												"_c0": "61401",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2159.0",
												"_c2": "Amazonas",
												"_c6": "102.0"
											},
											{
												"_c3": "Peru",
												"_c5": "3267.0",
												"_c0": "61402",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Amazonas",
												"_c6": "93.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2057.0",
												"_c0": "61403",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1119.0",
												"_c2": "Amur Oblast",
												"_c6": "23.0"
											},
											{
												"_c3": "Peru",
												"_c5": "9390.0",
												"_c0": "61404",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Ancash",
												"_c6": "541.0"
											},
											{
												"_c3": "Spain",
												"_c5": "13386.0",
												"_c0": "61405",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10671.0",
												"_c2": "Andalusia",
												"_c6": "1435.0"
											},
											{
												"_c3": "India",
												"_c5": "163.0",
												"_c0": "61406",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "93.0",
												"_c2": "Andaman and Nicobar Islands",
												"_c6": "0.0"
											},
											{
												"_c3": "India",
												"_c5": "27235.0",
												"_c0": "61407",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "14393.0",
												"_c2": "Andhra Pradesh",
												"_c6": "309.0"
											},
											{
												"_c3": "UK",
												"_c5": "3.0",
												"_c0": "61408",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3.0",
												"_c2": "Anguilla",
												"_c6": "0.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "991.0",
												"_c0": "61409",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "985.0",
												"_c2": "Anhui",
												"_c6": "6.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "8451.0",
												"_c0": "61410",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2671.0",
												"_c2": "Antioquia",
												"_c6": "77.0"
											},
											{
												"_c3": "Chile",
												"_c5": "11580.0",
												"_c0": "61411",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9494.0",
												"_c2": "Antofagasta",
												"_c6": "218.0"
											},
											{
												"_c3": "Japan",
												"_c5": "33.0",
												"_c0": "61412",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "26.0",
												"_c2": "Aomori",
												"_c6": "1.0"
											},
											{
												"_c3": "Peru",
												"_c5": "628.0",
												"_c0": "61413",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Apurimac",
												"_c6": "23.0"
											},
											{
												"_c3": "Spain",
												"_c5": "6632.0",
												"_c0": "61414",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3772.0",
												"_c2": "Aragon",
												"_c6": "915.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "141.0",
												"_c0": "61415",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "19.0",
												"_c2": "Arauca",
												"_c6": "0.0"
											},
											{
												"_c3": "Chile",
												"_c5": "3557.0",
												"_c0": "61416",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3250.0",
												"_c2": "Araucania",
												"_c6": "47.0"
											},
											{
												"_c3": "Peru",
												"_c5": "8724.0",
												"_c0": "61417",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Arequipa",
												"_c6": "390.0"
											},
											{
												"_c3": "Chile",
												"_c5": "2395.0",
												"_c0": "61418",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1801.0",
												"_c2": "Arica y Parinacota",
												"_c6": "26.0"
											},
											{
												"_c3": "US",
												"_c5": "119930.0",
												"_c0": "61419",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Arizona",
												"_c6": "2151.0"
											},
											{
												"_c3": "US",
												"_c5": "27864.0",
												"_c0": "61420",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Arkansas",
												"_c6": "319.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6873.0",
												"_c0": "61421",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4297.0",
												"_c2": "Arkhangelsk Oblast",
												"_c6": "96.0"
											},
											{
												"_c3": "Netherlands",
												"_c5": "105.0",
												"_c0": "61422",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "99.0",
												"_c2": "Aruba",
												"_c6": "3.0"
											},
											{
												"_c3": "India",
												"_c5": "341.0",
												"_c0": "61423",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "125.0",
												"_c2": "Arunachal Pradesh",
												"_c6": "2.0"
											},
											{
												"_c3": "India",
												"_c5": "15536.0",
												"_c0": "61424",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9150.0",
												"_c2": "Assam",
												"_c6": "35.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3873.0",
												"_c0": "61425",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2600.0",
												"_c2": "Astrakhan Oblast",
												"_c6": "35.0"
											},
											{
												"_c3": "Spain",
												"_c5": "2437.0",
												"_c0": "61426",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1063.0",
												"_c2": "Asturias",
												"_c6": "334.0"
											},
											{
												"_c3": "Chile",
												"_c5": "1522.0",
												"_c0": "61427",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1126.0",
												"_c2": "Atacama",
												"_c6": "9.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "31882.0",
												"_c0": "61428",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12904.0",
												"_c2": "Atlantico",
												"_c6": "1837.0"
											},
											{
												"_c3": "Australia",
												"_c5": "113.0",
												"_c0": "61429",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "105.0",
												"_c2": "Australian Capital Territory",
												"_c6": "3.0"
											},
											{
												"_c3": "Peru",
												"_c5": "2243.0",
												"_c0": "61430",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Ayacucho",
												"_c6": "34.0"
											},
											{
												"_c3": "Chile",
												"_c5": "51.0",
												"_c0": "61431",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "45.0",
												"_c2": "Aysen",
												"_c6": "0.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "1564.0",
												"_c0": "61432",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "942.0",
												"_c2": "Azad Jammu and Kashmir",
												"_c6": "43.0"
											},
											{
												"_c3": "Germany",
												"_c5": "36051.0",
												"_c0": "61433",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "33643.0",
												"_c2": "Baden-Wurttemberg",
												"_c6": "1838.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "104188.0",
												"_c0": "61434",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "73136.0",
												"_c2": "Bahia",
												"_c6": "2436.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "10772.0",
												"_c0": "61435",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7922.0",
												"_c2": "Baja California",
												"_c6": "2250.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2324.0",
												"_c0": "61436",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1665.0",
												"_c2": "Baja California Sur",
												"_c6": "99.0"
											},
											{
												"_c3": "Spain",
												"_c5": "2249.0",
												"_c0": "61437",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1533.0",
												"_c2": "Baleares",
												"_c6": "224.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "11157.0",
												"_c0": "61438",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7421.0",
												"_c2": "Balochistan",
												"_c6": "126.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5875.0",
												"_c0": "61439",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3962.0",
												"_c2": "Bashkortostan Republic",
												"_c6": "19.0"
											},
											{
												"_c3": "Italy",
												"_c5": "406.0",
												"_c0": "61440",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "374.0",
												"_c2": "Basilicata",
												"_c6": "27.0"
											},
											{
												"_c3": "Germany",
												"_c5": "49184.0",
												"_c0": "61441",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "45700.0",
												"_c2": "Bayern",
												"_c6": "2612.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "929.0",
												"_c0": "61442",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "680.0",
												"_c2": "Beijing",
												"_c6": "9.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5085.0",
												"_c0": "61443",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4520.0",
												"_c2": "Belgorod Oblast",
												"_c6": "42.0"
											},
											{
												"_c3": "Germany",
												"_c5": "8636.0",
												"_c0": "61444",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7967.0",
												"_c2": "Berlin",
												"_c6": "217.0"
											},
											{
												"_c3": "UK",
												"_c5": "150.0",
												"_c0": "61445",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "137.0",
												"_c2": "Bermuda",
												"_c6": "9.0"
											},
											{
												"_c3": "India",
												"_c5": "15373.0",
												"_c0": "61446",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10685.0",
												"_c2": "Bihar",
												"_c6": "131.0"
											},
											{
												"_c3": "Chile",
												"_c5": "8295.0",
												"_c0": "61447",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6930.0",
												"_c2": "Biobio",
												"_c6": "72.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "470.0",
												"_c0": "61448",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Blekinge",
												"_c6": "14.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "11733.0",
												"_c0": "61449",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6358.0",
												"_c2": "Bolivar",
												"_c6": "456.0"
											},
											{
												"_c3": "Netherlands",
												"_c5": "7.0",
												"_c0": "61450",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7.0",
												"_c2": "Bonaire, Sint Eustatius and Saba",
												"_c6": "0.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "479.0",
												"_c0": "61451",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "271.0",
												"_c2": "Boyaca",
												"_c6": "19.0"
											},
											{
												"_c3": "Germany",
												"_c5": "3482.0",
												"_c0": "61452",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3300.0",
												"_c2": "Brandenburg",
												"_c6": "173.0"
											},
											{
												"_c3": "Germany",
												"_c5": "1692.0",
												"_c0": "61453",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1604.0",
												"_c2": "Bremen",
												"_c6": "55.0"
											},
											{
												"_c3": "Canada",
												"_c5": "3053.0",
												"_c0": "61454",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2679.0",
												"_c2": "British Columbia",
												"_c6": "187.0"
											},
											{
												"_c3": "UK",
												"_c5": "8.0",
												"_c0": "61455",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7.0",
												"_c2": "British Virgin Islands",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6725.0",
												"_c0": "61456",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5037.0",
												"_c2": "Bryansk Oblast",
												"_c6": "35.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3341.0",
												"_c0": "61457",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2473.0",
												"_c2": "Buryatia Republic",
												"_c6": "25.0"
											},
											{
												"_c3": "Spain",
												"_c5": "11740.0",
												"_c0": "61458",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9970.0",
												"_c2": "C. Valenciana",
												"_c6": "1432.0"
											},
											{
												"_c3": "Peru",
												"_c5": "3327.0",
												"_c0": "61459",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Cajamarca",
												"_c6": "125.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1188.0",
												"_c0": "61460",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1062.0",
												"_c2": "Calabria",
												"_c6": "97.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "296.0",
												"_c0": "61461",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "214.0",
												"_c2": "Caldas",
												"_c6": "8.0"
											},
											{
												"_c3": "US",
												"_c5": "318761.0",
												"_c0": "61462",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "California",
												"_c6": "7027.0"
											},
											{
												"_c3": "Peru",
												"_c5": "19012.0",
												"_c0": "61463",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Callao",
												"_c6": "707.0"
											},
											{
												"_c3": "Italy",
												"_c5": "4769.0",
												"_c0": "61464",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4095.0",
												"_c2": "Campania",
												"_c6": "432.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2847.0",
												"_c0": "61465",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2298.0",
												"_c2": "Campeche",
												"_c6": "282.0"
											},
											{
												"_c3": "Spain",
												"_c5": "2450.0",
												"_c0": "61466",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1537.0",
												"_c2": "Canarias",
												"_c6": "162.0"
											},
											{
												"_c3": "Spain",
												"_c5": "2369.0",
												"_c0": "61467",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2287.0",
												"_c2": "Cantabria",
												"_c6": "216.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "45039.0",
												"_c0": "61468",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "16755.0",
												"_c2": "Capital District",
												"_c6": "1076.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "86.0",
												"_c0": "61469",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "23.0",
												"_c2": "Caqueta",
												"_c6": "3.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "112.0",
												"_c0": "61470",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "51.0",
												"_c2": "Casanare",
												"_c6": "1.0"
											},
											{
												"_c3": "Spain",
												"_c5": "18343.0",
												"_c0": "61471",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6392.0",
												"_c2": "Castilla - La Mancha",
												"_c6": "3029.0"
											},
											{
												"_c3": "Spain",
												"_c5": "19787.0",
												"_c0": "61472",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8716.0",
												"_c2": "Castilla y Leon",
												"_c6": "2792.0"
											},
											{
												"_c3": "Spain",
												"_c5": "63888.0",
												"_c0": "61473",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "26203.0",
												"_c2": "Catalonia",
												"_c6": "5675.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "710.0",
												"_c0": "61474",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "206.0",
												"_c2": "Cauca",
												"_c6": "23.0"
											},
											{
												"_c3": "UK",
												"_c5": "201.0",
												"_c0": "61475",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "197.0",
												"_c2": "Cayman Islands",
												"_c6": "1.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "135945.0",
												"_c0": "61476",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "108361.0",
												"_c2": "Ceara",
												"_c6": "6853.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1418.0",
												"_c0": "61477",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "784.0",
												"_c2": "Cesar",
												"_c6": "35.0"
											},
											{
												"_c3": "Spain",
												"_c5": "163.0",
												"_c0": "61478",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "163.0",
												"_c2": "Ceuta",
												"_c6": "4.0"
											},
											{
												"_c3": "India",
												"_c5": "555.0",
												"_c0": "61479",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "413.0",
												"_c2": "Chandigarh",
												"_c6": "7.0"
											},
											{
												"_c3": "UK",
												"_c5": "577.0",
												"_c0": "61480",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "512.0",
												"_c2": "Channel Islands",
												"_c6": "47.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1821.0",
												"_c0": "61481",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1240.0",
												"_c2": "Chechen Republic",
												"_c6": "26.0"
											},
											{
												"_c3": "Russia",
												"_c5": "8649.0",
												"_c0": "61482",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4877.0",
												"_c2": "Chelyabinsk Oblast",
												"_c6": "88.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "738.0",
												"_c0": "61483",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "589.0",
												"_c2": "Cherkasy Oblast",
												"_c6": "29.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "594.0",
												"_c0": "61484",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "282.0",
												"_c2": "Chernihiv Oblast",
												"_c6": "14.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "5117.0",
												"_c0": "61485",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2669.0",
												"_c2": "Chernivtsi Oblast",
												"_c6": "197.0"
											},
											{
												"_c3": "India",
												"_c5": "3897.0",
												"_c0": "61486",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3070.0",
												"_c2": "Chhattisgarh",
												"_c6": "17.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "5159.0",
												"_c0": "61487",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4188.0",
												"_c2": "Chiapas",
												"_c6": "729.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1091.0",
												"_c0": "61488",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "906.0",
												"_c2": "Chiba",
												"_c6": "46.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "3784.0",
												"_c0": "61489",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2826.0",
												"_c2": "Chihuahua",
												"_c6": "725.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "2126.0",
												"_c0": "61490",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "896.0",
												"_c2": "Choco",
												"_c6": "68.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "582.0",
												"_c0": "61491",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "575.0",
												"_c2": "Chongqing",
												"_c6": "6.0"
											},
											{
												"_c3": "Russia",
												"_c5": "144.0",
												"_c0": "61492",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "137.0",
												"_c2": "Chukotka Autonomous Okrug",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5775.0",
												"_c0": "61493",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3159.0",
												"_c2": "Chuvashia Republic",
												"_c6": "46.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "57271.0",
												"_c0": "61494",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "44941.0",
												"_c2": "Ciudad de Mexico",
												"_c6": "7625.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "7003.0",
												"_c0": "61495",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5573.0",
												"_c2": "Coahuila",
												"_c6": "354.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "857.0",
												"_c0": "61496",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "569.0",
												"_c2": "Colima",
												"_c6": "99.0"
											},
											{
												"_c3": "US",
												"_c5": "36573.0",
												"_c0": "61497",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Colorado",
												"_c6": "1725.0"
											},
											{
												"_c3": "US",
												"_c5": "47287.0",
												"_c0": "61498",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Connecticut",
												"_c6": "4348.0"
											},
											{
												"_c3": "Chile",
												"_c5": "4026.0",
												"_c0": "61499",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3248.0",
												"_c2": "Coquimbo",
												"_c6": "31.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1509.0",
												"_c0": "61500",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "326.0",
												"_c2": "Cordoba",
												"_c6": "156.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "831.0",
												"_c0": "61501",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "645.0",
												"_c2": "Crimea Republic*",
												"_c6": "12.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "3959.0",
												"_c0": "61502",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1866.0",
												"_c2": "Cundinamarca",
												"_c6": "91.0"
											},
											{
												"_c3": "Netherlands",
												"_c5": "25.0",
												"_c0": "61503",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "24.0",
												"_c2": "Curacao",
												"_c6": "1.0"
											},
											{
												"_c3": "Peru",
												"_c5": "2198.0",
												"_c0": "61504",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Cusco",
												"_c6": "24.0"
											},
											{
												"_c3": "India",
												"_c5": "471.0",
												"_c0": "61505",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "226.0",
												"_c2": "Dadra and Nagar Haveli and Daman and Diu",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "8422.0",
												"_c0": "61506",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6670.0",
												"_c2": "Dagestan Republic",
												"_c6": "410.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1848.0",
												"_c0": "61507",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Dalarna",
												"_c6": "160.0"
											},
											{
												"_c3": "US",
												"_c5": "12743.0",
												"_c0": "61508",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Delaware",
												"_c6": "517.0"
											},
											{
												"_c3": "India",
												"_c5": "110921.0",
												"_c0": "61509",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "87692.0",
												"_c2": "Delhi",
												"_c6": "3334.0"
											},
											{
												"_c3": "Canada",
												"_c5": "0.0",
												"_c0": "61510",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Diamond Princess cruise ship",
												"_c6": "1.0"
											},
											{
												"_c3": "US",
												"_c5": "49.0",
												"_c0": "61511",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Diamond Princess cruise ship",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "10801.0",
												"_c0": "61512",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "District of Columbia",
												"_c6": "568.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "68406.0",
												"_c0": "61513",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "56120.0",
												"_c2": "Distrito Federal",
												"_c6": "871.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "1140.0",
												"_c0": "61514",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1022.0",
												"_c2": "Dnipropetrovsk Oblast",
												"_c6": "23.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "758.0",
												"_c0": "61515",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "249.0",
												"_c2": "Donetsk Oblast",
												"_c6": "10.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2694.0",
												"_c0": "61516",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2033.0",
												"_c2": "Durango",
												"_c6": "180.0"
											},
											{
												"_c3": "Japan",
												"_c5": "82.0",
												"_c0": "61517",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "77.0",
												"_c2": "Ehime",
												"_c6": "5.0"
											},
											{
												"_c3": "Italy",
												"_c5": "28869.0",
												"_c0": "61518",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "23481.0",
												"_c2": "Emilia-Romagna",
												"_c6": "4269.0"
											},
											{
												"_c3": "UK",
												"_c5": "248895.0",
												"_c0": "61519",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "England",
												"_c6": "40213.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "62236.0",
												"_c0": "61520",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "41450.0",
												"_c2": "Espirito Santo",
												"_c6": "1984.0"
											},
											{
												"_c3": "Spain",
												"_c5": "3106.0",
												"_c0": "61521",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2652.0",
												"_c2": "Extremadura",
												"_c6": "519.0"
											},
											{
												"_c3": "UK",
												"_c5": "13.0",
												"_c0": "61522",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13.0",
												"_c2": "Falkland Islands (Malvinas)",
												"_c6": "0.0"
											},
											{
												"_c3": "Denmark",
												"_c5": "188.0",
												"_c0": "61523",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "188.0",
												"_c2": "Faroe Islands",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "254511.0",
												"_c0": "61524",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Florida",
												"_c6": "4197.0"
											},
											{
												"_c3": "France",
												"_c5": "5949.0",
												"_c0": "61525",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2981.0",
												"_c2": "French Guiana",
												"_c6": "26.0"
											},
											{
												"_c3": "France",
												"_c5": "62.0",
												"_c0": "61526",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "60.0",
												"_c2": "French Polynesia",
												"_c6": "0.0"
											},
											{
												"_c3": "Italy",
												"_c5": "3335.0",
												"_c0": "61527",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2911.0",
												"_c2": "Friuli Venezia Giulia",
												"_c6": "345.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "363.0",
												"_c0": "61528",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "361.0",
												"_c2": "Fujian",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "122.0",
												"_c0": "61529",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "114.0",
												"_c2": "Fukui",
												"_c6": "8.0"
											},
											{
												"_c3": "Japan",
												"_c5": "913.0",
												"_c0": "61530",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "816.0",
												"_c2": "Fukuoka",
												"_c6": "33.0"
											},
											{
												"_c3": "Japan",
												"_c5": "83.0",
												"_c0": "61531",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "82.0",
												"_c2": "Fukushima",
												"_c6": "0.0"
											},
											{
												"_c3": "Spain",
												"_c5": "9431.0",
												"_c0": "61532",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9204.0",
												"_c2": "Galicia",
												"_c6": "619.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "167.0",
												"_c0": "61533",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "162.0",
												"_c2": "Gansu",
												"_c6": "2.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2815.0",
												"_c0": "61534",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Gavleborg",
												"_c6": "140.0"
											},
											{
												"_c3": "US",
												"_c5": "114401.0",
												"_c0": "61535",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Georgia",
												"_c6": "2996.0"
											},
											{
												"_c3": "UK",
												"_c5": "180.0",
												"_c0": "61536",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "176.0",
												"_c2": "Gibraltar",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "162.0",
												"_c0": "61537",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "148.0",
												"_c2": "Gifu",
												"_c6": "7.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "1658.0",
												"_c0": "61538",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1316.0",
												"_c2": "Gilgit-Baltistan",
												"_c6": "36.0"
											},
											{
												"_c3": "India",
												"_c5": "2368.0",
												"_c0": "61539",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1428.0",
												"_c2": "Goa",
												"_c6": "12.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "35793.0",
												"_c0": "61540",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10407.0",
												"_c2": "Goias",
												"_c6": "844.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "181.0",
												"_c0": "61541",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Gotland",
												"_c6": "6.0"
											},
											{
												"_c3": "Canada",
												"_c5": "13.0",
												"_c0": "61542",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13.0",
												"_c2": "Grand Princess",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "103.0",
												"_c0": "61543",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Grand Princess",
												"_c6": "3.0"
											},
											{
												"_c3": "Denmark",
												"_c5": "13.0",
												"_c0": "61544",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13.0",
												"_c2": "Greenland",
												"_c6": "0.0"
											},
											{
												"_c3": "France",
												"_c5": "190.0",
												"_c0": "61545",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "157.0",
												"_c2": "Guadeloupe",
												"_c6": "14.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "14.0",
												"_c0": "61546",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11.0",
												"_c2": "Guainia",
												"_c6": "1.0"
											},
											{
												"_c3": "US",
												"_c5": "310.0",
												"_c0": "61547",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Guam",
												"_c6": "5.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "11807.0",
												"_c0": "61548",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8686.0",
												"_c2": "Guanajuato",
												"_c6": "553.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "1648.0",
												"_c0": "61549",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1634.0",
												"_c2": "Guangdong",
												"_c6": "8.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "254.0",
												"_c0": "61550",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "252.0",
												"_c2": "Guangxi",
												"_c6": "2.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "42.0",
												"_c0": "61551",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21.0",
												"_c2": "Guaviare",
												"_c6": "0.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "7356.0",
												"_c0": "61552",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5476.0",
												"_c2": "Guerrero",
												"_c6": "1067.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "147.0",
												"_c0": "61553",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "145.0",
												"_c2": "Guizhou",
												"_c6": "2.0"
											},
											{
												"_c3": "India",
												"_c5": "40941.0",
												"_c0": "61554",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "28649.0",
												"_c2": "Gujarat",
												"_c6": "2032.0"
											},
											{
												"_c3": "Japan",
												"_c5": "155.0",
												"_c0": "61555",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "133.0",
												"_c2": "Gunma",
												"_c6": "19.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "171.0",
												"_c0": "61556",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "165.0",
												"_c2": "Hainan",
												"_c6": "6.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1639.0",
												"_c0": "61557",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Halland",
												"_c6": "75.0"
											},
											{
												"_c3": "Germany",
												"_c5": "5230.0",
												"_c0": "61558",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4900.0",
												"_c2": "Hamburg",
												"_c6": "261.0"
											},
											{
												"_c3": "India",
												"_c5": "20582.0",
												"_c0": "61559",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "15394.0",
												"_c2": "Haryana",
												"_c6": "297.0"
											},
											{
												"_c3": "US",
												"_c5": "1200.0",
												"_c0": "61560",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Hawaii",
												"_c6": "19.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "349.0",
												"_c0": "61561",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "339.0",
												"_c2": "Hebei",
												"_c6": "6.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "947.0",
												"_c0": "61562",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "934.0",
												"_c2": "Heilongjiang",
												"_c6": "13.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "1276.0",
												"_c0": "61563",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1254.0",
												"_c2": "Henan",
												"_c6": "22.0"
											},
											{
												"_c3": "Germany",
												"_c5": "11122.0",
												"_c0": "61564",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10200.0",
												"_c2": "Hessen",
												"_c6": "514.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "4731.0",
												"_c0": "61565",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3467.0",
												"_c2": "Hidalgo",
												"_c6": "782.0"
											},
											{
												"_c3": "India",
												"_c5": "1182.0",
												"_c0": "61566",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "908.0",
												"_c2": "Himachal Pradesh",
												"_c6": "11.0"
											},
											{
												"_c3": "Japan",
												"_c5": "175.0",
												"_c0": "61567",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "165.0",
												"_c2": "Hiroshima",
												"_c6": "3.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1281.0",
												"_c0": "61568",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1120.0",
												"_c2": "Hokkaido",
												"_c6": "101.0"
											},
											{
												"_c3": "Hong Kong",
												"_c5": "1431.0",
												"_c0": "61569",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1197.0",
												"_c2": "Hong Kong",
												"_c6": "7.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1067.0",
												"_c0": "61570",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Huancavelica",
												"_c6": "24.0"
											},
											{
												"_c3": "Peru",
												"_c5": "3560.0",
												"_c0": "61571",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Huanuco",
												"_c6": "96.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "68135.0",
												"_c0": "61572",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "63623.0",
												"_c2": "Hubei",
												"_c6": "4512.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "416.0",
												"_c0": "61573",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "290.0",
												"_c2": "Huila",
												"_c6": "17.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "1019.0",
												"_c0": "61574",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1015.0",
												"_c2": "Hunan",
												"_c6": "4.0"
											},
											{
												"_c3": "Japan",
												"_c5": "731.0",
												"_c0": "61575",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "660.0",
												"_c2": "Hyogo",
												"_c6": "45.0"
											},
											{
												"_c3": "Japan",
												"_c5": "196.0",
												"_c0": "61576",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "165.0",
												"_c2": "Ibaraki",
												"_c6": "10.0"
											},
											{
												"_c3": "Peru",
												"_c5": "9205.0",
												"_c0": "61577",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Ica",
												"_c6": "594.0"
											},
											{
												"_c3": "US",
												"_c5": "10506.0",
												"_c0": "61578",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Idaho",
												"_c6": "102.0"
											},
											{
												"_c3": "US",
												"_c5": "154094.0",
												"_c0": "61579",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Illinois",
												"_c6": "7369.0"
											},
											{
												"_c3": "US",
												"_c5": "51079.0",
												"_c0": "61580",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Indiana",
												"_c6": "2756.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3280.0",
												"_c0": "61581",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2524.0",
												"_c2": "Ingushetia Republic",
												"_c6": "71.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "245.0",
												"_c0": "61582",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "237.0",
												"_c2": "Inner Mongolia",
												"_c6": "1.0"
											},
											{
												"_c3": "US",
												"_c5": "34658.0",
												"_c0": "61583",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Iowa",
												"_c6": "748.0"
											},
											{
												"_c3": "Russia",
												"_c5": "9885.0",
												"_c0": "61584",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4402.0",
												"_c2": "Irkutsk Oblast",
												"_c6": "94.0"
											},
											{
												"_c3": "Japan",
												"_c5": "300.0",
												"_c0": "61585",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "267.0",
												"_c2": "Ishikawa",
												"_c6": "27.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "14023.0",
												"_c0": "61586",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10645.0",
												"_c2": "Islamabad",
												"_c6": "152.0"
											},
											{
												"_c3": "UK",
												"_c5": "336.0",
												"_c0": "61587",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "312.0",
												"_c2": "Isle of Man",
												"_c6": "24.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2971.0",
												"_c0": "61588",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1228.0",
												"_c2": "Ivano-Frankivsk Oblast",
												"_c6": "109.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5436.0",
												"_c0": "61589",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3436.0",
												"_c2": "Ivanovo Oblast",
												"_c6": "57.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "8989.0",
												"_c0": "61590",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6650.0",
												"_c2": "Jalisco",
												"_c6": "1001.0"
											},
											{
												"_c3": "India",
												"_c5": "10156.0",
												"_c0": "61591",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5895.0",
												"_c2": "Jammu and Kashmir",
												"_c6": "169.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1080.0",
												"_c0": "61592",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Jamtland Harjedalen",
												"_c6": "54.0"
											},
											{
												"_c3": "Russia",
												"_c5": "469.0",
												"_c0": "61593",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "398.0",
												"_c2": "Jewish Autonomous Okrug",
												"_c6": "6.0"
											},
											{
												"_c3": "India",
												"_c5": "3613.0",
												"_c0": "61594",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2243.0",
												"_c2": "Jharkhand",
												"_c6": "23.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "654.0",
												"_c0": "61595",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "654.0",
												"_c2": "Jiangsu",
												"_c6": "0.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "932.0",
												"_c0": "61596",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "931.0",
												"_c2": "Jiangxi",
												"_c6": "1.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "155.0",
												"_c0": "61597",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "153.0",
												"_c2": "Jilin",
												"_c6": "2.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "4422.0",
												"_c0": "61598",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Jonkoping",
												"_c6": "176.0"
											},
											{
												"_c3": "Peru",
												"_c5": "4954.0",
												"_c0": "61599",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Junin",
												"_c6": "204.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5520.0",
												"_c0": "61600",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4677.0",
												"_c2": "Kabardino-Balkarian Republic",
												"_c6": "61.0"
											},
											{
												"_c3": "Japan",
												"_c5": "29.0",
												"_c0": "61601",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "28.0",
												"_c2": "Kagawa",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "137.0",
												"_c0": "61602",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11.0",
												"_c2": "Kagoshima",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2605.0",
												"_c0": "61603",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1809.0",
												"_c2": "Kaliningrad Oblast",
												"_c6": "41.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "727.0",
												"_c0": "61604",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Kalmar",
												"_c6": "58.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2107.0",
												"_c0": "61605",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1235.0",
												"_c2": "Kalmykia Republic",
												"_c6": "27.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6559.0",
												"_c0": "61606",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4642.0",
												"_c2": "Kaluga Oblast",
												"_c6": "51.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2676.0",
												"_c0": "61607",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1639.0",
												"_c2": "Kamchatka Krai",
												"_c6": "29.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1720.0",
												"_c0": "61608",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1409.0",
												"_c2": "Kanagawa",
												"_c6": "97.0"
											},
											{
												"_c3": "US",
												"_c5": "18687.0",
												"_c0": "61609",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Kansas",
												"_c6": "295.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4017.0",
												"_c0": "61610",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2341.0",
												"_c2": "Karachay-Cherkess Republic",
												"_c6": "15.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1684.0",
												"_c0": "61611",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "829.0",
												"_c2": "Karelia Republic",
												"_c6": "3.0"
											},
											{
												"_c3": "India",
												"_c5": "36216.0",
												"_c0": "61612",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "14716.0",
												"_c2": "Karnataka",
												"_c6": "613.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2354.0",
												"_c0": "61613",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1111.0",
												"_c2": "Kemerovo Oblast",
												"_c6": "12.0"
											},
											{
												"_c3": "US",
												"_c5": "19121.0",
												"_c0": "61614",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Kentucky",
												"_c6": "622.0"
											},
											{
												"_c3": "India",
												"_c5": "7438.0",
												"_c0": "61615",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3963.0",
												"_c2": "Kerala",
												"_c6": "29.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5217.0",
												"_c0": "61616",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2628.0",
												"_c2": "Khabarovsk Krai",
												"_c6": "37.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2285.0",
												"_c0": "61617",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1737.0",
												"_c2": "Khakassia Republic",
												"_c6": "19.0"
											},
											{
												"_c3": "Russia",
												"_c5": "11937.0",
												"_c0": "61618",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6671.0",
												"_c2": "Khanty-Mansi Autonomous Okrug",
												"_c6": "89.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2621.0",
												"_c0": "61619",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1357.0",
												"_c2": "Kharkiv Oblast",
												"_c6": "103.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "204.0",
												"_c0": "61620",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "186.0",
												"_c2": "Kherson Oblast",
												"_c6": "3.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "888.0",
												"_c0": "61621",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "645.0",
												"_c2": "Khmelnytskyi Oblast",
												"_c6": "20.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "30078.0",
												"_c0": "61622",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "20762.0",
												"_c2": "Khyber Pakhtunkhwa",
												"_c6": "1087.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "6115.0",
												"_c0": "61623",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2058.0",
												"_c2": "Kiev",
												"_c6": "124.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2986.0",
												"_c0": "61624",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1796.0",
												"_c2": "Kiev Oblast",
												"_c6": "57.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3727.0",
												"_c0": "61625",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3297.0",
												"_c2": "Kirov Oblast",
												"_c6": "43.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "670.0",
												"_c0": "61626",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "585.0",
												"_c2": "Kirovohrad Oblast",
												"_c6": "33.0"
											},
											{
												"_c3": "Japan",
												"_c5": "74.0",
												"_c0": "61627",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "71.0",
												"_c2": "Kochi",
												"_c6": "3.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4179.0",
												"_c0": "61628",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2288.0",
												"_c2": "Komi Republic",
												"_c6": "35.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1825.0",
												"_c0": "61629",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1197.0",
												"_c2": "Kostroma Oblast",
												"_c6": "23.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6654.0",
												"_c0": "61630",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5668.0",
												"_c2": "Krasnodar Krai",
												"_c6": "85.0"
											},
											{
												"_c3": "Russia",
												"_c5": "10369.0",
												"_c0": "61631",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6525.0",
												"_c2": "Krasnoyarsk Krai",
												"_c6": "225.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1082.0",
												"_c0": "61632",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Kronoberg",
												"_c6": "100.0"
											},
											{
												"_c3": "Japan",
												"_c5": "48.0",
												"_c0": "61633",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "45.0",
												"_c2": "Kumamoto",
												"_c6": "3.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1303.0",
												"_c0": "61634",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "635.0",
												"_c2": "Kurgan Oblast",
												"_c6": "2.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5600.0",
												"_c0": "61635",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3791.0",
												"_c2": "Kursk Oblast",
												"_c6": "45.0"
											},
											{
												"_c3": "Japan",
												"_c5": "439.0",
												"_c0": "61636",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "356.0",
												"_c2": "Kyoto",
												"_c6": "18.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "844.0",
												"_c0": "61637",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "174.0",
												"_c2": "La Guajira",
												"_c6": "46.0"
											},
											{
												"_c3": "Peru",
												"_c5": "11774.0",
												"_c0": "61638",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "La Libertad",
												"_c6": "759.0"
											},
											{
												"_c3": "Spain",
												"_c5": "4081.0",
												"_c0": "61639",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3107.0",
												"_c2": "La Rioja",
												"_c6": "366.0"
											},
											{
												"_c3": "India",
												"_c5": "1077.0",
												"_c0": "61640",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "928.0",
												"_c2": "Ladakh",
												"_c6": "1.0"
											},
											{
												"_c3": "Peru",
												"_c5": "14912.0",
												"_c0": "61641",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Lambayeque",
												"_c6": "793.0"
											},
											{
												"_c3": "Italy",
												"_c5": "8294.0",
												"_c0": "61642",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6535.0",
												"_c2": "Lazio",
												"_c6": "844.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4989.0",
												"_c0": "61643",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4244.0",
												"_c2": "Leningrad Oblast",
												"_c6": "37.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "164.0",
												"_c0": "61644",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "150.0",
												"_c2": "Liaoning",
												"_c6": "2.0"
											},
											{
												"_c3": "Italy",
												"_c5": "10031.0",
												"_c0": "61645",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8219.0",
												"_c2": "Liguria",
												"_c6": "1559.0"
											},
											{
												"_c3": "Peru",
												"_c5": "174241.0",
												"_c0": "61646",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Lima",
												"_c6": "5447.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4158.0",
												"_c0": "61647",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2847.0",
												"_c2": "Lipetsk Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "Italy",
												"_c5": "94972.0",
												"_c0": "61648",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "70020.0",
												"_c2": "Lombardia",
												"_c6": "16740.0"
											},
											{
												"_c3": "Peru",
												"_c5": "9766.0",
												"_c0": "61649",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Loreto",
												"_c6": "359.0"
											},
											{
												"_c3": "Chile",
												"_c5": "2222.0",
												"_c0": "61650",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1738.0",
												"_c2": "Los Lagos",
												"_c6": "22.0"
											},
											{
												"_c3": "Chile",
												"_c5": "765.0",
												"_c0": "61651",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "694.0",
												"_c2": "Los Rios",
												"_c6": "11.0"
											},
											{
												"_c3": "US",
												"_c5": "76803.0",
												"_c0": "61652",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Louisiana",
												"_c6": "3403.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "93.0",
												"_c0": "61653",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "73.0",
												"_c2": "Luhansk Oblast",
												"_c6": "0.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "6882.0",
												"_c0": "61654",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1009.0",
												"_c2": "Lviv Oblast",
												"_c6": "181.0"
											},
											{
												"_c3": "Macau",
												"_c5": "46.0",
												"_c0": "61655",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "45.0",
												"_c2": "Macau",
												"_c6": "0.0"
											},
											{
												"_c3": "India",
												"_c5": "17201.0",
												"_c0": "61656",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12679.0",
												"_c2": "Madhya Pradesh",
												"_c6": "644.0"
											},
											{
												"_c3": "Peru",
												"_c5": "2389.0",
												"_c0": "61657",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Madre de Dios",
												"_c6": "78.0"
											},
											{
												"_c3": "Spain",
												"_c5": "72532.0",
												"_c0": "61658",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "40736.0",
												"_c2": "Madrid",
												"_c6": "8441.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1014.0",
												"_c0": "61659",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "586.0",
												"_c2": "Magadan Oblast",
												"_c6": "4.0"
											},
											{
												"_c3": "Chile",
												"_c5": "1545.0",
												"_c0": "61660",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1437.0",
												"_c2": "Magallanes",
												"_c6": "17.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "2655.0",
												"_c0": "61661",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "986.0",
												"_c2": "Magdalena",
												"_c6": "204.0"
											},
											{
												"_c3": "India",
												"_c5": "246600.0",
												"_c0": "61662",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "136985.0",
												"_c2": "Maharashtra",
												"_c6": "10116.0"
											},
											{
												"_c3": "US",
												"_c5": "3520.0",
												"_c0": "61663",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Maine",
												"_c6": "112.0"
											},
											{
												"_c3": "India",
												"_c5": "1593.0",
												"_c0": "61664",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "843.0",
												"_c2": "Manipur",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "325.0",
												"_c0": "61665",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "314.0",
												"_c2": "Manitoba",
												"_c6": "7.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "98398.0",
												"_c0": "61666",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "76921.0",
												"_c2": "Maranhao",
												"_c6": "2426.0"
											},
											{
												"_c3": "Italy",
												"_c5": "6803.0",
												"_c0": "61667",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5647.0",
												"_c2": "Marche",
												"_c6": "987.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3268.0",
												"_c0": "61668",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2891.0",
												"_c2": "Mari El Republic",
												"_c6": "26.0"
											},
											{
												"_c3": "France",
												"_c5": "255.0",
												"_c0": "61669",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "98.0",
												"_c2": "Martinique",
												"_c6": "15.0"
											},
											{
												"_c3": "US",
												"_c5": "72467.0",
												"_c0": "61670",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Maryland",
												"_c6": "3310.0"
											},
											{
												"_c3": "US",
												"_c5": "111398.0",
												"_c0": "61671",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Massachusetts",
												"_c6": "8310.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "27636.0",
												"_c0": "61672",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11660.0",
												"_c2": "Mato Grosso",
												"_c6": "1029.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "12969.0",
												"_c0": "61673",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8329.0",
												"_c2": "Mato Grosso do Sul",
												"_c6": "153.0"
											},
											{
												"_c3": "Chile",
												"_c5": "6946.0",
												"_c0": "61674",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5743.0",
												"_c2": "Maule",
												"_c6": "91.0"
											},
											{
												"_c3": "France",
												"_c5": "2711.0",
												"_c0": "61675",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2480.0",
												"_c2": "Mayotte",
												"_c6": "37.0"
											},
											{
												"_c3": "Germany",
												"_c5": "804.0",
												"_c0": "61676",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "781.0",
												"_c2": "Mecklenburg-Vorpommern",
												"_c6": "20.0"
											},
											{
												"_c3": "India",
												"_c5": "207.0",
												"_c0": "61677",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "66.0",
												"_c2": "Meghalaya",
												"_c6": "2.0"
											},
											{
												"_c3": "Spain",
												"_c5": "126.0",
												"_c0": "61678",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "125.0",
												"_c2": "Melilla",
												"_c6": "2.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1515.0",
												"_c0": "61679",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1035.0",
												"_c2": "Meta",
												"_c6": "19.0"
											},
											{
												"_c3": "Chile",
												"_c5": "236699.0",
												"_c0": "61680",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "218322.0",
												"_c2": "Metropolitana",
												"_c6": "5746.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "42079.0",
												"_c0": "61681",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "34078.0",
												"_c2": "Mexico",
												"_c6": "5160.0"
											},
											{
												"_c3": "US",
												"_c5": "76370.0",
												"_c0": "61682",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Michigan",
												"_c6": "6313.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "7113.0",
												"_c0": "61683",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6068.0",
												"_c2": "Michoacan",
												"_c6": "553.0"
											},
											{
												"_c3": "Japan",
												"_c5": "47.0",
												"_c0": "61684",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "45.0",
												"_c2": "Mie",
												"_c6": "1.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "73813.0",
												"_c0": "61685",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "49050.0",
												"_c2": "Minas Gerais",
												"_c6": "1550.0"
											},
											{
												"_c3": "US",
												"_c5": "41571.0",
												"_c0": "61686",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Minnesota",
												"_c6": "1537.0"
											},
											{
												"_c3": "US",
												"_c5": "35419.0",
												"_c0": "61687",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Mississippi",
												"_c6": "1230.0"
											},
											{
												"_c3": "US",
												"_c5": "27606.0",
												"_c0": "61688",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Missouri",
												"_c6": "1091.0"
											},
											{
												"_c3": "Japan",
												"_c5": "104.0",
												"_c0": "61689",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "91.0",
												"_c2": "Miyagi",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "18.0",
												"_c0": "61690",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "17.0",
												"_c2": "Miyazaki",
												"_c6": "0.0"
											},
											{
												"_c3": "India",
												"_c5": "227.0",
												"_c0": "61691",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "150.0",
												"_c2": "Mizoram",
												"_c6": "0.0"
											},
											{
												"_c3": "Italy",
												"_c5": "445.0",
												"_c0": "61692",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "410.0",
												"_c2": "Molise",
												"_c6": "23.0"
											},
											{
												"_c3": "US",
												"_c5": "1677.0",
												"_c0": "61693",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Montana",
												"_c6": "29.0"
											},
											{
												"_c3": "UK",
												"_c5": "12.0",
												"_c0": "61694",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10.0",
												"_c2": "Montserrat",
												"_c6": "1.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1306.0",
												"_c0": "61695",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Moquegua",
												"_c6": "23.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3792.0",
												"_c0": "61696",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2708.0",
												"_c2": "Mordovia Republic",
												"_c6": "28.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "3331.0",
												"_c0": "61697",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2417.0",
												"_c2": "Morelos",
												"_c6": "739.0"
											},
											{
												"_c3": "Russia",
												"_c5": "228678.0",
												"_c0": "61698",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "164095.0",
												"_c2": "Moscow",
												"_c6": "4116.0"
											},
											{
												"_c3": "Russia",
												"_c5": "60295.0",
												"_c0": "61699",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "40625.0",
												"_c2": "Moscow Oblast",
												"_c6": "996.0"
											},
											{
												"_c3": "Spain",
												"_c5": "1726.0",
												"_c0": "61700",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2180.0",
												"_c2": "Murcia",
												"_c6": "148.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6866.0",
												"_c0": "61701",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3948.0",
												"_c2": "Murmansk Oblast",
												"_c6": "28.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "477.0",
												"_c0": "61702",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "369.0",
												"_c2": "Mykolaiv Oblast",
												"_c6": "11.0"
											},
											{
												"_c3": "India",
												"_c5": "748.0",
												"_c0": "61703",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "313.0",
												"_c2": "Nagaland",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "76.0",
												"_c0": "61704",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "76.0",
												"_c2": "Nagano",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "22.0",
												"_c0": "61705",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "17.0",
												"_c2": "Nagasaki",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "114.0",
												"_c0": "61706",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "90.0",
												"_c2": "Nara",
												"_c6": "2.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "4418.0",
												"_c0": "61707",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2535.0",
												"_c2": "Narino",
												"_c6": "140.0"
											},
											{
												"_c3": "Spain",
												"_c5": "5523.0",
												"_c0": "61708",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3905.0",
												"_c2": "Navarra",
												"_c6": "528.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2298.0",
												"_c0": "61709",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1619.0",
												"_c2": "Nayarit",
												"_c6": "249.0"
											},
											{
												"_c3": "US",
												"_c5": "20998.0",
												"_c0": "61710",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Nebraska",
												"_c6": "285.0"
											},
											{
												"_c3": "Russia",
												"_c5": "190.0",
												"_c0": "61711",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "43.0",
												"_c2": "Nenets Autonomous Okrug",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "26838.0",
												"_c0": "61712",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Nevada",
												"_c6": "592.0"
											},
											{
												"_c3": "Canada",
												"_c5": "166.0",
												"_c0": "61713",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "163.0",
												"_c2": "New Brunswick",
												"_c6": "2.0"
											},
											{
												"_c3": "France",
												"_c5": "21.0",
												"_c0": "61714",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21.0",
												"_c2": "New Caledonia",
												"_c6": "0.0"
											},
											{
												"_c3": "US",
												"_c5": "6024.0",
												"_c0": "61715",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "New Hampshire",
												"_c6": "391.0"
											},
											{
												"_c3": "US",
												"_c5": "174959.0",
												"_c0": "61716",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "New Jersey",
												"_c6": "15525.0"
											},
											{
												"_c3": "US",
												"_c5": "14773.0",
												"_c0": "61717",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "New Mexico",
												"_c6": "543.0"
											},
											{
												"_c3": "Australia",
												"_c5": "3478.0",
												"_c0": "61718",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2988.0",
												"_c2": "New South Wales",
												"_c6": "49.0"
											},
											{
												"_c3": "US",
												"_c5": "401029.0",
												"_c0": "61719",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "New York",
												"_c6": "32343.0"
											},
											{
												"_c3": "Canada",
												"_c5": "262.0",
												"_c0": "61720",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "258.0",
												"_c2": "Newfoundland and Labrador",
												"_c6": "3.0"
											},
											{
												"_c3": "Germany",
												"_c5": "13799.0",
												"_c0": "61721",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12800.0",
												"_c2": "Niedersachsen",
												"_c6": "644.0"
											},
											{
												"_c3": "Japan",
												"_c5": "86.0",
												"_c0": "61722",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "83.0",
												"_c2": "Niigata",
												"_c6": "0.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "75.0",
												"_c0": "61723",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "75.0",
												"_c2": "Ningxia",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "19907.0",
												"_c0": "61724",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "14087.0",
												"_c2": "Nizhny Novgorod Oblast",
												"_c6": "288.0"
											},
											{
												"_c3": "Germany",
												"_c5": "44788.0",
												"_c0": "61725",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "41000.0",
												"_c2": "Nordrhein-Westfalen",
												"_c6": "1704.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1472.0",
												"_c0": "61726",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Norrbotten",
												"_c6": "70.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "511.0",
												"_c0": "61727",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "212.0",
												"_c2": "Norte de Santander",
												"_c6": "27.0"
											},
											{
												"_c3": "US",
												"_c5": "83906.0",
												"_c0": "61728",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "North Carolina",
												"_c6": "1513.0"
											},
											{
												"_c3": "US",
												"_c5": "4243.0",
												"_c0": "61729",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "North Dakota",
												"_c6": "87.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4224.0",
												"_c0": "61730",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3670.0",
												"_c2": "North Ossetia - Alania Republic",
												"_c6": "67.0"
											},
											{
												"_c3": "UK",
												"_c5": "5772.0",
												"_c0": "61731",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Northern Ireland",
												"_c6": "554.0"
											},
											{
												"_c3": "US",
												"_c5": "33.0",
												"_c0": "61732",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Northern Mariana Islands",
												"_c6": "2.0"
											},
											{
												"_c3": "Australia",
												"_c5": "31.0",
												"_c0": "61733",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "29.0",
												"_c2": "Northern Territory",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "5.0",
												"_c0": "61734",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5.0",
												"_c2": "Northwest Territories",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "1066.0",
												"_c0": "61735",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1000.0",
												"_c2": "Nova Scotia",
												"_c6": "63.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3337.0",
												"_c0": "61736",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1493.0",
												"_c2": "Novgorod Oblast",
												"_c6": "46.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7153.0",
												"_c0": "61737",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5083.0",
												"_c2": "Novosibirsk Oblast",
												"_c6": "137.0"
											},
											{
												"_c3": "Chile",
												"_c5": "2909.0",
												"_c0": "61738",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2404.0",
												"_c2": "Nuble",
												"_c6": "38.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "9459.0",
												"_c0": "61739",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7040.0",
												"_c2": "Nuevo Leon",
												"_c6": "524.0"
											},
											{
												"_c3": "Chile",
												"_c5": "8210.0",
												"_c0": "61740",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6540.0",
												"_c2": "OHiggins",
												"_c6": "119.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "7609.0",
												"_c0": "61741",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6078.0",
												"_c2": "Oaxaca",
												"_c6": "714.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2141.0",
												"_c0": "61742",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "947.0",
												"_c2": "Odessa Oblast",
												"_c6": "27.0"
											},
											{
												"_c3": "India",
												"_c5": "12526.0",
												"_c0": "61743",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8360.0",
												"_c2": "Odisha",
												"_c6": "61.0"
											},
											{
												"_c3": "US",
												"_c5": "64214.0",
												"_c0": "61744",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Ohio",
												"_c6": "3036.0"
											},
											{
												"_c3": "Japan",
												"_c5": "60.0",
												"_c0": "61745",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "59.0",
												"_c2": "Oita",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "28.0",
												"_c0": "61746",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "26.0",
												"_c2": "Okayama",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "151.0",
												"_c0": "61747",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "139.0",
												"_c2": "Okinawa",
												"_c6": "7.0"
											},
											{
												"_c3": "US",
												"_c5": "19779.0",
												"_c0": "61748",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Oklahoma",
												"_c6": "421.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4563.0",
												"_c0": "61749",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2626.0",
												"_c2": "Omsk Oblast",
												"_c6": "40.0"
											},
											{
												"_c3": "Canada",
												"_c5": "38398.0",
												"_c0": "61750",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "33940.0",
												"_c2": "Ontario",
												"_c6": "2760.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2469.0",
												"_c0": "61751",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Orebro",
												"_c6": "167.0"
											},
											{
												"_c3": "US",
												"_c5": "11851.0",
												"_c0": "61752",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Oregon",
												"_c6": "232.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4974.0",
												"_c0": "61753",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3586.0",
												"_c2": "Orel Oblast",
												"_c6": "75.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4708.0",
												"_c0": "61754",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3485.0",
												"_c2": "Orenburg Oblast",
												"_c6": "28.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1995.0",
												"_c0": "61755",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1750.0",
												"_c2": "Osaka",
												"_c6": "86.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "3393.0",
												"_c0": "61756",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Ostergotland",
												"_c6": "224.0"
											},
											{
												"_c3": "Italy",
												"_c5": "2661.0",
												"_c0": "61757",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2287.0",
												"_c2": "P.A. Bolzano",
												"_c6": "292.0"
											},
											{
												"_c3": "Italy",
												"_c5": "4881.0",
												"_c0": "61758",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4448.0",
												"_c2": "P.A. Trento",
												"_c6": "405.0"
											},
											{
												"_c3": "Spain",
												"_c5": "13939.0",
												"_c0": "61759",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "16160.0",
												"_c2": "Pais Vasco",
												"_c6": "1562.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "124934.0",
												"_c0": "61760",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "111002.0",
												"_c2": "Para",
												"_c6": "5274.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "60421.0",
												"_c0": "61761",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "22116.0",
												"_c2": "Paraiba",
												"_c6": "1250.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "40797.0",
												"_c0": "61762",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "13374.0",
												"_c2": "Parana",
												"_c6": "1016.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1297.0",
												"_c0": "61763",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Pasco",
												"_c6": "25.0"
											},
											{
												"_c3": "US",
												"_c5": "99216.0",
												"_c0": "61764",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Pennsylvania",
												"_c6": "6897.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5699.0",
												"_c0": "61765",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5143.0",
												"_c2": "Penza Oblast",
												"_c6": "63.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4342.0",
												"_c0": "61766",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3326.0",
												"_c2": "Perm Krai",
												"_c6": "95.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "71370.0",
												"_c0": "61767",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "49483.0",
												"_c2": "Pernambuco",
												"_c6": "5556.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "32465.0",
												"_c0": "61768",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "31142.0",
												"_c2": "Piaui",
												"_c6": "914.0"
											},
											{
												"_c3": "Italy",
												"_c5": "31494.0",
												"_c0": "61769",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "26314.0",
												"_c2": "Piemonte",
												"_c6": "4111.0"
											},
											{
												"_c3": "Peru",
												"_c5": "18536.0",
												"_c0": "61770",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Piura",
												"_c6": "829.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "331.0",
												"_c0": "61771",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "297.0",
												"_c2": "Poltava Oblast",
												"_c6": "13.0"
											},
											{
												"_c3": "Japan",
												"_c5": "381.0",
												"_c0": "61772",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "201.0",
												"_c2": "Port Quarantine",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5010.0",
												"_c0": "61773",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3648.0",
												"_c2": "Primorsky Krai",
												"_c6": "58.0"
											},
											{
												"_c3": "Canada",
												"_c5": "33.0",
												"_c0": "61774",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "27.0",
												"_c2": "Prince Edward Island",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3198.0",
												"_c0": "61775",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1845.0",
												"_c2": "Pskov Oblast",
												"_c6": "34.0"
											},
											{
												"_c3": "India",
												"_c5": "1337.0",
												"_c0": "61776",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "690.0",
												"_c2": "Puducherry",
												"_c6": "18.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "14035.0",
												"_c0": "61777",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11094.0",
												"_c2": "Puebla",
												"_c6": "1768.0"
											},
											{
												"_c3": "US",
												"_c5": "9366.0",
												"_c0": "61778",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Puerto Rico",
												"_c6": "167.0"
											},
											{
												"_c3": "Italy",
												"_c5": "4541.0",
												"_c0": "61779",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3924.0",
												"_c2": "Puglia",
												"_c6": "546.0"
											},
											{
												"_c3": "India",
												"_c5": "7587.0",
												"_c0": "61780",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5040.0",
												"_c2": "Punjab",
												"_c6": "195.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "86556.0",
												"_c0": "61781",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "55175.0",
												"_c2": "Punjab",
												"_c6": "2006.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1140.0",
												"_c0": "61782",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Puno",
												"_c6": "36.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "49.0",
												"_c0": "61783",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10.0",
												"_c2": "Putumayo",
												"_c6": "8.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "18.0",
												"_c0": "61784",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "18.0",
												"_c2": "Qinghai",
												"_c6": "0.0"
											},
											{
												"_c3": "Canada",
												"_c5": "56407.0",
												"_c0": "61785",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "25773.0",
												"_c2": "Quebec",
												"_c6": "5620.0"
											},
											{
												"_c3": "Australia",
												"_c5": "1070.0",
												"_c0": "61786",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1058.0",
												"_c2": "Queensland",
												"_c6": "6.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "2473.0",
												"_c0": "61787",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1793.0",
												"_c2": "Queretaro",
												"_c6": "369.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "194.0",
												"_c0": "61788",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "139.0",
												"_c2": "Quindio",
												"_c6": "6.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "5045.0",
												"_c0": "61789",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3375.0",
												"_c2": "Quintana Roo",
												"_c6": "690.0"
											},
											{
												"_c3": "India",
												"_c5": "23748.0",
												"_c0": "61790",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "17869.0",
												"_c2": "Rajasthan",
												"_c6": "503.0"
											},
											{
												"_c3": "US",
												"_c5": "0.0",
												"_c0": "61791",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "995576.0",
												"_c2": "Recovered",
												"_c6": "0.0"
											},
											{
												"_c3": "France",
												"_c5": "577.0",
												"_c0": "61792",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "472.0",
												"_c2": "Reunion",
												"_c6": "3.0"
											},
											{
												"_c3": "Germany",
												"_c5": "7149.0",
												"_c0": "61793",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6697.0",
												"_c2": "Rheinland-Pfalz",
												"_c6": "236.0"
											},
											{
												"_c3": "US",
												"_c5": "17312.0",
												"_c0": "61794",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Rhode Island",
												"_c6": "976.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "38616.0",
												"_c0": "61795",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2904.0",
												"_c2": "Rio Grande do Norte",
												"_c6": "1380.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "38720.0",
												"_c0": "61796",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "32337.0",
												"_c2": "Rio Grande do Sul",
												"_c6": "943.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "129675.0",
												"_c0": "61797",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "109061.0",
												"_c2": "Rio de Janeiro",
												"_c6": "11406.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "716.0",
												"_c0": "61798",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "366.0",
												"_c2": "Risaralda",
												"_c6": "21.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "4520.0",
												"_c0": "61799",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2699.0",
												"_c2": "Rivne Oblast",
												"_c6": "80.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "26496.0",
												"_c0": "61800",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "15696.0",
												"_c2": "Rondonia",
												"_c6": "617.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "21849.0",
												"_c0": "61801",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8191.0",
												"_c2": "Roraima",
												"_c6": "396.0"
											},
											{
												"_c3": "Russia",
												"_c5": "10628.0",
												"_c0": "61802",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7954.0",
												"_c2": "Rostov Oblast",
												"_c6": "161.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5621.0",
												"_c0": "61803",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4510.0",
												"_c2": "Ryazan Oblast",
												"_c6": "21.0"
											},
											{
												"_c3": "Germany",
												"_c5": "2812.0",
												"_c0": "61804",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2590.0",
												"_c2": "Saarland",
												"_c6": "174.0"
											},
											{
												"_c3": "Germany",
												"_c5": "5473.0",
												"_c0": "61805",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5205.0",
												"_c2": "Sachsen",
												"_c6": "225.0"
											},
											{
												"_c3": "Germany",
												"_c5": "1909.0",
												"_c0": "61806",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1799.0",
												"_c2": "Sachsen-Anhalt",
												"_c6": "61.0"
											},
											{
												"_c3": "Japan",
												"_c5": "45.0",
												"_c0": "61807",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "45.0",
												"_c2": "Saga",
												"_c6": "0.0"
											},
											{
												"_c3": "France",
												"_c5": "6.0",
												"_c0": "61808",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6.0",
												"_c2": "Saint Barthelemy",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "27277.0",
												"_c0": "61809",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21071.0",
												"_c2": "Saint Petersburg",
												"_c6": "1583.0"
											},
											{
												"_c3": "France",
												"_c5": "2.0",
												"_c0": "61810",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1.0",
												"_c2": "Saint Pierre and Miquelon",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "1431.0",
												"_c0": "61811",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1041.0",
												"_c2": "Saitama",
												"_c6": "67.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4757.0",
												"_c0": "61812",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4069.0",
												"_c2": "Sakha (Yakutiya) Republic",
												"_c6": "35.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1307.0",
												"_c0": "61813",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "510.0",
												"_c2": "Sakhalin Oblast",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5804.0",
												"_c0": "61814",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3562.0",
												"_c2": "Samara Oblast",
												"_c6": "63.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "28.0",
												"_c0": "61815",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21.0",
												"_c2": "San Andres y Providencia",
												"_c6": "1.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "4383.0",
												"_c0": "61816",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3338.0",
												"_c2": "San Luis Potosi",
												"_c6": "260.0"
											},
											{
												"_c3": "Peru",
												"_c5": "6534.0",
												"_c0": "61817",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "San Martin",
												"_c6": "177.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "42026.0",
												"_c0": "61818",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "33758.0",
												"_c2": "Santa Catarina",
												"_c6": "485.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1244.0",
												"_c0": "61819",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "340.0",
												"_c2": "Santander",
												"_c6": "25.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "366890.0",
												"_c0": "61820",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "211777.0",
												"_c2": "Sao Paulo",
												"_c6": "17702.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7508.0",
												"_c0": "61821",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4220.0",
												"_c2": "Saratov Oblast",
												"_c6": "47.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1372.0",
												"_c0": "61822",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1229.0",
												"_c2": "Sardegna",
												"_c6": "134.0"
											},
											{
												"_c3": "Canada",
												"_c5": "815.0",
												"_c0": "61823",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "757.0",
												"_c2": "Saskatchewan",
												"_c6": "15.0"
											},
											{
												"_c3": "Germany",
												"_c5": "3206.0",
												"_c0": "61824",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3000.0",
												"_c2": "Schleswig-Holstein",
												"_c6": "154.0"
											},
											{
												"_c3": "UK",
												"_c5": "18340.0",
												"_c0": "61825",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Scotland",
												"_c6": "2490.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "36046.0",
												"_c0": "61826",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "22903.0",
												"_c2": "Sergipe",
												"_c6": "954.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "267.0",
												"_c0": "61827",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "207.0",
												"_c2": "Sevastopol*",
												"_c6": "5.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "321.0",
												"_c0": "61828",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "314.0",
												"_c2": "Shaanxi",
												"_c6": "3.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "792.0",
												"_c0": "61829",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "785.0",
												"_c2": "Shandong",
												"_c6": "7.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "724.0",
												"_c0": "61830",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "689.0",
												"_c2": "Shanghai",
												"_c6": "7.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "200.0",
												"_c0": "61831",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "198.0",
												"_c2": "Shanxi",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "104.0",
												"_c0": "61832",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "99.0",
												"_c2": "Shiga",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "24.0",
												"_c0": "61833",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "24.0",
												"_c2": "Shimane",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "93.0",
												"_c0": "61834",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "82.0",
												"_c2": "Shizuoka",
												"_c6": "1.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "599.0",
												"_c0": "61835",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "587.0",
												"_c2": "Sichuan",
												"_c6": "3.0"
											},
											{
												"_c3": "Italy",
												"_c5": "3099.0",
												"_c0": "61836",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2693.0",
												"_c2": "Sicilia",
												"_c6": "283.0"
											},
											{
												"_c3": "India",
												"_c5": "151.0",
												"_c0": "61837",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "80.0",
												"_c2": "Sikkim",
												"_c6": "0.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "9895.0",
												"_c0": "61838",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7842.0",
												"_c2": "Sinaloa",
												"_c6": "1608.0"
											},
											{
												"_c3": "Pakistan",
												"_c5": "103836.0",
												"_c0": "61839",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "60439.0",
												"_c2": "Sindh",
												"_c6": "1747.0"
											},
											{
												"_c3": "Netherlands",
												"_c5": "78.0",
												"_c0": "61840",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "63.0",
												"_c2": "Sint Maarten",
												"_c6": "15.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "3245.0",
												"_c0": "61841",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Skane",
												"_c6": "255.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5028.0",
												"_c0": "61842",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2914.0",
												"_c2": "Smolensk Oblast",
												"_c6": "75.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "11491.0",
												"_c0": "61843",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9749.0",
												"_c2": "Sonora",
												"_c6": "1080.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2294.0",
												"_c0": "61844",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Sormland",
												"_c6": "247.0"
											},
											{
												"_c3": "Australia",
												"_c5": "443.0",
												"_c0": "61845",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "439.0",
												"_c2": "South Australia",
												"_c6": "4.0"
											},
											{
												"_c3": "US",
												"_c5": "54699.0",
												"_c0": "61846",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "South Carolina",
												"_c6": "951.0"
											},
											{
												"_c3": "US",
												"_c5": "7454.0",
												"_c0": "61847",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "South Dakota",
												"_c6": "109.0"
											},
											{
												"_c3": "France",
												"_c5": "43.0",
												"_c0": "61848",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "37.0",
												"_c2": "St Martin",
												"_c6": "3.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6054.0",
												"_c0": "61849",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3959.0",
												"_c2": "Stavropol Krai",
												"_c6": "116.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "21907.0",
												"_c0": "61850",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Stockholm",
												"_c6": "2362.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "2376.0",
												"_c0": "61851",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "367.0",
												"_c2": "Sucre",
												"_c6": "146.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "337.0",
												"_c0": "61852",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "291.0",
												"_c2": "Sumy Oblast",
												"_c6": "5.0"
											},
											{
												"_c3": "Russia",
												"_c5": "15623.0",
												"_c0": "61853",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9828.0",
												"_c2": "Sverdlovsk Oblast",
												"_c6": "156.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "14461.0",
												"_c0": "61854",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11422.0",
												"_c2": "Tabasco",
												"_c6": "1392.0"
											},
											{
												"_c3": "Peru",
												"_c5": "1257.0",
												"_c0": "61855",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Tacna",
												"_c6": "11.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "8784.0",
												"_c0": "61856",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "7484.0",
												"_c2": "Tamaulipas",
												"_c6": "584.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5199.0",
												"_c0": "61857",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3681.0",
												"_c2": "Tambov Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "India",
												"_c5": "134226.0",
												"_c0": "61858",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "85915.0",
												"_c2": "Tamil Nadu",
												"_c6": "1898.0"
											},
											{
												"_c3": "Chile",
												"_c5": "7050.0",
												"_c0": "61859",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6170.0",
												"_c2": "Tarapaca",
												"_c6": "108.0"
											},
											{
												"_c3": "Australia",
												"_c5": "228.0",
												"_c0": "61860",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "215.0",
												"_c2": "Tasmania",
												"_c6": "13.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4964.0",
												"_c0": "61861",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3912.0",
												"_c2": "Tatarstan Republic",
												"_c6": "15.0"
											},
											{
												"_c3": "India",
												"_c5": "33402.0",
												"_c0": "61862",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "20919.0",
												"_c2": "Telangana",
												"_c6": "348.0"
											},
											{
												"_c3": "US",
												"_c5": "61006.0",
												"_c0": "61863",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Tennessee",
												"_c6": "738.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2217.0",
												"_c0": "61864",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1368.0",
												"_c2": "Ternopil Oblast",
												"_c6": "33.0"
											},
											{
												"_c3": "US",
												"_c5": "254415.0",
												"_c0": "61865",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Texas",
												"_c6": "3138.0"
											},
											{
												"_c3": "Germany",
												"_c5": "3289.0",
												"_c0": "61866",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3080.0",
												"_c2": "Thuringen",
												"_c6": "182.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "203.0",
												"_c0": "61867",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "195.0",
												"_c2": "Tianjin",
												"_c6": "3.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "1.0",
												"_c0": "61868",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1.0",
												"_c2": "Tibet",
												"_c6": "0.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "3313.0",
												"_c0": "61869",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2473.0",
												"_c2": "Tlaxcala",
												"_c6": "450.0"
											},
											{
												"_c3": "Brazil",
												"_c5": "14939.0",
												"_c0": "61870",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "9108.0",
												"_c2": "Tocantins",
												"_c6": "251.0"
											},
											{
												"_c3": "Japan",
												"_c5": "93.0",
												"_c0": "61871",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "74.0",
												"_c2": "Tochigi",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "10.0",
												"_c0": "61872",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4.0",
												"_c2": "Tokushima",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "7731.0",
												"_c0": "61873",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "5979.0",
												"_c2": "Tokyo",
												"_c6": "325.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1424.0",
												"_c0": "61874",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "511.0",
												"_c2": "Tolima",
												"_c6": "29.0"
											},
											{
												"_c3": "Russia",
												"_c5": "2915.0",
												"_c0": "61875",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1641.0",
												"_c2": "Tomsk Oblast",
												"_c6": "23.0"
											},
											{
												"_c3": "Italy",
												"_c5": "10321.0",
												"_c0": "61876",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8869.0",
												"_c2": "Toscana",
												"_c6": "1122.0"
											},
											{
												"_c3": "Japan",
												"_c5": "4.0",
												"_c0": "61877",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3.0",
												"_c2": "Tottori",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "230.0",
												"_c0": "61878",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "205.0",
												"_c2": "Toyama",
												"_c6": "22.0"
											},
											{
												"_c3": "India",
												"_c5": "1918.0",
												"_c0": "61879",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1372.0",
												"_c2": "Tripura",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7439.0",
												"_c0": "61880",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6120.0",
												"_c2": "Tula Oblast",
												"_c6": "150.0"
											},
											{
												"_c3": "Peru",
												"_c5": "3334.0",
												"_c0": "61881",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Tumbes",
												"_c6": "127.0"
											},
											{
												"_c3": "UK",
												"_c5": "71.0",
												"_c0": "61882",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11.0",
												"_c2": "Turks and Caicos Islands",
												"_c6": "2.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4033.0",
												"_c0": "61883",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3295.0",
												"_c2": "Tver Oblast",
												"_c6": "97.0"
											},
											{
												"_c3": "Russia",
												"_c5": "3952.0",
												"_c0": "61884",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2432.0",
												"_c2": "Tyumen Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5365.0",
												"_c0": "61885",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2028.0",
												"_c2": "Tyva Republic",
												"_c6": "32.0"
											},
											{
												"_c3": "Peru",
												"_c5": "8649.0",
												"_c0": "61886",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Ucayali",
												"_c6": "163.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1701.0",
												"_c0": "61887",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1358.0",
												"_c2": "Udmurt Republic",
												"_c6": "19.0"
											},
											{
												"_c3": "Russia",
												"_c5": "6944.0",
												"_c0": "61888",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4252.0",
												"_c2": "Ulyanovsk Oblast",
												"_c6": "52.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1448.0",
												"_c0": "61889",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1360.0",
												"_c2": "Umbria",
												"_c6": "80.0"
											},
											{
												"_c3": "Chile",
												"_c5": "0.0",
												"_c0": "61890",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "106.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "0.0",
												"_c0": "61891",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Germany",
												"_c5": "1083.0",
												"_c0": "61892",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "India",
												"_c5": "3024.0",
												"_c0": "61893",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Japan",
												"_c5": "8.0",
												"_c0": "61894",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "8.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Peru",
												"_c5": "0.0",
												"_c0": "61895",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "214152.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Spain",
												"_c5": "0.0",
												"_c0": "61896",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "UK",
												"_c5": "0.0",
												"_c0": "61897",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Unknown",
												"_c6": "0.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "3430.0",
												"_c0": "61898",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Uppsala",
												"_c6": "234.0"
											},
											{
												"_c3": "US",
												"_c5": "28855.0",
												"_c0": "61899",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Utah",
												"_c6": "212.0"
											},
											{
												"_c3": "India",
												"_c5": "35092.0",
												"_c0": "61900",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "22689.0",
												"_c2": "Uttar Pradesh",
												"_c6": "913.0"
											},
											{
												"_c3": "India",
												"_c5": "3417.0",
												"_c0": "61901",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2718.0",
												"_c2": "Uttarakhand",
												"_c6": "46.0"
											},
											{
												"_c3": "Italy",
												"_c5": "1196.0",
												"_c0": "61902",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1047.0",
												"_c2": "Valle d'Aosta",
												"_c6": "146.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "13953.0",
												"_c0": "61903",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6257.0",
												"_c2": "Valle del Cauca",
												"_c6": "559.0"
											},
											{
												"_c3": "Chile",
												"_c5": "14257.0",
												"_c0": "61904",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "12066.0",
												"_c2": "Valparaiso",
												"_c6": "326.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1000.0",
												"_c0": "61905",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Varmland",
												"_c6": "70.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "752.0",
												"_c0": "61906",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Vasterbotten",
												"_c6": "31.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "1545.0",
												"_c0": "61907",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Vasternorrland",
												"_c6": "119.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "2477.0",
												"_c0": "61908",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Vastmanland",
												"_c6": "175.0"
											},
											{
												"_c3": "Sweden",
												"_c5": "16650.0",
												"_c0": "61909",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Vastra Gotaland",
												"_c6": "789.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "29.0",
												"_c0": "61910",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "21.0",
												"_c2": "Vaupes",
												"_c6": "1.0"
											},
											{
												"_c3": "Italy",
												"_c5": "19379.0",
												"_c0": "61911",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "16942.0",
												"_c2": "Veneto",
												"_c6": "2039.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "13610.0",
												"_c0": "61912",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "10248.0",
												"_c2": "Veracruz",
												"_c6": "1944.0"
											},
											{
												"_c3": "US",
												"_c5": "1283.0",
												"_c0": "61913",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Vermont",
												"_c6": "56.0"
											},
											{
												"_c3": "Colombia",
												"_c5": "1.0",
												"_c0": "61914",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1.0",
												"_c2": "Vichada",
												"_c6": "0.0"
											},
											{
												"_c3": "Australia",
												"_c5": "3799.0",
												"_c0": "61915",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2289.0",
												"_c2": "Victoria",
												"_c6": "24.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2081.0",
												"_c0": "61916",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1522.0",
												"_c2": "Vinnytsia Oblast",
												"_c6": "36.0"
											},
											{
												"_c3": "US",
												"_c5": "167.0",
												"_c0": "61917",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Virgin Islands",
												"_c6": "6.0"
											},
											{
												"_c3": "US",
												"_c5": "69782.0",
												"_c0": "61918",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Virginia",
												"_c6": "1962.0"
											},
											{
												"_c3": "Russia",
												"_c5": "4874.0",
												"_c0": "61919",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3787.0",
												"_c2": "Vladimir Oblast",
												"_c6": "88.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7332.0",
												"_c0": "61920",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "3973.0",
												"_c2": "Volgograd Oblast",
												"_c6": "47.0"
											},
											{
												"_c3": "Russia",
												"_c5": "1856.0",
												"_c0": "61921",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1477.0",
												"_c2": "Vologda Oblast",
												"_c6": "19.0"
											},
											{
												"_c3": "Ukraine",
												"_c5": "2987.0",
												"_c0": "61922",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "1585.0",
												"_c2": "Volyn Oblast",
												"_c6": "72.0"
											},
											{
												"_c3": "Russia",
												"_c5": "9159.0",
												"_c0": "61923",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "6491.0",
												"_c2": "Voronezh Oblast",
												"_c6": "63.0"
											},
											{
												"_c3": "Japan",
												"_c5": "75.0",
												"_c0": "61924",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "61.0",
												"_c2": "Wakayama",
												"_c6": "3.0"
											},
											{
												"_c3": "UK",
												"_c5": "15946.0",
												"_c0": "61925",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Wales",
												"_c6": "1541.0"
											},
											{
												"_c3": "US",
												"_c5": "39218.0",
												"_c0": "61926",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Washington",
												"_c6": "1424.0"
											},
											{
												"_c3": "India",
												"_c5": "28453.0",
												"_c0": "61927",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "17959.0",
												"_c2": "West Bengal",
												"_c6": "906.0"
											},
											{
												"_c3": "US",
												"_c5": "4146.0",
												"_c0": "61928",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "West Virginia",
												"_c6": "96.0"
											},
											{
												"_c3": "Australia",
												"_c5": "635.0",
												"_c0": "61929",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "604.0",
												"_c2": "Western Australia",
												"_c6": "9.0"
											},
											{
												"_c3": "US",
												"_c5": "35679.0",
												"_c0": "61930",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Wisconsin",
												"_c6": "821.0"
											},
											{
												"_c3": "US",
												"_c5": "1839.0",
												"_c0": "61931",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "0.0",
												"_c2": "Wyoming",
												"_c6": "21.0"
											},
											{
												"_c3": "Mainland China",
												"_c5": "76.0",
												"_c0": "61932",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "73.0",
												"_c2": "Xinjiang",
												"_c6": "3.0"
											},
											{
												"_c3": "Japan",
												"_c5": "71.0",
												"_c0": "61933",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "68.0",
												"_c2": "Yamagata",
												"_c6": "1.0"
											},
											{
												"_c3": "Japan",
												"_c5": "37.0",
												"_c0": "61934",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "37.0",
												"_c2": "Yamaguchi",
												"_c6": "0.0"
											},
											{
												"_c3": "Russia",
												"_c5": "7742.0",
												"_c0": "61935",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "2968.0",
												"_c2": "Yamalo-Nenets Autonomous Okrug",
												"_c6": "56.0"
											},
											{
												"_c3": "Japan",
												"_c5": "76.0",
												"_c0": "61936",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "74.0",
												"_c2": "Yamanashi",
												"_c6": "1.0"
											},
											{
												"_c3": "Russia",
												"_c5": "5230.0",
												"_c0": "61937",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4313.0",
												"_c2": "Yaroslavl Oblast",
												"_c6": "22.0"
											},
											{
												"_c3": "Mexico",
												"_c5": "6071.0",
												"_c0": "61938",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "4236.0",
												"_c2": "Yucatan",
												"_c6": "578.0"
											},
											{
												"_c3": "Canada",
												"_c5": "11.0",
												"_c0": "61939",
												"_c4": "2020-07-12 04:34:30",
												"_c1": "07/11/2020",
												"_c7": "11.0",
												"_c2": "Yukon",
												"_c6": "0.0"
											}
										],
										"schema": {
											"_c0": "string",
											"_c1": "string",
											"_c2": "string",
											"_c3": "string",
											"_c4": "string",
											"_c5": "double",
											"_c6": "double",
											"_c7": "double"
										}
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"_c0"
											],
											"seriesFieldKeys": [
												"_c5"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import azureml.core\n",
							"\n",
							"from azureml.core import Experiment, Workspace, Dataset, Datastore\n",
							"from azureml.train.automl import AutoMLConfig\n",
							"from azureml.data.dataset_factory import TabularDatasetFactory"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"subscription_id = \"c46a9435-c957-4e6c-a0f4-b9a597984773\"\n",
							"resource_group = \"accenture\"\n",
							"workspace_name = \"accml\"\n",
							"experiment_name = \"bbaccsynapse-covid19-20201217032448-onnx\"\n",
							"\n",
							"ws = Workspace(subscription_id = subscription_id, resource_group = resource_group, workspace_name = workspace_name)\n",
							"experiment = Experiment(ws, experiment_name)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df = spark.sql(\"SELECT * FROM default.covid19\")\r\n",
							"from pyspark.sql.types import *\r\n",
							""
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df = df.withColumn(\"_c5\", df[\"_c5\"].cast(DoubleType()).alias(\"_c5\"))\r\n",
							"df = df.withColumn(\"_c6\", df[\"_c6\"].cast(DoubleType()).alias(\"_c6\"))\r\n",
							"df = df.withColumn(\"_c7\", df[\"_c7\"].cast(DoubleType()).alias(\"_c7\"))"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"datastore = Datastore.get_default(ws)\n",
							"dataset = TabularDatasetFactory.register_spark_dataframe(df, datastore, name = experiment_name + \"-dataset\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(df)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.printSchema"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"source": [
							"automl_config = AutoMLConfig(spark_context = sc,\n",
							"                             task = \"regression\",\n",
							"                             training_data = dataset,\n",
							"                             label_column_name = \"_c7\",\n",
							"                             primary_metric = \"spearman_correlation\",\n",
							"                             experiment_timeout_hours = 3,\n",
							"                             max_concurrent_iterations = 2,\n",
							"                             enable_onnx_compatible_models = True)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"run = experiment.submit(automl_config)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"run.wait_for_completion(show_output=True)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"displayHTML(\"<a href={} target='_blank'>Your experiment in Azure Machine Learning portal: {}</a>\".format(run.get_portal_url(), run.id))"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"source": [
							"run.wait_for_completion()\n",
							"\n",
							"# Install required dependency\n",
							"import pip\n",
							"pip.main([\"install\", \"azure-storage-blob==12.5.0\"])\n",
							"\n",
							"import onnxruntime\n",
							"import mlflow\n",
							"import mlflow.onnx\n",
							"\n",
							"from mlflow.models.signature import ModelSignature\n",
							"from mlflow.types import DataType\n",
							"from mlflow.types.schema import ColSpec, Schema\n",
							"\n",
							"# Get best model from automl run\n",
							"best_run, onnx_model = run.get_output(return_onnx_model=True)\n",
							"\n",
							"# Define utility functions to infer the schema of ONNX model\n",
							"def _infer_schema(data):\n",
							"    res = []\n",
							"    for _, col in enumerate(data):\n",
							"        t = col.type.replace(\"tensor(\", \"\").replace(\")\", \"\")\n",
							"        if t in [\"bool\"]:\n",
							"            dt = DataType.boolean\n",
							"        elif t in [\"int8\", \"uint8\", \"int16\", \"uint16\", \"int32\"]:\n",
							"            dt = DateType.integer\n",
							"        elif t in [\"uint32\", \"int64\"]:\n",
							"            dt = DataType.long\n",
							"        elif t in [\"float16\", \"bfloat16\", \"float\"]:\n",
							"            dt = DataType.float\n",
							"        elif t in [\"double\"]:\n",
							"            dt = DataType.double\n",
							"        elif t in [\"string\"]:\n",
							"            dt = DataType.string\n",
							"        else:\n",
							"            raise Exception(\"Unsupported type: \" + t)\n",
							"        res.append(ColSpec(type=dt, name=col.name))\n",
							"    return Schema(res)\n",
							"\n",
							"def _infer_signature(onnx_model):\n",
							"    onnx_model_bytes = onnx_model.SerializeToString()\n",
							"    onnx_runtime = onnxruntime.InferenceSession(onnx_model_bytes)\n",
							"    inputs = _infer_schema(onnx_runtime.get_inputs())\n",
							"    outputs = _infer_schema(onnx_runtime.get_outputs())\n",
							"    return ModelSignature(inputs, outputs)\n",
							"\n",
							"# Infer signature of ONNX model\n",
							"signature = _infer_signature(onnx_model)\n",
							"\n",
							"artifact_path = experiment_name + \"_artifact\"\n",
							"mlflow.set_tracking_uri(ws.get_mlflow_tracking_uri())\n",
							"mlflow.set_experiment(experiment_name)\n",
							"\n",
							"with mlflow.start_run() as run:\n",
							"    # Save the model to the outputs directory for capture\n",
							"    mlflow.onnx.log_model(onnx_model, artifact_path, signature=signature)\n",
							"\n",
							"    # Register the model to AML model registry\n",
							"    mlflow.register_model(\"runs:/\" + run.info.run_id + \"/\" + artifact_path, \"bbaccsynapse-covid19-20201217032448-Best-onnx\")"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Creating a managed Spark Table')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Creating a managed Spark Table_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_sparksql",
						"display_name": "Synapse SQL"
					},
					"language_info": {
						"name": "sql"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Creating a managed Spark table\n",
							"This notebook describes how to create a managed table from Spark. \n",
							"The table is created in the Synapse warehouse folder in your primary storage account. The table will be synchronized and available in Synapse SQL Pools. \n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"{}\"",
								"isSummary": false,
								"previewData": {
									"filter": null,
									"table": {
										"rows": [],
										"schema": {}
									}
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"DROP TABLE IF EXISTS cities"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"{}\"",
								"isSummary": false,
								"previewData": {
									"filter": null,
									"table": {
										"rows": [],
										"schema": {}
									}
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE cities\n",
							"  (name STRING, population INT)\n",
							"  USING PARQUET"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"Insert a few rows into the table using a list of values.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"{}\"",
								"isSummary": false,
								"previewData": {
									"filter": null,
									"table": {
										"rows": [],
										"schema": {}
									}
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"INSERT INTO cities VALUES ('Seattle', 730400), ('San Francisco', 881549), ('Beijing', 21540000), ('Bangalore', 10540000)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"* Retrieve values back. Click on 'Chart' below to review the visualization.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"name"
									],
									"values": [
										"population"
									],
									"yLabel": "population",
									"xLabel": "name",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"{\\\"population\\\":{\\\"Bangalore\\\":10540000,\\\"Beijing\\\":21540000,\\\"San Francisco\\\":881549,\\\"Seattle\\\":730400}}\"",
								"isSummary": false,
								"previewData": {
									"filter": null,
									"table": {
										"rows": [],
										"schema": {}
									}
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"SELECT * FROM cities ORDER BY name"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"Drop the table. Please note the data will get deleted from the primary storage account associated with this workspace.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"{}\"",
								"isSummary": false,
								"previewData": {
									"filter": null,
									"table": {
										"rows": [],
										"schema": {}
									}
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"DROP TABLE cities"
						],
						"outputs": [],
						"execution_count": 5
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Data Exploration and ML Modeling - NYC taxi predict using Spark MLlib')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Data Exploration and ML Modeling - NYC taxi predict using Spark MLlib_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Predict NYC Taxi Tips using Spark ML and Azure Open Datasets\n",
							"\n",
							"The notebook ingests, visualizes, prepares and then trains a model based on an Open Dataset that tracks NYC Yellow Taxi trips and various attributes around them.\n",
							"The goal is to predict for a given trip whether there will be a trip or not.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\n",
							"\n",
							"from pyspark.sql.functions import unix_timestamp\n",
							"\n",
							"from pyspark.sql import SparkSession\n",
							"from pyspark.sql.types import *\n",
							"from pyspark.sql.functions import *\n",
							"\n",
							"from pyspark.ml import Pipeline\n",
							"from pyspark.ml import PipelineModel\n",
							"from pyspark.ml.feature import RFormula\n",
							"from pyspark.ml.feature import OneHotEncoder, StringIndexer, VectorIndexer\n",
							"from pyspark.ml.classification import LogisticRegression\n",
							"from pyspark.mllib.evaluation import BinaryClassificationMetrics\n",
							"from pyspark.ml.evaluation import BinaryClassificationEvaluator"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Ingest Data¶ \n",
							"\n",
							"Get a sample data of nyc yellow taxi to make it faster/easier to evaluate different approaches to prep for the modelling phase later in the notebook."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Import NYC yellow cab data from Azure Open Datasets\n",
							"from azureml.opendatasets import NycTlcYellow\n",
							"\n",
							"from datetime import datetime\n",
							"from dateutil import parser\n",
							"\n",
							"end_date = parser.parse('2018-05-08 00:00:00')\n",
							"start_date = parser.parse('2018-05-01 00:00:00')\n",
							"\n",
							"nyc_tlc = NycTlcYellow(start_date=start_date, end_date=end_date)\n",
							"nyc_tlc_df = nyc_tlc.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"#To make development easier, faster and less expensive downsample for now\n",
							"sampled_taxi_df = nyc_tlc_df.sample(True, 0.001, seed=1234)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Exploratory Data Analysis\n",
							"\n",
							"Look at the data and evaluate its suitability for use in a model, do this via some basic charts focussed on tip values and relationships."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"#The charting package needs a Pandas dataframe or numpy array do the conversion\n",
							"sampled_taxi_pd_df = sampled_taxi_df.toPandas()\n",
							"\n",
							"# Look at tips by amount count histogram\n",
							"ax1 = sampled_taxi_pd_df['tipAmount'].plot(kind='hist', bins=25, facecolor='lightblue')\n",
							"ax1.set_title('Tip amount distribution')\n",
							"ax1.set_xlabel('Tip Amount ($)')\n",
							"ax1.set_ylabel('Counts')\n",
							"plt.suptitle('')\n",
							"plt.show()\n",
							"\n",
							"# How many passengers tip'd by various amounts\n",
							"ax2 = sampled_taxi_pd_df.boxplot(column=['tipAmount'], by=['passengerCount'])\n",
							"ax2.set_title('Tip amount by Passenger count')\n",
							"ax2.set_xlabel('Passenger count') \n",
							"ax2.set_ylabel('Tip Amount ($)')\n",
							"plt.suptitle('')\n",
							"plt.show()\n",
							"\n",
							"# Look at the relationship between fare and tip amounts\n",
							"ax = sampled_taxi_pd_df.plot(kind='scatter', x= 'fareAmount', y = 'tipAmount', c='blue', alpha = 0.10, s=2.5*(sampled_taxi_pd_df['passengerCount']))\n",
							"ax.set_title('Tip amount by Fare amount')\n",
							"ax.set_xlabel('Fare Amount ($)')\n",
							"ax.set_ylabel('Tip Amount ($)')\n",
							"plt.axis([-2, 80, -2, 20])\n",
							"plt.suptitle('')\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data Prep and Featurization\n",
							"\n",
							"It's clear from the visualizations above that there are a bunch of outliers in the data. These will need to be filtered out in addition there are extra variables that are not going to be useful in the model we build at the end.\n",
							"\n",
							"Finally there is a need to create some new (derived) variables that will work better with the model.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"taxi_df = sampled_taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'rateCodeId', 'passengerCount'\\\n",
							"                                , 'tripDistance', 'tpepPickupDateTime', 'tpepDropoffDateTime'\\\n",
							"                                , date_format('tpepPickupDateTime', 'hh').alias('pickupHour')\\\n",
							"                                , date_format('tpepPickupDateTime', 'EEEE').alias('weekdayString')\\\n",
							"                                , (unix_timestamp(col('tpepDropoffDateTime')) - unix_timestamp(col('tpepPickupDateTime'))).alias('tripTimeSecs')\\\n",
							"                                , (when(col('tipAmount') > 0, 1).otherwise(0)).alias('tipped')\n",
							"                                )\\\n",
							"                        .filter((sampled_taxi_df.passengerCount > 0) & (sampled_taxi_df.passengerCount < 8)\\\n",
							"                                & (sampled_taxi_df.tipAmount >= 0) & (sampled_taxi_df.tipAmount <= 25)\\\n",
							"                                & (sampled_taxi_df.fareAmount >= 1) & (sampled_taxi_df.fareAmount <= 250)\\\n",
							"                                & (sampled_taxi_df.tipAmount < sampled_taxi_df.fareAmount)\\\n",
							"                                & (sampled_taxi_df.tripDistance > 0) & (sampled_taxi_df.tripDistance <= 100)\\\n",
							"                                & (sampled_taxi_df.rateCodeId <= 5)\n",
							"                                & (sampled_taxi_df.paymentType.isin({\"1\", \"2\"}))\n",
							"                                )"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data Prep and Featurization Part 2\n",
							"\n",
							"Having created new variables its now possible to drop the columns they were derived from so that the dataframe that goes into the model is the smallest in terms of number of variables, that is required.\n",
							"\n",
							"Also create some more features based on new columns from the first round.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"taxi_featurised_df = taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'passengerCount'\\\n",
							"                                                , 'tripDistance', 'weekdayString', 'pickupHour','tripTimeSecs','tipped'\\\n",
							"                                                , when((taxi_df.pickupHour <= 6) | (taxi_df.pickupHour >= 20),\"Night\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 7) & (taxi_df.pickupHour <= 10), \"AMRush\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 11) & (taxi_df.pickupHour <= 15), \"Afternoon\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 16) & (taxi_df.pickupHour <= 19), \"PMRush\")\\\n",
							"                                                .otherwise(0).alias('trafficTimeBins')\n",
							"                                              )\\\n",
							"                                       .filter((taxi_df.tripTimeSecs >= 30) & (taxi_df.tripTimeSecs <= 7200))"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Encoding\n",
							"\n",
							"Different ML algorithms support different types of input, for this example Logistic Regression is being used for Binary Classification. This means that any Categorical (string) variables must be converted to numbers.\n",
							"\n",
							"The process is not as simple as a \"map\" style function as the relationship between the numbers can introduce a bias in the resulting model, the approach is to index the variable and then encode using a std approach called One Hot Encoding.\n",
							"\n",
							"This approach requires the encoder to \"learn\"/fit a model over the data in the Spark instance and then transform based on what was learnt.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# The sample uses an algorithm that only works with numeric features convert them so they can be consumed\n",
							"sI1 = StringIndexer(inputCol=\"trafficTimeBins\", outputCol=\"trafficTimeBinsIndex\"); \n",
							"en1 = OneHotEncoder(dropLast=False, inputCol=\"trafficTimeBinsIndex\", outputCol=\"trafficTimeBinsVec\");\n",
							"sI2 = StringIndexer(inputCol=\"weekdayString\", outputCol=\"weekdayIndex\"); \n",
							"en2 = OneHotEncoder(dropLast=False, inputCol=\"weekdayIndex\", outputCol=\"weekdayVec\");\n",
							"\n",
							"# Create a new dataframe that has had the encodings applied\n",
							"encoded_final_df = Pipeline(stages=[sI1, en1, sI2, en2]).fit(taxi_featurised_df).transform(taxi_featurised_df)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Generation of Testing and Training Data Sets\n",
							"Simple split, 70% for training and 30% for testing the model. Playing with this ratio may result in different models.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Decide on the split between training and testing data from the dataframe \n",
							"trainingFraction = 0.7\n",
							"testingFraction = (1-trainingFraction)\n",
							"seed = 1234\n",
							"\n",
							"# Split the dataframe into test and training dataframes\n",
							"train_data_df, test_data_df = encoded_final_df.randomSplit([trainingFraction, testingFraction], seed=seed)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Train the Model\n",
							"\n",
							"Train the Logistic Regression model and then evaluate it using Area under ROC as the metric."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"## Create a new LR object for the model\n",
							"logReg = LogisticRegression(maxIter=10, regParam=0.3, labelCol = 'tipped')\n",
							"\n",
							"## The formula for the model\n",
							"classFormula = RFormula(formula=\"tipped ~ pickupHour + weekdayVec + passengerCount + tripTimeSecs + tripDistance + fareAmount + paymentType+ trafficTimeBinsVec\")\n",
							"\n",
							"## Undertake training and create an LR model\n",
							"lrModel = Pipeline(stages=[classFormula, logReg]).fit(train_data_df)\n",
							"\n",
							"## Saving the model is optional but its another for of inter session cache\n",
							"datestamp = datetime.now().strftime('%m-%d-%Y-%s');\n",
							"fileName = \"lrModel_\" + datestamp;\n",
							"logRegDirfilename = fileName;\n",
							"lrModel.save(logRegDirfilename)\n",
							"\n",
							"## Predict tip 1/0 (yes/no) on the test dataset, evaluation using AUROC\n",
							"predictions = lrModel.transform(test_data_df)\n",
							"predictionAndLabels = predictions.select(\"label\",\"prediction\").rdd\n",
							"metrics = BinaryClassificationMetrics(predictionAndLabels)\n",
							"print(\"Area under ROC = %s\" % metrics.areaUnderROC)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Evaluate and Visualize\n",
							"\n",
							"Plot the actual curve to develop a better understanding of the model.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"## Plot the ROC curve, no need for pandas as this uses the modelSummary object\n",
							"modelSummary = lrModel.stages[-1].summary\n",
							"\n",
							"plt.plot([0, 1], [0, 1], 'r--')\n",
							"plt.plot(modelSummary.roc.select('FPR').collect(),\n",
							"         modelSummary.roc.select('TPR').collect())\n",
							"plt.xlabel('False Positive Rate')\n",
							"plt.ylabel('True Positive Rate')\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 10
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Data Exploration and ML Modeling')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Data Exploration and ML Modeling_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "224g",
					"driverCores": 32,
					"executorMemory": "224g",
					"executorCores": 32,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3xlarge",
						"name": "mlspark3xlarge",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3xlarge",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 64,
						"memory": 400
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Predict NYC Taxi Tips using Spark ML and Azure Open Datasets\n",
							"\n",
							"The notebook ingests, visualizes, prepares and then trains a model based on an Open Dataset that tracks NYC Yellow Taxi trips and various attributes around them.\n",
							"The goal is to predict for a given trip whether there will be a trip or not.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\n",
							"\n",
							"from pyspark.sql.functions import unix_timestamp\n",
							"\n",
							"from pyspark.sql import SparkSession\n",
							"from pyspark.sql.types import *\n",
							"from pyspark.sql.functions import *\n",
							"\n",
							"from pyspark.ml import Pipeline\n",
							"from pyspark.ml import PipelineModel\n",
							"from pyspark.ml.feature import RFormula\n",
							"from pyspark.ml.feature import OneHotEncoder, StringIndexer, VectorIndexer\n",
							"from pyspark.ml.classification import LogisticRegression\n",
							"from pyspark.mllib.evaluation import BinaryClassificationMetrics\n",
							"from pyspark.ml.evaluation import BinaryClassificationEvaluator"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Ingest Data¶ \n",
							"\n",
							"Get a sample data of nyc yellow taxi to make it faster/easier to evaluate different approaches to prep for the modelling phase later in the notebook."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Import NYC yellow cab data from Azure Open Datasets\n",
							"from azureml.opendatasets import NycTlcYellow\n",
							"\n",
							"from datetime import datetime\n",
							"from dateutil import parser\n",
							"\n",
							"end_date = parser.parse('2018-05-08 00:00:00')\n",
							"start_date = parser.parse('2018-05-01 00:00:00')\n",
							"\n",
							"nyc_tlc = NycTlcYellow(start_date=start_date, end_date=end_date)\n",
							"nyc_tlc_df = nyc_tlc.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"#To make development easier, faster and less expensive downsample for now\n",
							"sampled_taxi_df = nyc_tlc_df.sample(True, 0.001, seed=1234)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Exploratory Data Analysis\n",
							"\n",
							"Look at the data and evaluate its suitability for use in a model, do this via some basic charts focussed on tip values and relationships."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"#The charting package needs a Pandas dataframe or numpy array do the conversion\n",
							"sampled_taxi_pd_df = sampled_taxi_df.toPandas()\n",
							"\n",
							"# Look at tips by amount count histogram\n",
							"ax1 = sampled_taxi_pd_df['tipAmount'].plot(kind='hist', bins=25, facecolor='lightblue')\n",
							"ax1.set_title('Tip amount distribution')\n",
							"ax1.set_xlabel('Tip Amount ($)')\n",
							"ax1.set_ylabel('Counts')\n",
							"plt.suptitle('')\n",
							"plt.show()\n",
							"\n",
							"# How many passengers tip'd by various amounts\n",
							"ax2 = sampled_taxi_pd_df.boxplot(column=['tipAmount'], by=['passengerCount'])\n",
							"ax2.set_title('Tip amount by Passenger count')\n",
							"ax2.set_xlabel('Passenger count') \n",
							"ax2.set_ylabel('Tip Amount ($)')\n",
							"plt.suptitle('')\n",
							"plt.show()\n",
							"\n",
							"# Look at the relationship between fare and tip amounts\n",
							"ax = sampled_taxi_pd_df.plot(kind='scatter', x= 'fareAmount', y = 'tipAmount', c='blue', alpha = 0.10, s=2.5*(sampled_taxi_pd_df['passengerCount']))\n",
							"ax.set_title('Tip amount by Fare amount')\n",
							"ax.set_xlabel('Fare Amount ($)')\n",
							"ax.set_ylabel('Tip Amount ($)')\n",
							"plt.axis([-2, 80, -2, 20])\n",
							"plt.suptitle('')\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data Prep and Featurization\n",
							"\n",
							"It's clear from the visualizations above that there are a bunch of outliers in the data. These will need to be filtered out in addition there are extra variables that are not going to be useful in the model we build at the end.\n",
							"\n",
							"Finally there is a need to create some new (derived) variables that will work better with the model.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"taxi_df = sampled_taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'rateCodeId', 'passengerCount'\\\n",
							"                                , 'tripDistance', 'tpepPickupDateTime', 'tpepDropoffDateTime'\\\n",
							"                                , date_format('tpepPickupDateTime', 'hh').alias('pickupHour')\\\n",
							"                                , date_format('tpepPickupDateTime', 'EEEE').alias('weekdayString')\\\n",
							"                                , (unix_timestamp(col('tpepDropoffDateTime')) - unix_timestamp(col('tpepPickupDateTime'))).alias('tripTimeSecs')\\\n",
							"                                , (when(col('tipAmount') > 0, 1).otherwise(0)).alias('tipped')\n",
							"                                )\\\n",
							"                        .filter((sampled_taxi_df.passengerCount > 0) & (sampled_taxi_df.passengerCount < 8)\\\n",
							"                                & (sampled_taxi_df.tipAmount >= 0) & (sampled_taxi_df.tipAmount <= 25)\\\n",
							"                                & (sampled_taxi_df.fareAmount >= 1) & (sampled_taxi_df.fareAmount <= 250)\\\n",
							"                                & (sampled_taxi_df.tipAmount < sampled_taxi_df.fareAmount)\\\n",
							"                                & (sampled_taxi_df.tripDistance > 0) & (sampled_taxi_df.tripDistance <= 100)\\\n",
							"                                & (sampled_taxi_df.rateCodeId <= 5)\n",
							"                                & (sampled_taxi_df.paymentType.isin({\"1\", \"2\"}))\n",
							"                                )"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data Prep and Featurization Part 2\n",
							"\n",
							"Having created new variables its now possible to drop the columns they were derived from so that the dataframe that goes into the model is the smallest in terms of number of variables, that is required.\n",
							"\n",
							"Also create some more features based on new columns from the first round.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"taxi_featurised_df = taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'passengerCount'\\\n",
							"                                                , 'tripDistance', 'weekdayString', 'pickupHour','tripTimeSecs','tipped'\\\n",
							"                                                , when((taxi_df.pickupHour <= 6) | (taxi_df.pickupHour >= 20),\"Night\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 7) & (taxi_df.pickupHour <= 10), \"AMRush\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 11) & (taxi_df.pickupHour <= 15), \"Afternoon\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 16) & (taxi_df.pickupHour <= 19), \"PMRush\")\\\n",
							"                                                .otherwise(0).alias('trafficTimeBins')\n",
							"                                              )\\\n",
							"                                       .filter((taxi_df.tripTimeSecs >= 30) & (taxi_df.tripTimeSecs <= 7200))"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Encoding\n",
							"\n",
							"Different ML algorithms support different types of input, for this example Logistic Regression is being used for Binary Classification. This means that any Categorical (string) variables must be converted to numbers.\n",
							"\n",
							"The process is not as simple as a \"map\" style function as the relationship between the numbers can introduce a bias in the resulting model, the approach is to index the variable and then encode using a std approach called One Hot Encoding.\n",
							"\n",
							"This approach requires the encoder to \"learn\"/fit a model over the data in the Spark instance and then transform based on what was learnt.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# The sample uses an algorithm that only works with numeric features convert them so they can be consumed\n",
							"sI1 = StringIndexer(inputCol=\"trafficTimeBins\", outputCol=\"trafficTimeBinsIndex\"); \n",
							"en1 = OneHotEncoder(dropLast=False, inputCol=\"trafficTimeBinsIndex\", outputCol=\"trafficTimeBinsVec\");\n",
							"sI2 = StringIndexer(inputCol=\"weekdayString\", outputCol=\"weekdayIndex\"); \n",
							"en2 = OneHotEncoder(dropLast=False, inputCol=\"weekdayIndex\", outputCol=\"weekdayVec\");\n",
							"\n",
							"# Create a new dataframe that has had the encodings applied\n",
							"encoded_final_df = Pipeline(stages=[sI1, en1, sI2, en2]).fit(taxi_featurised_df).transform(taxi_featurised_df)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Generation of Testing and Training Data Sets\n",
							"Simple split, 70% for training and 30% for testing the model. Playing with this ratio may result in different models.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Decide on the split between training and testing data from the dataframe \n",
							"trainingFraction = 0.7\n",
							"testingFraction = (1-trainingFraction)\n",
							"seed = 1234\n",
							"\n",
							"# Split the dataframe into test and training dataframes\n",
							"train_data_df, test_data_df = encoded_final_df.randomSplit([trainingFraction, testingFraction], seed=seed)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Train the Model\n",
							"\n",
							"Train the Logistic Regression model and then evaluate it using Area under ROC as the metric."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"## Create a new LR object for the model\n",
							"logReg = LogisticRegression(maxIter=10, regParam=0.3, labelCol = 'tipped')\n",
							"\n",
							"## The formula for the model\n",
							"classFormula = RFormula(formula=\"tipped ~ pickupHour + weekdayVec + passengerCount + tripTimeSecs + tripDistance + fareAmount + paymentType+ trafficTimeBinsVec\")\n",
							"\n",
							"## Undertake training and create an LR model\n",
							"lrModel = Pipeline(stages=[classFormula, logReg]).fit(train_data_df)\n",
							"\n",
							"## Saving the model is optional but its another for of inter session cache\n",
							"datestamp = datetime.now().strftime('%m-%d-%Y-%s');\n",
							"fileName = \"lrModel_\" + datestamp;\n",
							"logRegDirfilename = fileName;\n",
							"lrModel.save(logRegDirfilename)\n",
							"\n",
							"## Predict tip 1/0 (yes/no) on the test dataset, evaluation using AUROC\n",
							"predictions = lrModel.transform(test_data_df)\n",
							"predictionAndLabels = predictions.select(\"label\",\"prediction\").rdd\n",
							"metrics = BinaryClassificationMetrics(predictionAndLabels)\n",
							"print(\"Area under ROC = %s\" % metrics.areaUnderROC)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Evaluate and Visualize\n",
							"\n",
							"Plot the actual curve to develop a better understanding of the model.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"## Plot the ROC curve, no need for pandas as this uses the modelSummary object\n",
							"modelSummary = lrModel.stages[-1].summary\n",
							"\n",
							"plt.plot([0, 1], [0, 1], 'r--')\n",
							"plt.plot(modelSummary.roc.select('FPR').collect(),\n",
							"         modelSummary.roc.select('TPR').collect())\n",
							"plt.xlabel('False Positive Rate')\n",
							"plt.ylabel('True Positive Rate')\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 10
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Getting Started with Delta Lake')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Getting Started with Delta Lake_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Hitchhiker's Guide to Delta Lake (Scala)\n",
							"\n",
							"This tutorial has been adapted for more clarity from its original counterpart [here](https://docs.delta.io/latest/quick-start.html). This notebook helps you quickly explore the main features of [Delta Lake](https://github.com/delta-io/delta). It provides code snippets that show how to read from and write to Delta Lake tables from interactive, batch, and streaming queries.\n",
							"\n",
							"Here's what we will cover:\n",
							"* Create a table\n",
							"* Understanding meta-data\n",
							"* Read data\n",
							"* Update table data\n",
							"* Overwrite table data\n",
							"* Conditional update without overwrite\n",
							"* Read older versions of data using Time Travel\n",
							"* Write a stream of data to a table\n",
							"* Read a stream of changes from a table"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Configuration\n",
							"Make sure you modify this as appropriate."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val sessionId = scala.util.Random.nextInt(1000000)\n",
							"val deltaTablePath = s\"/delta/delta-table-$sessionId\";"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Create a table\n",
							"To create a Delta Lake table, write a DataFrame out in the **delta** format. You can use existing Spark SQL code and change the format from parquet, csv, json, and so on, to delta.\n",
							"\n",
							"These operations create a new Delta Lake table using the schema that was inferred from your DataFrame. For the full set of options available when you create a new Delta Lake table, see Create a table and Write to a table (subsequent cells in this notebook)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val data = spark.range(0, 5)\n",
							"data.show\n",
							"data.write.format(\"delta\").save(deltaTablePath)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Understanding Meta-data\n",
							"\n",
							"In Delta Lake, meta-data is no different from data i.e., it is stored next to the data. Therefore, an interesting side-effect here is that you can peek into meta-data using regular Spark APIs. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.read.text(s\"$deltaTablePath/_delta_log/\").collect.foreach(println)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read data\n",
							"\n",
							"You read data in your Delta Lake table by specifying the path to the files: \"/tmp/delta-table-scala\""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df = spark.read.format(\"delta\").load(deltaTablePath)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Update table data\n",
							"\n",
							"Delta Lake supports several operations to modify tables using standard DataFrame APIs. This example runs a batch job to overwrite the data in the table.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val data = spark.range(5, 10)\n",
							"data.write.format(\"delta\").mode(\"overwrite\").save(deltaTablePath)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"When you now inspect the meta-data, what you will notice is that the original data is over-written. Well, not in a true sense but appropriate entries are added to Delta's transaction log so it can provide an \"illusion\" that the original data was deleted. We can verify this by re-inspecting the meta-data. You will see several entries indicating reference removal to the original data."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.read.text(s\"$deltaTablePath/_delta_log/\").collect.foreach(println)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Save as catalog tables\n",
							"\n",
							"Delta Lake can write to managed or external catalog tables."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Write data to a new managed catalog table.\n",
							"data.write.format(\"delta\").saveAsTable(\"ManagedDeltaTable\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"// Define an external catalog table that points to the existing Delta Lake data in storage.\n",
							"spark.sql(s\"CREATE TABLE ExternalDeltaTable USING DELTA LOCATION '$deltaTablePath'\")"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"// List the 2 new tables.\n",
							"spark.sql(\"SHOW TABLES\").show\n",
							"\n",
							"// Explore their properties.\n",
							"spark.sql(\"DESCRIBE EXTENDED ManagedDeltaTable\").show(truncate=false)\n",
							"spark.sql(\"DESCRIBE EXTENDED ExternalDeltaTable\").show(truncate=false)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Conditional update without overwrite\n",
							"\n",
							"Delta Lake provides programmatic APIs to conditional update, delete, and merge (upsert) data into tables. For more information on these operations, see [Table Deletes, Updates, and Merges](https://docs.delta.io/latest/delta-update.html)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import io.delta.tables._\n",
							"import org.apache.spark.sql.functions._\n",
							"\n",
							"val deltaTable = DeltaTable.forPath(deltaTablePath)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"// Update every even value by adding 100 to it\n",
							"deltaTable.update(\n",
							"  condition = expr(\"id % 2 == 0\"),\n",
							"  set = Map(\"id\" -> expr(\"id + 100\")))\n",
							"deltaTable.toDF.show"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"// Delete every even value\n",
							"deltaTable.delete(condition = expr(\"id % 2 == 0\"))\n",
							"deltaTable.toDF.show"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"// Upsert (merge) new data\n",
							"val newData = spark.range(0, 20).toDF\n",
							"\n",
							"deltaTable.as(\"oldData\").\n",
							"  merge(\n",
							"    newData.as(\"newData\"),\n",
							"    \"oldData.id = newData.id\").\n",
							"  whenMatched.\n",
							"  update(Map(\"id\" -> lit(-1))).\n",
							"  whenNotMatched.\n",
							"  insert(Map(\"id\" -> col(\"newData.id\"))).\n",
							"  execute()\n",
							"\n",
							"deltaTable.toDF.show()"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "markdown",
						"source": [
							"## History\n",
							"Delta's most powerful feature is the ability to allow looking into history i.e., the changes that were made to the underlying Delta Table. The cell below shows how simple it is to inspect the history."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.history.show(false)"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read older versions of data using Time Travel\n",
							"\n",
							"You can query previous snapshots of your Delta Lake table by using a feature called Time Travel. If you want to access the data that you overwrote, you can query a snapshot of the table before you overwrote the first set of data using the versionAsOf option.\n",
							"\n",
							"Once you run the cell below, you should see the first set of data, from before you overwrote it. Time Travel is an extremely powerful feature that takes advantage of the power of the Delta Lake transaction log to access data that is no longer in the table. Removing the version 0 option (or specifying version 1) would let you see the newer data again. For more information, see [Query an older snapshot of a table (time travel)](https://docs.delta.io/latest/delta-batch.html#deltatimetravel)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df = spark.read.format(\"delta\").option(\"versionAsOf\", 0).load(deltaTablePath)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Write a stream of data to a table\n",
							"\n",
							"You can also write to a Delta Lake table using Spark's Structured Streaming. The Delta Lake transaction log guarantees exactly-once processing, even when there are other streams or batch queries running concurrently against the table. By default, streams run in append mode, which adds new records to the table.\n",
							"\n",
							"For more information about Delta Lake integration with Structured Streaming, see [Table Streaming Reads and Writes](https://docs.delta.io/latest/delta-streaming.html).\n",
							"\n",
							"In the cells below, here's what we are doing:\n",
							"\n",
							"1. *Cell 28* Setup a simple Spark Structured Streaming job to generate a sequence and make the job write into our Delta Table\n",
							"2. *Cell 30* Show the newly appended data\n",
							"3. *Cell 31* Inspect history\n",
							"4. *Cell 32* Stop the structured streaming job\n",
							"5. *Cell 33* Inspect history <-- You'll notice appends have stopped"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val streamingDf = spark.readStream.format(\"rate\").load()\n",
							"val stream = streamingDf.select($\"value\" as \"id\").writeStream.format(\"delta\").option(\"checkpointLocation\", s\"/tmp/checkpoint-$sessionId\").start(deltaTablePath)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read a stream of changes from a table\n",
							"\n",
							"While the stream is writing to the Delta Lake table, you can also read from that table as streaming source. For example, you can start another streaming query that prints all the changes made to the Delta Lake table."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.toDF.sort($\"id\".desc).show"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.history.show"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"source": [
							"stream.stop"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.history.show"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Convert Parquet to Delta\n",
							"You can do an in-place conversion from the Parquet format to Delta.## Cell title\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val parquetPath = s\"/parquet/parquet-table-$sessionId\"\n",
							"\n",
							"val data = spark.range(0,5)\n",
							"data.write.parquet(parquetPath)\n",
							"\n",
							"// Confirm that the data isn't in the Delta format\n",
							"DeltaTable.isDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"source": [
							"DeltaTable.convertToDelta(spark, s\"parquet.`$parquetPath`\")\n",
							"\n",
							"// Confirm that the converted data is now in the Delta format\n",
							"DeltaTable.isDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "markdown",
						"source": [
							"## SQL Support\n",
							"Delta supports table utility commands through SQL.  You can use SQL to:\n",
							"* Get a DeltaTable's history\n",
							"* Vacuum a DeltaTable\n",
							"* Convert a Parquet file to Delta\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(s\"DESCRIBE HISTORY delta.`$deltaTablePath`\").show()"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(s\"VACUUM delta.`$deltaTablePath`\").show()"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"source": [
							"val parquetId = scala.util.Random.nextInt(1000)\n",
							"val parquetPath = s\"/parquet/parquet-table-$sessionId-$parquetId\"\n",
							"\n",
							"val data = spark.range(0,5)\n",
							"data.write.parquet(parquetPath)\n",
							"\n",
							"// Confirm that the data isn't in the Delta format\n",
							"DeltaTable.isDeltaTable(parquetPath)\n",
							"\n",
							"// Use SQL to convert the parquet table to Delta\n",
							"spark.sql(s\"CONVERT TO DELTA parquet.`$parquetPath`\")\n",
							"\n",
							"DeltaTable.isDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 25
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Hyperspace Indexing')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Hyperspace Indexing_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark",
						"name": "mlspark",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 64,
						"memory": 400
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Hitchhiker's Guide to Hyperspace (Scala)\n",
							"## An Indexing Subsystem for Apache Spark™\n",
							"\n",
							"<img src=\"https://raw.githubusercontent.com/rapoth/hyperspace/master/docs/assets/images/hyperspace-small-banner.png\" alt=\"Hyperspace Indexing Sub-System Logo\" width=\"1000\"/>\n",
							"\n",
							"[Hyperspace](https://github.com/microsoft/hyperspace) introduces the ability for Apache Spark™ users to create indexes on their datasets (e.g., CSV, JSON, Parquet etc.) and leverage them for potential query and workload acceleration.\n",
							"\n",
							"In this notebook, we highlight the basics of Hyperspace, emphasizing on its simplicity and show how it can be used by just anyone.\n",
							"\n",
							"**Disclaimer**: Hyperspace helps accelerate your workloads/queries under two circumstances:\n",
							"\n",
							"  1. Queries contain filters on predicates with high selectivity (e.g., you want to select 100 matching rows from a million candidate rows)\n",
							"  2. Queries contain a join that requires heavy-shuffles (e.g., you want to join a 100 GB dataset with a 10 GB dataset)\n",
							"\n",
							"You may want to carefully monitor your workloads and determine whether indexing is helping you on a case-by-case basis."
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Setup\n",
							"To begin with, let's start a new Spark™ session. Since this notebook is a tutorial merely to illustrate what Hyperspace can offer, we will make a configuration change that allow us to highlight what Hyperspace is doing on small datasets. By default, Spark™ uses *broadcast join* to optimize join queries when the data size for one side of join is small (which is the case for the sample data we use in this tutorial). Therefore, we disable broadcast joins so that later when we run join queries, Spark™ uses *sort-merge* join. This is mainly to show how Hyperspace indexes would be used at scale for accelerating join queries.\n",
							"\n",
							"The output of running the cell below shows a reference to the successfully created Spark™ session and prints out '-1' as the value for the modified join config which indicates that broadcast join is successfully disabled."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val sessionId = scala.util.Random.nextInt(1000000)\n",
							"val dataPath = s\"/hyperspace/data-$sessionId\";\n",
							"val indexLocation = s\"/hyperspace/indexes-$sessionId\"\n",
							"\n",
							"// Please note that you DO NOT need to change this configuration in production.\n",
							"// We store all indexes in the system folder within Synapse.\n",
							"spark.conf.set(\"spark.hyperspace.system.path\", indexLocation)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"// Start your Spark™ session\n",
							"spark\n",
							"\n",
							"// Disable BroadcastHashJoin, so Spark™ will use standard SortMergeJoin. Currently hyperspace indexes utilize SortMergeJoin to speed up query.\n",
							"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", -1)\n",
							"\n",
							"// Verify that BroadcastHashJoin is set correctly \n",
							"println(spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\"))\n",
							"spark.conf.set(\"spark.hyperspace.explain.displayMode\", \"html\")"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data Preparation\n",
							"\n",
							"To prepare our environment, we will create sample data records and save them as parquet data files. While we use Parquet for illustration, you can use other formats such as CSV. In the subsequent cells, we will also demonstrate how you can create several Hyperspace indexes on this sample dataset and how one can make Spark™ use them when running queries. \n",
							"\n",
							"Our example records correspond to two datasets: *department* and *employee*. You should configure \"empLocation\" and \"deptLocation\" paths so that on the storage account they point to your desired location to save generated data files. \n",
							"\n",
							"The output of running below cell shows contents of our datasets as lists of triplets followed by references to dataFrames created to save the content of each dataset in our preferred location."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import org.apache.spark.sql.DataFrame\n",
							"\n",
							"// Sample department records\n",
							"val departments = Seq(\n",
							"      (10, \"Accounting\", \"New York\"),\n",
							"      (20, \"Research\", \"Dallas\"),\n",
							"      (30, \"Sales\", \"Chicago\"),\n",
							"      (40, \"Operations\", \"Boston\"))\n",
							"\n",
							"// Sample employee records\n",
							"val employees = Seq(\n",
							"      (7369, \"SMITH\", 20),\n",
							"      (7499, \"ALLEN\", 30),\n",
							"      (7521, \"WARD\", 30),\n",
							"      (7566, \"JONES\", 20),\n",
							"      (7698, \"BLAKE\", 30),\n",
							"      (7782, \"CLARK\", 10),\n",
							"      (7788, \"SCOTT\", 20),\n",
							"      (7839, \"KING\", 10),\n",
							"      (7844, \"TURNER\", 30),\n",
							"      (7876, \"ADAMS\", 20),\n",
							"      (7900, \"JAMES\", 30),\n",
							"      (7934, \"MILLER\", 10),\n",
							"      (7902, \"FORD\", 20),\n",
							"      (7654, \"MARTIN\", 30))\n",
							"\n",
							"// Save sample data in the Parquet format\n",
							"import spark.implicits._\n",
							"val empData: DataFrame = employees.toDF(\"empId\", \"empName\", \"deptId\")\n",
							"val deptData: DataFrame = departments.toDF(\"deptId\", \"deptName\", \"location\")\n",
							"\n",
							"val empLocation: String = s\"$dataPath/employees.parquet\"\n",
							"val deptLocation: String = s\"$dataPath/departments.parquet\"\n",
							"empData.write.mode(\"overwrite\").parquet(empLocation)\n",
							"deptData.write.mode(\"overwrite\").parquet(deptLocation)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"Let's verify the contents of parquet files we created above to make sure they contain expected records in correct format. We later use these data files to create Hyperspace indexes and run sample queries.\n",
							"\n",
							"Running below cell, the output displays the rows in employee and department dataframes in a tabular form. There should be 14 employees and 4 departments, each matching with one of triplets we created in the previous cell."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// empLocation and deptLocation are the user defined locations above to save parquet files\n",
							"val empDF: DataFrame = spark.read.parquet(empLocation)\n",
							"val deptDF: DataFrame = spark.read.parquet(deptLocation)\n",
							"\n",
							"// Verify the data is available and correct\n",
							"empDF.show()\n",
							"deptDF.show()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Hello Hyperspace Index!\n",
							"Hyperspace lets users create indexes on records scanned from persisted data files. Once successfully created, an entry corresponding to the index is added to the Hyperspace's metadata. This metadata is later used by Apache Spark™'s Hyperspace-enabled optimizer during query processing to find and use proper indexes. \n",
							"\n",
							"Once indexes are created, users can perform several actions:\n",
							"  - **Refresh** If the underlying data changes, users can refresh an existing index to capture that. \n",
							"  - **Delete** If the index is not needed, users can perform a soft-delete i.e., index is not physically deleted but is marked as 'deleted' so it is no longer used in your workloads.\n",
							"  - **Vacuum** If an index is no longer required, users can vacuum it which forces a physical deletion of the index contents and associated metadata completely from Hyperspace's metadata.\n",
							"\n",
							"Below sections show how such index management operations can be done in Hyperspace.\n",
							"\n",
							"First, we need to import the required libraries and create an instance of Hyperspace. We later use this instance to invoke different Hyperspace APIs to create indexes on our sample data and modify those indexes.\n",
							"\n",
							"Output of running below cell shows a reference to the created instance of Hyperspace."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Create an instance of Hyperspace\n",
							"import com.microsoft.hyperspace._\n",
							"\n",
							"val hyperspace: Hyperspace = Hyperspace()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Create Indexes\n",
							"\n",
							"To create a Hyperspace index, the user needs to provide 2 pieces of information:\n",
							"* An Apache Spark™ DataFrame which references the data to be indexed.\n",
							"* An index configuration object: IndexConfig, which specifies the *index name*, *indexed* and *included* columns of the index. \n",
							"\n",
							"As you might have noticed, in this notebook, we illustrate indexing using the [Covering Index](https://www.red-gate.com/simple-talk/sql/learn-sql-server/using-covering-indexes-to-improve-query-performance/), which are the default index in Hyperspace. In the future, we plan on adding support for other index types. \n",
							"\n",
							"We start by creating three Hyperspace indexes on our sample data: two indexes on the department dataset named \"deptIndex1\" and \"deptIndex2\", and one index on the employee dataset named 'empIndex'. \n",
							"For each index, we need a corresponding IndexConfig to capture the name along with columns lists for the indexed and included columns. Running below cell creates these indexConfigs and its output lists them.\n",
							"\n",
							"**Note**: An *index column* is a column that appears in your filters or join conditions. An *included column* is a column that appears in your select/project.\n",
							"\n",
							"For instance, in the following query:\n",
							"```sql\n",
							"SELECT X\n",
							"FROM Table\n",
							"WHERE Y = 2\n",
							"```\n",
							"X can be an *index column* and Y can be an *included column*."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Create index configurations\n",
							"import com.microsoft.hyperspace.index.IndexConfig\n",
							"\n",
							"val empIndexConfig: IndexConfig = IndexConfig(\"empIndex\", Seq(\"deptId\"), Seq(\"empName\"))\n",
							"val deptIndexConfig1: IndexConfig = IndexConfig(\"deptIndex1\", Seq(\"deptId\"), Seq(\"deptName\"))\n",
							"val deptIndexConfig2: IndexConfig = IndexConfig(\"deptIndex2\", Seq(\"location\"), Seq(\"deptName\"))"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"Now, we create three indexes using our index configurations. For this purpose, we invoke \"createIndex\" command on our Hyperspace instance. This command requires an index configuration and the dataFrame containing rows to be indexed.\n",
							"Running below cell creates three indexes.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Create indexes from configurations\n",
							"import com.microsoft.hyperspace.index._\n",
							"\n",
							"hyperspace.createIndex(empDF, empIndexConfig)\n",
							"hyperspace.createIndex(deptDF, deptIndexConfig1)\n",
							"hyperspace.createIndex(deptDF, deptIndexConfig2)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"source": [
							"### List Indexes\n",
							"\n",
							"Below code shows how a user can list all available indexes in a Hyperspace instance. It uses the `indexes` API which returns information about existing indexes as a Spark™'s DataFrame so you can perform additional operations. For instance, you can invoke valid operations on this DataFrame for checking its content or analyzing it further (for example filtering specific indexes or grouping them according to some desired property). \n",
							"\n",
							"Below cell uses DataFrame's `show` action to fully print the rows and show details of our indexes in a tabular form. For each index, we can see all the information Hyperspace has stored about it in its metadata. \n",
							"\n",
							"You will immediately notice the following:\n",
							"  - `config.indexName`, `config.indexedColumns`, `config.includedColumns` are the fields that a user normally provides during index creation.\n",
							"  - `status.status` indicates if the index is being actively used by the Spark's optimizer.\n",
							"  - `dfSignature` is automatically generated by Hyperspace and is unique for each index. Hyperspace uses this signature internally to maintain the index and exploit it at query time. \n",
							"  \n",
							"In the output below, all three indexes should have \"ACTIVE\" as status and their name, indexed columns, and included columns should match with what we defined in index configurations above."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"hyperspace.indexes.show"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Delete Indexes\n",
							"A user can drop an existing index by using the `deleteIndex` API and providing the index name. \n",
							"\n",
							"Index deletion is a **soft-delete** operation i.e., only the index's status in the Hyperspace metadata from is changed from \"ACTIVE\" to \"DELETED\". This will exclude the deleted index from any future query optimization and Hyperspace no longer picks that index for any query. However, index files for a deleted index still remain available (since it is a soft-delete), so if you accidentally deleted the index, you could still restore it.\n",
							"\n",
							"The cell below deletes index with name \"deptIndex2\" and lists Hyperspace metadata after that. The output should be similar to above cell for \"List Indexes\" except for \"deptIndex2\" which now should have its status changed into \"DELETED\"."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"hyperspace.deleteIndex(\"deptIndex2\")\n",
							"\n",
							"hyperspace.indexes.show"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Restore Indexes\n",
							"A user can use the `restoreIndex` API to restore a deleted index. This will bring back the latest version of index into ACTIVE status and makes it usable again for queries. \n",
							"\n",
							"The cell below shows an example of `restoreIndex` API. We delete \"deptIndex1\" and restore it. The output shows \"deptIndex1\" first went into the \"DELETED\" status after invoking \"deleteIndex\" command and came back to the \"ACTIVE\" status after calling \"restoreIndex\"."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"hyperspace.deleteIndex(\"deptIndex1\")\n",
							"\n",
							"hyperspace.indexes.show\n",
							"\n",
							"hyperspace.restoreIndex(\"deptIndex1\")\n",
							"\n",
							"hyperspace.indexes.show"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Vacuum Indexes\n",
							"The user can perform a **hard-delete** i.e., fully remove files and the metadata entry for a deleted index using the `vacuumIndex` API. Once done, this action is **irreversible** as it physically deletes all the index files associated with the index.\n",
							"\n",
							"The cell below vacuums the \"deptIndex2\" index and shows Hyperspace metadata after vaccuming. You should see metadata entries for two indexes \"deptIndex1\" and \"empIndex\" both with \"ACTIVE\" status and no entry for \"deptIndex2\"."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"hyperspace.vacuumIndex(\"deptIndex2\")\n",
							"\n",
							"hyperspace.indexes.show"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enable/Disable Hyperspace\n",
							"\n",
							"Hyperspace provides APIs to enable or disable index usage with Spark™.\n",
							"\n",
							"  - By using `enableHyperspace` API, Hyperspace optimization rules become visible to the Apache Spark™ optimizer and it will exploit existing Hyperspace indexes to optimize user queries.\n",
							"  - By using `disableHyperspace` command, Hyperspace rules no longer apply during query optimization. You should note that disabling Hyperspace has no impact on created indexes as they remain intact.\n",
							"\n",
							"Below cell shows how you can use these commands to enable or disable hyperspace. The output simply shows a reference to the existing Spark™ session whose configuration is updated."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enable Hyperspace\n",
							"spark.enableHyperspace\n",
							"\n",
							"// Disable Hyperspace\n",
							"spark.disableHyperspace"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Index Usage\n",
							"In order to make Spark™ use Hyperspace indexes during query processing, the user needs to make sure that Hyperspace is enabled. \n",
							"\n",
							"The cell below enables Hyperspace and creates two DataFrames containing our sample data records which we use for running example queries. For each DataFrame, a few sample rows are printed."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enable Hyperspace\n",
							"spark.enableHyperspace\n",
							"\n",
							"val empDFrame: DataFrame = spark.read.parquet(empLocation)\n",
							"val deptDFrame: DataFrame = spark.read.parquet(deptLocation)\n",
							"\n",
							"empDFrame.show(5)\n",
							"deptDFrame.show(5)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "markdown",
						"source": [
							"# Hyperspace's Index Types\n",
							"\n",
							"Currently, Hyperspace can exploit indexes for two groups of queries: \n",
							"* Selection queries with lookup or range selection filtering predicates.\n",
							"* Join queries with an equality join predicate (i.e. Equi-joins)."
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Indexes for Accelerating Filters\n",
							"\n",
							"Our first example query does a lookup on department records (see below cell). In SQL, this query looks as follows:\n",
							"\n",
							"```sql\n",
							"SELECT deptName \n",
							"FROM departments\n",
							"WHERE deptId = 20\n",
							"```\n",
							"\n",
							"The output of running the cell below shows: \n",
							"- query result, which is a single department name.\n",
							"- query plan that Spark™ used to run the query. \n",
							"\n",
							"In the query plan, the \"FileScan\" operator at the bottom of the plan shows the datasource where the records were read from. The location of this file indicates the path to the latest version of the \"deptIndex1\" index. This shows  that according to the query and using Hyperspace optimization rules, Spark™ decided to exploit the proper index at runtime.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter with equality predicate\n",
							"\n",
							"val eqFilter: DataFrame = deptDFrame.filter(\"deptId = 20\").select(\"deptName\")\n",
							"eqFilter.show()\n",
							"\n",
							"hyperspace.explain(eqFilter)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "markdown",
						"source": [
							"Our second example is a range selection query on department records. In SQL, this query looks as follows:\n",
							"\n",
							"```sql\n",
							"SELECT deptName \n",
							"FROM departments\n",
							"WHERE deptId > 20\n",
							"```\n",
							"Similar to our first example, the output of the cell below shows the query results (names of two departments) and the query plan. The location of data file in the FileScan operator shows that 'deptIndex1\" was used to run the query.   \n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter with range selection predicate\n",
							"\n",
							"val rangeFilter: DataFrame = deptDFrame.filter(\"deptId > 20\").select(\"deptName\")\n",
							"rangeFilter.show()\n",
							"\n",
							"hyperspace.explain(rangeFilter)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "markdown",
						"source": [
							"Our third example is a query joining department and employee records on the department id. The equivalent SQL statement is shown below:\n",
							"\n",
							"```sql\n",
							"SELECT employees.deptId, empName, departments.deptId, deptName\n",
							"FROM   employees, departments \n",
							"WHERE  employees.deptId = departments.deptId\n",
							"```\n",
							"\n",
							"The output of running the cell below shows the query results which are the names of 14 employees and the name of department each employee works in. The query plan is also included in the output. Notice how the file locations for two FileScan operators shows that Spark™ used \"empIndex\" and \"deptIndex1\" indexes to run the query.   \n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Join\n",
							"\n",
							"val eqJoin: DataFrame =\n",
							"      empDFrame.\n",
							"      join(deptDFrame, empDFrame(\"deptId\") === deptDFrame(\"deptId\")).\n",
							"      select(empDFrame(\"empName\"), deptDFrame(\"deptName\"))\n",
							"\n",
							"eqJoin.show()\n",
							"\n",
							"hyperspace.explain(eqJoin)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Support for SQL Semantics\n",
							"\n",
							"The index usage is transparent to whether the user uses DataFrame API or Spark™ SQL. The following example shows the same join example as before but using Spark SQL, showing the use of indexes if applicable."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"empDFrame.createOrReplaceTempView(\"EMP\")\n",
							"deptDFrame.createOrReplaceTempView(\"DEPT\")\n",
							"\n",
							"val joinQuery = spark.sql(\"SELECT EMP.empName, DEPT.deptName FROM EMP, DEPT WHERE EMP.deptId = DEPT.deptId\")\n",
							"\n",
							"joinQuery.show()\n",
							"hyperspace.explain(joinQuery)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Explain API\n",
							"\n",
							"So far, you might have observed we have been using the explain API provided by Hyperspace. The `explain` API from Hyperspace is very similar to Spark's `df.explain` API but allows users to compare their original plan vs the updated index-dependent plan before running their query. You have an option to choose from html/plaintext/console mode to display the command output. \n",
							"\n",
							"The following cell shows an example with HTML. The highlighted section represents the difference between original and updated plans along with the indexes being used."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.conf.set(\"spark.hyperspace.explain.displayMode\", \"html\")\n",
							"hyperspace.explain(eqJoin)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Refresh Indexes\n",
							"If the original data on which an index was created changes, then the index will no longer capture the latest state of data and hence will not be used by Hyperspace to provide any acceleration. The user can refresh such a stale index using the `refreshIndex` API. This causes the index to be fully rebuilt and updates it according to the latest data records.\n",
							"    \n",
							"    Spoiler alert: if you are worried about fully rebuilding your index every time your data changes, don't worry! We will show you how to *incrementally refresh* your index in subsequent cells below.\n",
							"\n",
							"The two cells below show an example for this scenario:\n",
							"- First cell adds two more departments to the original departments data. It reads and prints list of departments to verify new departments are added correctly. The output shows 6 departments in total: four old ones and two new. Invoking \"refreshIndex\" updates \"deptIndex1\" so index captures new departments.\n",
							"- Second cell runs our range selection query example. The results should now contain four departments: two are the ones, seen before when we ran the query above, and two are the new departments we just added."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val extraDepartments = Seq(\n",
							"      (50, \"Inovation\", \"Seattle\"),\n",
							"\t  (60, \"Human Resources\", \"San Francisco\"))\n",
							"\t  \n",
							"val extraDeptData: DataFrame = extraDepartments.toDF(\"deptId\", \"deptName\", \"location\")\n",
							"extraDeptData.write.mode(\"Append\").parquet(deptLocation)\n",
							"\n",
							"val deptDFrameUpdated: DataFrame = spark.read.parquet(deptLocation)\n",
							"\n",
							"deptDFrameUpdated.show(10)\n",
							"\n",
							"hyperspace.refreshIndex(\"deptIndex1\")"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"source": [
							"val newRangeFilter: DataFrame = deptDFrameUpdated.filter(\"deptId > 20\").select(\"deptName\")\n",
							"newRangeFilter.show()\n",
							"\n",
							"hyperspace.explain(newRangeFilter)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Hybrid Scan for Mutable Datasets\n",
							"\n",
							"Often times, if your underlying source data had some new files appended or existing files deleted, your index will get stale and Hyperspace decides not to use it. However, there are times where you just want to use the index without having to refresh it everytime. There could be multiple reasons for doing so:\n",
							"\n",
							"  1. You do not want to continuosly refresh your index but instead want to do it periodically since you understand your workloads the best.  \n",
							"  2. You added/removed only a few files and do not want to wait for yet another refresh job to finish. \n",
							"\n",
							"To allow you to still use a stale index, Hyperspace introduces **Hybrid Scan**, a novel technique that allows users to utilize outdated or stale indexes (e.g., the underlying source data had some new files appended or existing files deleted), without refreshing indexes. \n",
							"\n",
							"To achieve this, when you set the appropriate configuration to enable Hybrid Scan, Hyperspace modifies the query plan to leverage the changes as following:\n",
							"- Appended files can be merged to index data by using **`Union` or `BucketUnion` (for join)**. Shuffling appended data can also be applied before merging, if needed.\n",
							"- Deleted files can be handled by injecting `Filter-NOT-IN` condition on **lineage column** of index data, so that the indexed rows from the deleted files can be excluded at query time. \n",
							"\n",
							"You can check the transformation of the query plan in below examples.\n",
							"\n",
							"    Note: Hybrid scan is only supported for non-partitioned data. Support for partitioned data is currently being worked upon."
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Hybrid Scan for appended files - non-partitioned data\n",
							"\n",
							"Non-partitioned data is used in below example. In this example, we expect Join index can be used for the query and `BucketUnion` is introduced for appended files."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// GENERATE TEST DATA\n",
							"\n",
							"val testData = Seq(\n",
							"    (\"orange\", 3, \"2020-10-01\"),\n",
							"    (\"banana\", 1, \"2020-10-01\"),\n",
							"    (\"carrot\", 5, \"2020-10-02\"),\n",
							"    (\"beetroot\", 12, \"2020-10-02\"),\n",
							"    (\"orange\", 2, \"2020-10-03\"),\n",
							"    (\"banana\", 11, \"2020-10-03\"),\n",
							"    (\"carrot\", 3, \"2020-10-03\"),\n",
							"    (\"beetroot\", 2, \"2020-10-04\"),\n",
							"    (\"cucumber\", 7, \"2020-10-05\"),\n",
							"    (\"pepper\", 20, \"2020-10-06\")\n",
							"    ).toDF(\"name\", \"qty\", \"date\")\n",
							"\n",
							"val testDataLocation = s\"$dataPath/productTable\"\n",
							"\n",
							"testData.write.mode(\"overwrite\").parquet(testDataLocation)\n",
							"val testDF = spark.read.parquet(testDataLocation)"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"source": [
							"// CREATE INDEX\n",
							"hyperspace.createIndex(testDF, IndexConfig(\"productIndex2\", Seq(\"name\"), Seq(\"date\", \"qty\")))\n",
							"\n",
							"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", -1)\n",
							"val filter1 = testDF.filter(\"name = 'banana'\")\n",
							"val filter2 = testDF.filter(\"qty > 10\")\n",
							"val query = filter1.join(filter2, \"name\")\n",
							"\n",
							"// Check Join index rule is applied properly.\n",
							"hyperspace.explain(query)(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"source": [
							"// Append new files.\n",
							"val appendData = Seq(\n",
							"    (\"orange\", 13, \"2020-11-01\"),\n",
							"    (\"banana\", 5, \"2020-11-01\")).toDF(\"name\", \"qty\", \"date\")\n",
							"appendData.write.mode(\"append\").parquet(testDataLocation)"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "markdown",
						"source": [
							"Hybrid scan is disabled by default. Therefore, you will see that since we appended new data, Hyperspace will decide NOT to use the index.\n",
							"\n",
							"In the output, you will see no plan differences (hence no highlighting)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Hybrid Scan configs are false by default.\n",
							"spark.conf.set(\"spark.hyperspace.index.hybridscan.enabled\", \"false\")\n",
							"spark.conf.set(\"spark.hyperspace.index.hybridscan.delete.enabled\", \"false\")\n",
							"\n",
							"val testDFWithAppend = spark.read.parquet(testDataLocation)\n",
							"val filter1 = testDFWithAppend.filter(\"name = 'banana'\")\n",
							"val filter2 = testDFWithAppend.filter(\"qty > 10\")\n",
							"val query = filter1.join(filter2, \"name\")\n",
							"hyperspace.explain(query)(displayHTML(_))\n",
							"query.show"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Enable Hybrid Scan\n",
							"\n",
							"In plan with indexes, you can see\n",
							"`Exchange hashpartitioning` required only for appended files so that we could still utilize the \"shuffled\" index data with appended files. `BucketUnion` is used to merge \"shuffled\" appended files with the index data."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enable Hybrid Scan config. \"delete\" config is not necessary since we only appended data.\n",
							"spark.conf.set(\"spark.hyperspace.index.hybridscan.enabled\", \"true\")\n",
							"// spark.conf.set(\"spark.hyperspace.index.hybridscan.delete.enabled\", \"true\")\n",
							"spark.enableHyperspace\n",
							"// Need to redefine query to recalculate the query plan.\n",
							"val query = filter1.join(filter2, \"name\")\n",
							"hyperspace.explain(query)(displayHTML(_))\n",
							"query.show"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Incremental Index Refresh\n",
							"When you ready to update your indexes but do not want to rebuild your entire index, Hyperspace supports updating indexes in an incremental manner using `hs.refreshIndex(\"name\", \"incremental\")` API. This will allow eliminate the need for a full rebuild of index from scratch, utilizing previously created index files as well as updating indexes on only the newly added data.\n",
							"\n",
							"Of course, please be sure to use the complementary `optimizeIndex` API (shown below) periodically to make sure you do not see performance regressions. We recommend calling `optimize` at least once for every 10 times you call `refreshIndex(..., \"incremental\")`, assuming the data you added/removed is < 10% of the original dataset. For instance, if your original dataset is 100 GB, and you've added/removed data in increments/decrements of 1 GB, you can call `refreshIndex` 10 times before calling `optimizeIndex`. Please note that this example is simply used for illustration and you have to adapt this for your workloads.\n",
							"\n",
							"In the example below, notice the addition of a `Sort` node in the query plan when indexes are used. This is because partial indexes are created on the appended data files, causing Spark to introduce a `Sort`. Please also note that `Shuffle` i.e. `Exchange` is still eliminated from the plan, giving you the appropriate acceleration."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"def query(): DataFrame = {\n",
							"    val testDFWithAppend = spark.read.parquet(testDataLocation)\n",
							"    val filter1 = testDFWithAppend.filter(\"name = 'banana'\")\n",
							"    val filter2 = testDFWithAppend.filter(\"qty > 10\")\n",
							"    filter1.join(filter2, \"name\")\n",
							"}\n",
							"\n",
							"hyperspace.refreshIndex(\"productIndex2\", \"incremental\")\n",
							"\n",
							"hyperspace.explain(query())(displayHTML(_))\n",
							"query().show"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Optimize Index layout\n",
							"After calling incremental refreshes multiple times on newly appended data (e.g. if the user writes to data in small batches or in case of streaming scenarios), the number of index files tend to become large affecting the performance of the index (large number of small files problem). Hyperspace provides `hyperspace.optimizeIndex(\"indexName\")` API to optimize the index layout and reduce the large files problem.\n",
							"\n",
							"In the plan below, notice that Hyperspace has removed the additional `Sort` node in the query plan. Optimize can help avoiding sorting for any index bucket which contains only one file. However, this will only be true if ALL the index buckets have at most 1 file per bucket, after `optimizeIndex`."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Append some more data and call refresh again.\n",
							"val appendData = Seq(\n",
							"    (\"orange\", 13, \"2020-11-01\"),\n",
							"    (\"banana\", 5, \"2020-11-01\")).toDF(\"name\", \"qty\", \"date\")\n",
							"appendData.write.mode(\"append\").parquet(testDataLocation)\n",
							"\n",
							"hyperspace.refreshIndex(\"productIndex2\", \"incremental\")"
						],
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "code",
						"source": [
							"// Call optimize. Ensure that Sort is removed after optimization (This is possible here because after optimize, in this case, every bucket contains only 1 file.).\n",
							"hyperspace.optimizeIndex(\"productIndex2\")\n",
							"\n",
							"hyperspace.explain(query())(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "markdown",
						"source": [
							"#### Optimize modes\n",
							"\n",
							"The default mode for optimization is \"quick\" mode where files smaller than a predefined threshold are picked for optmization. To maximize the effect of optimization, Hyperspace allows another optimize mode \"full\" as shown below. This mode picks ALL index files for optimization irrespective of their file size and creates the best possible layout of the index. This is also slower than the default optimize mode because more data is being processed here."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"hyperspace.optimizeIndex(\"productIndex2\", \"full\")\n",
							"\n",
							"hyperspace.explain(query())(displayHTML(_))"
						],
						"outputs": [],
						"execution_count": 29
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Clean Up\n",
							"To make this notebook self-contained and not leave any dangling data, we have some small clean-up code below. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"mssparkutils.fs.rm(dataPath, true)\n",
							"mssparkutils.fs.rm(indexLocation, true)"
						],
						"outputs": [],
						"execution_count": 30
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NYC_holidays_Scala')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('NYC_holidays_Scala_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Using Azure Open Datasets in Synapse - Enrich NYC Green Taxi Data with Holiday and Weather\n",
							"\n",
							"Synapse has [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/) package pre-installed. This notebook provides examples of how to enrich NYC Green Taxi Data with Holiday and Weather with focusing on :\n",
							"- read Azure Open Dataset\n",
							"- manipulate the data to prepare for further analysis, including column projection, filtering, grouping and joins etc. \n",
							"- create a Spark table to be used in other notebooks for modeling training"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data loading \n",
							"Let's first load the [NYC green taxi trip records](https://azure.microsoft.com/en-us/services/open-datasets/catalog/nyc-taxi-limousine-commission-green-taxi-trip-records/). The Open Datasets package contains a class representing each data source (NycTlcGreen for example) to easily filter date parameters before downloading."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Load nyc green taxi trip records from azure open dataset\n",
							"val blob_account_name = \"azureopendatastorage\"\n",
							"\n",
							"val nyc_blob_container_name = \"nyctlc\"\n",
							"val nyc_blob_relative_path = \"green\"\n",
							"val nyc_blob_sas_token = \"\"\n",
							"\n",
							"val nyc_wasbs_path = f\"wasbs://$nyc_blob_container_name@$blob_account_name.blob.core.windows.net/$nyc_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$nyc_blob_container_name.$blob_account_name.blob.core.windows.net\",nyc_blob_sas_token)\n",
							"\n",
							"val nyc_tlc = spark.read.parquet(nyc_wasbs_path)\n",
							"\n",
							"//nyc_tlc.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter data by time range\n",
							"import java.sql.Timestamp\n",
							"import org.joda.time.DateTime\n",
							"\n",
							"val end_date = new Timestamp(DateTime.parse(\"2018-06-06\").getMillis)\n",
							"val start_date = new Timestamp(DateTime.parse(\"2018-05-01\").getMillis)\n",
							"\n",
							"val nyc_tlc_df = nyc_tlc.filter((nyc_tlc(\"lpepPickupDatetime\") >= start_date) && (nyc_tlc(\"lpepPickupDatetime\") <= end_date)) \n",
							"nyc_tlc_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Now that the initial data is loaded. Let's do some projection on the data to \n",
							"- create new columns for the month number, day of month, day of week, and hour of day. These info is going to be used in the training model to factor in time-based seasonality.\n",
							"- add a static feature for the country code to join holiday data. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Extract month, day of month, and day of week from pickup datetime and add a static column for the country code to join holiday data. \n",
							"import org.apache.spark.sql.functions._\n",
							"\n",
							"val nyc_tlc_df_expand = (\n",
							"                        nyc_tlc_df.withColumn(\"datetime\", to_date(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"month_num\",month(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"day_of_month\",dayofmonth(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"day_of_week\",dayofweek(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"hour_of_day\",hour(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"country_code\",lit(\"US\"))\n",
							"                        )"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Display 5 rows\n",
							"// nyc_tlc_df_expand.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Remove some of the columns that won't need for modeling or additional feature building.\n",
							"\n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Remove unused columns from nyc green taxi data\n",
							"val nyc_tlc_df_clean = nyc_tlc_df_expand.drop(\n",
							"                    \"lpepDropoffDatetime\", \"puLocationId\", \"doLocationId\", \"pickupLongitude\", \n",
							"                     \"pickupLatitude\", \"dropoffLongitude\",\"dropoffLatitude\" ,\"rateCodeID\", \n",
							"                     \"storeAndFwdFlag\",\"paymentType\", \"fareAmount\", \"extra\", \"mtaTax\",\n",
							"                     \"improvementSurcharge\", \"tollsAmount\", \"ehailFee\", \"tripType\" )"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Display 5 rows\n",
							"nyc_tlc_df_clean.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enrich with holiday data\n",
							"Now that we have taxi data downloaded and roughly prepared, add in holiday data as additional features. Holiday-specific features will assist model accuracy, as major holidays are times where taxi demand increases dramatically and supply becomes limited. \n",
							"\n",
							"Let's load the [public holidays](https://azure.microsoft.com/en-us/services/open-datasets/catalog/public-holidays/) from Azure Open datasets.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Load public holidays data from azure open dataset\n",
							"val hol_blob_container_name = \"holidaydatacontainer\"\n",
							"val hol_blob_relative_path = \"Processed\"\n",
							"val hol_blob_sas_token = \"\"\n",
							"\n",
							"val hol_wasbs_path = f\"wasbs://$hol_blob_container_name@$blob_account_name.blob.core.windows.net/$hol_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$hol_blob_container_name.$blob_account_name.blob.core.windows.net\",hol_blob_sas_token)\n",
							"\n",
							"val hol_raw = spark.read.parquet(hol_wasbs_path)\n",
							"\n",
							"// Filter data by time range\n",
							"val hol_df = hol_raw.filter((hol_raw(\"date\") >= start_date) && (hol_raw(\"date\") <= end_date))\n",
							"\n",
							"// Display 5 rows\n",
							"// hol_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Rename the countryRegionCode and date columns to match the respective field names from the taxi data, and also normalize the time so it can be used as a key. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val hol_df_clean = (\n",
							"                hol_df.withColumnRenamed(\"countryRegionCode\",\"country_code\")\n",
							"                .withColumn(\"datetime\",to_date(col(\"date\")))\n",
							"                )\n",
							"\n",
							"hol_df_clean.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next, join the holiday data with the taxi data by performing a left-join. This will preserve all records from taxi data, but add in holiday data where it exists for the corresponding datetime and country_code, which in this case is always \"US\". Preview the data to verify that they were merged correctly."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// enrich taxi data with holiday data\n",
							"val nyc_taxi_holiday_df = nyc_tlc_df_clean.join(hol_df_clean, Seq(\"datetime\", \"country_code\") , \"left\")\n",
							"\n",
							"nyc_taxi_holiday_df.show(5,truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Create a temp table and filter out non empty holiday rows\n",
							"\n",
							"nyc_taxi_holiday_df.createOrReplaceTempView(\"nyc_taxi_holiday_df\")\n",
							"val result = spark.sql(\"SELECT * from nyc_taxi_holiday_df WHERE holidayName is NOT NULL \")\n",
							"result.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enrich with weather data¶\n",
							"\n",
							"Now we append NOAA surface weather data to the taxi and holiday data. Use a similar approach to fetch the [NOAA weather history data](https://azure.microsoft.com/en-us/services/open-datasets/catalog/noaa-integrated-surface-data/) from Azure Open Datasets. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Load weather data from azure open dataset\n",
							"val weather_blob_container_name = \"isdweatherdatacontainer\"\n",
							"val weather_blob_relative_path = \"ISDWeather/\"\n",
							"val weather_blob_sas_token = \"\"\n",
							"\n",
							"val weather_wasbs_path = f\"wasbs://$weather_blob_container_name@$blob_account_name.blob.core.windows.net/$weather_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$weather_blob_container_name.$blob_account_name.blob.core.windows.net\",hol_blob_sas_token)\n",
							"\n",
							"val isd = spark.read.parquet(weather_wasbs_path)\n",
							"\n",
							"// Display 5 rows\n",
							"// isd.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter data by time range\n",
							"val isd_df = isd.filter((isd(\"datetime\") >= start_date) && (isd(\"datetime\") <= end_date))\n",
							"\n",
							"// Display 5 rows\n",
							"isd_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter out weather info for new york city, remove the recording with null temperature \n",
							"\n",
							"val weather_df = (\n",
							"                isd_df.filter(isd_df(\"latitude\") >= \"40.53\")\n",
							"                        .filter(isd_df(\"latitude\") <= \"40.88\")\n",
							"                        .filter(isd_df(\"longitude\") >= \"-74.09\")\n",
							"                        .filter(isd_df(\"longitude\") <= \"-73.72\")\n",
							"                        .filter(isd_df(\"temperature\").isNotNull)\n",
							"                        .withColumnRenamed(\"datetime\",\"datetime_full\")\n",
							"                        )"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"// Remove unused columns\n",
							"val weather_df_clean = weather_df.drop(\"usaf\", \"wban\", \"longitude\", \"latitude\").withColumn(\"datetime\", to_date(col(\"datetime_full\")))\n",
							"\n",
							"//weather_df_clean.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next group the weather data so that you have daily aggregated weather values. \n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enrich weather data with aggregation statistics\n",
							"\n",
							"val weather_df_grouped = (\n",
							"                        weather_df_clean.groupBy('datetime).\n",
							"                        agg(\n",
							"                            mean('snowDepth) as \"avg_snowDepth\",\n",
							"                            max('precipTime) as \"max_precipTime\",\n",
							"                            mean('temperature) as \"avg_temperature\",\n",
							"                            max('precipDepth) as \"max_precipDepth\"\n",
							"                            )\n",
							"                        )\n",
							"\n",
							"weather_df_grouped.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"Merge the taxi and holiday data you prepared with the new weather data. This time you only need the datetime key, and again perform a left-join of the data. Run the describe() function on the new dataframe to see summary statistics for each field."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enrich taxi data with weather\n",
							"val nyc_taxi_holiday_weather_df = nyc_taxi_holiday_df.join(weather_df_grouped, Seq(\"datetime\") ,\"left\")\n",
							"nyc_taxi_holiday_weather_df.cache()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"nyc_taxi_holiday_weather_df.show(5,truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"// Run the describe() function on the new dataframe to see summary statistics for each field.\n",
							"display(nyc_taxi_holiday_weather_df.describe())"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"nyc_taxi_holiday_weather_df.count"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"The summary statistics shows that the totalAmount field has negative values, which don't make sense in the context.\n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Remove invalid rows with less than 0 taxi fare or tip\n",
							"val final_df = (\n",
							"            nyc_taxi_holiday_weather_df.\n",
							"            filter(nyc_taxi_holiday_weather_df(\"tipAmount\") > 0).\n",
							"            filter(nyc_taxi_holiday_weather_df(\"totalAmount\") > 0)\n",
							"            )"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Cleaning up the existing Database\n",
							"\n",
							"First we need to drop the tables since Spark requires that a database is empty before we can drop the Database.\n",
							"\n",
							"Then we recreate the database and set the default database context to it."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DROP TABLE IF EXISTS NYCTaxi.nyc_taxi_holiday_weather\"); "
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DROP DATABASE IF EXISTS NYCTaxi\"); \n",
							"spark.sql(\"CREATE DATABASE NYCTaxi\"); \n",
							"spark.sql(\"USE NYCTaxi\");"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Creating a new table\n",
							"We create a nyc_taxi_holiday_weather table from the nyc_taxi_holiday_weather dataframe.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"final_df.write.saveAsTable(\"nyc_taxi_holiday_weather\");\n",
							"val final_results = spark.sql(\"SELECT COUNT(*) FROM nyc_taxi_holiday_weather\");\n",
							"final_results.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ScalaSample1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('ScalaSample1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"val hol_blob_account_name = \"azureopendatastorage\"\n",
							"val hol_blob_container_name = \"holidaydatacontainer\"\n",
							"val hol_blob_relative_path = \"Processed\"\n",
							"val hol_blob_sas_token = \"\"\n",
							"\n",
							"val hol_wasbs_path = f\"wasbs://$hol_blob_container_name@$hol_blob_account_name.blob.core.windows.net/$hol_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$hol_blob_container_name.$hol_blob_account_name.blob.core.windows.net\",hol_blob_sas_token)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"val hol_df = spark.read.parquet(hol_wasbs_path) \n",
							"hol_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"val account_name = \"\" // replace with your blob name\n",
							"val container_name = \"\" //replace with your container name\n",
							"val relative_path = \"\" //replace with your relative folder path\n",
							"\n",
							"val adls_path = f\"abfss://$container_name@$account_name.dfs.core.windows.net/$relative_path\""
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"val parquet_path = adls_path + \"holiday.parquet\"\n",
							"val json_path = adls_path + \"holiday.json\"\n",
							"val csv_path = adls_path + \"holiday.csv\""
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"import org.apache.spark.sql.SaveMode\n",
							"\n",
							"hol_df.write.mode(SaveMode.Overwrite).parquet(parquet_path)\n",
							"hol_df.write.mode(SaveMode.Overwrite).json(json_path)\n",
							"hol_df.write.mode(SaveMode.Overwrite).option(\"header\", \"true\").csv(csv_path)"
						],
						"outputs": [],
						"execution_count": 8
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SparkBlobSize')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('SparkBlobSize_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"Name"
									],
									"values": [
										"Name"
									],
									"yLabel": "Name",
									"xLabel": "Name",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"Name\":{\"adventureworkslt/2020\":1,\"adventureworkslt/2020/12\":1,\"adventureworkslt/2020/12/29\":1,\"adventureworkslt/2020/12/29/SalesLT_Address_20201229.parquet\":1,\"adventureworkslt/2020/12/29/SalesLT_CustomerAddress_20201229.parquet\":1,\"adventureworkslt/2020/12/29/SalesLT_Customer_20201229.parquet\":1,\"adventureworkslt/2020/12/29/SalesLT_ProductCategory_20201229.parquet\":1,\"adventureworkslt/2020/12/29/SalesLT_ProductDescription_20201229.parquet\":1,\"adventureworkslt/2020/12/29/SalesLT_ProductModelProductDescription_20201229.parquet\":1,\"adventureworkslt/2020/12/29/SalesLT_ProductModel_20201229.parquet\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\n",
							"df = spark.read.load('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/2021/06/17/20-28-55/DefaultRule-AllBlobs.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							", header=True\n",
							")\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"df.printSchema()"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.types import IntegerType\n",
							"data_df = df.withColumn(\"Content-LengthInt\", df[\"Content-Length\"].cast(IntegerType()))"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"data_df.printSchema()"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"source": [
							"import pyspark.sql.functions\n",
							"\n",
							"split_col = pyspark.sql.functions.split(df['Name'], '/')\n",
							"data_df = data_df.withColumn('Container', split_col.getItem(0))"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"Container"
									],
									"values": [
										"sum(Content-LengthInt)"
									],
									"yLabel": "sum(Content-LengthInt)",
									"xLabel": "Container",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"sum(Content-LengthInt)\":{\"adventureworkslt\":803450,\"anonymize\":249109,\"coviddata\":8273180,\"coviddata19\":3219878,\"covidoutput\":1748419,\"curateddata\":1468,\"eventhubdata\":3800,\"nyctaxi\":118745754405,\"nyctaxiyellow\":0,\"rawdata\":238288026,\"synapseroot\":61150937829,\"taximodel\":298176,\"tripsdatascore\":175856,\"uspopulation\":16799469}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(data_df.groupBy(\"Container\").sum(\"Content-LengthInt\"))"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SparkMLLib')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('SparkMLLib_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 6,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "6",
						"spark.dynamicAllocation.maxExecutors": "6"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\n",
							"from datetime import datetime\n",
							"from dateutil import parser\n",
							"from pyspark.sql.functions import unix_timestamp, date_format, col, when\n",
							"from pyspark.ml import Pipeline\n",
							"from pyspark.ml import PipelineModel\n",
							"from pyspark.ml.feature import RFormula\n",
							"from pyspark.ml.feature import OneHotEncoder, StringIndexer, VectorIndexer\n",
							"from pyspark.ml.classification import LogisticRegression\n",
							"from pyspark.mllib.evaluation import BinaryClassificationMetrics\n",
							"from pyspark.ml.evaluation import BinaryClassificationEvaluator"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.opendatasets import NycTlcYellow\n",
							"\n",
							"end_date = parser.parse('2018-06-06')\n",
							"start_date = parser.parse('2018-05-01')\n",
							"nyc_tlc = NycTlcYellow(start_date=start_date, end_date=end_date)\n",
							"filtered_df = nyc_tlc.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"# To make development easier, faster and less expensive down sample for now\n",
							"sampled_taxi_df = filtered_df.sample(True, 0.001, seed=1234)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"{\\\"tpepPickupDateTime\\\":{\\\"1\\\":0,\\\"2\\\":0}}\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"#sampled_taxi_df.show(5)\n",
							"display(sampled_taxi_df)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"sampled_taxi_df.createOrReplaceTempView(\"nytaxi\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"taxi_df = sampled_taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'rateCodeId', 'passengerCount'\\\n",
							"                                , 'tripDistance', 'tpepPickupDateTime', 'tpepDropoffDateTime'\\\n",
							"                                , date_format('tpepPickupDateTime', 'hh').alias('pickupHour')\\\n",
							"                                , date_format('tpepPickupDateTime', 'EEEE').alias('weekdayString')\\\n",
							"                                , (unix_timestamp(col('tpepDropoffDateTime')) - unix_timestamp(col('tpepPickupDateTime'))).alias('tripTimeSecs')\\\n",
							"                                , (when(col('tipAmount') > 0, 1).otherwise(0)).alias('tipped')\n",
							"                                )\\\n",
							"                        .filter((sampled_taxi_df.passengerCount > 0) & (sampled_taxi_df.passengerCount < 8)\\\n",
							"                                & (sampled_taxi_df.tipAmount >= 0) & (sampled_taxi_df.tipAmount <= 25)\\\n",
							"                                & (sampled_taxi_df.fareAmount >= 1) & (sampled_taxi_df.fareAmount <= 250)\\\n",
							"                                & (sampled_taxi_df.tipAmount < sampled_taxi_df.fareAmount)\\\n",
							"                                & (sampled_taxi_df.tripDistance > 0) & (sampled_taxi_df.tripDistance <= 100)\\\n",
							"                                & (sampled_taxi_df.rateCodeId <= 5)\n",
							"                                & (sampled_taxi_df.paymentType.isin({\"1\", \"2\"}))\n",
							"                                )"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"taxi_featurised_df = taxi_df.select('totalAmount', 'fareAmount', 'tipAmount', 'paymentType', 'passengerCount'\\\n",
							"                                                , 'tripDistance', 'weekdayString', 'pickupHour','tripTimeSecs','tipped'\\\n",
							"                                                , when((taxi_df.pickupHour <= 6) | (taxi_df.pickupHour >= 20),\"Night\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 7) & (taxi_df.pickupHour <= 10), \"AMRush\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 11) & (taxi_df.pickupHour <= 15), \"Afternoon\")\\\n",
							"                                                .when((taxi_df.pickupHour >= 16) & (taxi_df.pickupHour <= 19), \"PMRush\")\\\n",
							"                                                .otherwise(0).alias('trafficTimeBins')\n",
							"                                              )\\\n",
							"                                       .filter((taxi_df.tripTimeSecs >= 30) & (taxi_df.tripTimeSecs <= 7200))"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"# Since the sample uses an algorithm that only works with numeric features, convert them so they can be consumed\n",
							"sI1 = StringIndexer(inputCol=\"trafficTimeBins\", outputCol=\"trafficTimeBinsIndex\")\n",
							"en1 = OneHotEncoder(dropLast=False, inputCol=\"trafficTimeBinsIndex\", outputCol=\"trafficTimeBinsVec\")\n",
							"sI2 = StringIndexer(inputCol=\"weekdayString\", outputCol=\"weekdayIndex\")\n",
							"en2 = OneHotEncoder(dropLast=False, inputCol=\"weekdayIndex\", outputCol=\"weekdayVec\")\n",
							"\n",
							"# Create a new dataframe that has had the encodings applied\n",
							"encoded_final_df = Pipeline(stages=[sI1, en1, sI2, en2]).fit(taxi_featurised_df).transform(taxi_featurised_df)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"#Decide on the split between training and testing data from the dataframe\n",
							"trainingFraction = 0.7\n",
							"testingFraction = (1-trainingFraction)\n",
							"seed = 1234\n",
							"\n",
							"# Split the dataframe into test and training dataframes\n",
							"train_data_df, test_data_df = encoded_final_df.randomSplit([trainingFraction, testingFraction], seed=seed)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"## Create a new LR object for the model\n",
							"logReg = LogisticRegression(maxIter=10, regParam=0.3, labelCol = 'tipped')\n",
							"\n",
							"## The formula for the model\n",
							"classFormula = RFormula(formula=\"tipped ~ pickupHour + weekdayVec + passengerCount + tripTimeSecs + tripDistance + fareAmount + paymentType+ trafficTimeBinsVec\")\n",
							"\n",
							"## Undertake training and create an LR model\n",
							"lrModel = Pipeline(stages=[classFormula, logReg]).fit(train_data_df)\n",
							"\n",
							"## Saving the model is optional but its another form of inter session cache\n",
							"datestamp = datetime.now().strftime('%m-%d-%Y-%s')\n",
							"fileName = \"lrModel_\" + datestamp\n",
							"logRegDirfilename = fileName\n",
							"lrModel.save(logRegDirfilename)\n",
							"\n",
							"## Predict tip 1/0 (yes/no) on the test dataset, evaluation using AUROC\n",
							"predictions = lrModel.transform(test_data_df)\n",
							"predictionAndLabels = predictions.select(\"label\",\"prediction\").rdd\n",
							"metrics = BinaryClassificationMetrics(predictionAndLabels)\n",
							"print(\"Area under ROC = %s\" % metrics.areaUnderROC)"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"## Plot the ROC curve, no need for pandas as this uses the modelSummary object\n",
							"modelSummary = lrModel.stages[-1].summary\n",
							"\n",
							"plt.plot([0, 1], [0, 1], 'r--')\n",
							"plt.plot(modelSummary.roc.select('FPR').collect(),\n",
							"         modelSummary.roc.select('TPR').collect())\n",
							"plt.xlabel('False Positive Rate')\n",
							"plt.ylabel('True Positive Rate')\n",
							"plt.show()"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Synapse_delta')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Synapse_delta_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Using Azure Open Datasets in Synapse - Enrich NYC Green Taxi Data with Holiday and Weather\n",
							"\n",
							"Synapse has [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/) package pre-installed. This notebook provides examples of how to enrich NYC Green Taxi Data with Holiday and Weather with focusing on :\n",
							"- read Azure Open Dataset\n",
							"- manipulate the data to prepare for further analysis, including column projection, filtering, grouping and joins etc. \n",
							"- create a Spark table to be used in other notebooks for modeling training"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data loading \n",
							"Let's first load the [NYC green taxi trip records](https://azure.microsoft.com/en-us/services/open-datasets/catalog/nyc-taxi-limousine-commission-green-taxi-trip-records/). The Open Datasets package contains a class representing each data source (NycTlcGreen for example) to easily filter date parameters before downloading."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.opendatasets import NycTlcGreen\n",
							"\n",
							"from datetime import datetime\n",
							"from dateutil import parser\n",
							"end_date = parser.parse('2018-06-06')\n",
							"start_date = parser.parse('2018-05-01')\n",
							"\n",
							"nyc_tlc = NycTlcGreen(start_date=start_date, end_date=end_date)\n",
							"nyc_tlc_df = nyc_tlc.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"# Display 5 rows\n",
							"\n",
							"nyc_tlc_df.show(5, truncate = False)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"Now that the initial data is loaded. Let's do some projection on the data to \n",
							"- create new columns for the month number, day of month, day of week, and hour of day. These info is going to be used in the training model to factor in time-based seasonality.\n",
							"- add a static feature for the country code to join holiday data. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Extract month, day of month, and day of week from pickup datetime and add a static column for the country code to join holiday data. \n",
							"\n",
							"import pyspark.sql.functions as f\n",
							"\n",
							"nyc_tlc_df_expand = nyc_tlc_df.withColumn('datetime',f.to_date('lpepPickupDatetime'))\\\n",
							"                .withColumn('month_num',f.month(nyc_tlc_df.lpepPickupDatetime))\\\n",
							"                .withColumn('day_of_month',f.dayofmonth(nyc_tlc_df.lpepPickupDatetime))\\\n",
							"                .withColumn('day_of_week',f.dayofweek(nyc_tlc_df.lpepPickupDatetime))\\\n",
							"                .withColumn('hour_of_day',f.hour(nyc_tlc_df.lpepPickupDatetime))\\\n",
							"                .withColumn('country_code',f.lit('US'))"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"Remove some of the columns that won't need for modeling or additional feature building.\n",
							"\n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Remove unused columns from nyc green taxi data\n",
							"\n",
							"columns_to_remove = [\"lpepDropoffDatetime\", \"puLocationId\", \"doLocationId\", \"pickupLongitude\", \n",
							"                     \"pickupLatitude\", \"dropoffLongitude\",\"dropoffLatitude\" ,\"rateCodeID\", \n",
							"                     \"storeAndFwdFlag\",\"paymentType\", \"fareAmount\", \"extra\", \"mtaTax\",\n",
							"                     \"improvementSurcharge\", \"tollsAmount\", \"ehailFee\", \"tripType \"  \n",
							"                    ]\n",
							"\n",
							"nyc_tlc_df_clean = nyc_tlc_df_expand.select([column for column in nyc_tlc_df_expand.columns if column not in columns_to_remove])"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"# Display 5 rows\n",
							"nyc_tlc_df_clean.show(5)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enrich with holiday data\n",
							"Now that we have taxi data downloaded and roughly prepared, add in holiday data as additional features. Holiday-specific features will assist model accuracy, as major holidays are times where taxi demand increases dramatically and supply becomes limited. \n",
							"\n",
							"Let's load the [public holidays](https://azure.microsoft.com/en-us/services/open-datasets/catalog/public-holidays/) from Azure Open datasets.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.opendatasets import PublicHolidays\n",
							"\n",
							"hol = PublicHolidays(start_date=start_date, end_date=end_date)\n",
							"hol_df = hol.to_spark_dataframe()\n",
							"\n",
							"# Display data\n",
							"hol_df.show(5, truncate = False)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"Rename the countryRegionCode and date columns to match the respective field names from the taxi data, and also normalize the time so it can be used as a key. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"hol_df_clean = hol_df.withColumnRenamed('countryRegionCode','country_code')\\\n",
							"            .withColumn('datetime',f.to_date('date'))\n",
							"\n",
							"hol_df_clean.show(5)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next, join the holiday data with the taxi data by performing a left-join. This will preserve all records from taxi data, but add in holiday data where it exists for the corresponding datetime and country_code, which in this case is always \"US\". Preview the data to verify that they were merged correctly."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# enrich taxi data with holiday data\n",
							"nyc_taxi_holiday_df = nyc_tlc_df_clean.join(hol_df_clean, on = ['datetime', 'country_code'] , how = 'left')\n",
							"\n",
							"nyc_taxi_holiday_df.show(5)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"# Create a temp table and filter out non empty holiday rows\n",
							"\n",
							"nyc_taxi_holiday_df.createOrReplaceTempView(\"nyc_taxi_holiday_df\")\n",
							"spark.sql(\"SELECT * from nyc_taxi_holiday_df WHERE holidayName is NOT NULL \").show(5, truncate = False)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enrich with weather data¶\n",
							"\n",
							"Now we append NOAA surface weather data to the taxi and holiday data. Use a similar approach to fetch the [NOAA weather history data](https://azure.microsoft.com/en-us/services/open-datasets/catalog/noaa-integrated-surface-data/) from Azure Open Datasets. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.opendatasets import NoaaIsdWeather\n",
							"\n",
							"isd = NoaaIsdWeather(start_date, end_date)\n",
							"isd_df = isd.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"isd_df.show(5, truncate = False)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"# Filter out weather info for new york city, remove the recording with null temperature \n",
							"\n",
							"weather_df = isd_df.filter(isd_df.latitude >= '40.53')\\\n",
							"                        .filter(isd_df.latitude <= '40.88')\\\n",
							"                        .filter(isd_df.longitude >= '-74.09')\\\n",
							"                        .filter(isd_df.longitude <= '-73.72')\\\n",
							"                        .filter(isd_df.temperature.isNotNull())\\\n",
							"                        .withColumnRenamed('datetime','datetime_full')\n",
							"                         "
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"# Remove unused columns\n",
							"\n",
							"columns_to_remove_weather = [\"usaf\", \"wban\", \"longitude\", \"latitude\"]\n",
							"weather_df_clean = weather_df.select([column for column in weather_df.columns if column not in columns_to_remove_weather])\\\n",
							"                        .withColumn('datetime',f.to_date('datetime_full'))\n",
							"\n",
							"weather_df_clean.show(5, truncate = False)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next group the weather data so that you have daily aggregated weather values. \n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Enrich weather data with aggregation statistics\n",
							"\n",
							"aggregations = {\"snowDepth\": \"mean\", \"precipTime\": \"max\", \"temperature\": \"mean\", \"precipDepth\": \"max\"}\n",
							"weather_df_grouped = weather_df_clean.groupby(\"datetime\").agg(aggregations)"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [
							"weather_df_grouped.show(5)"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"source": [
							"# Rename columns\n",
							"\n",
							"weather_df_grouped = weather_df_grouped.withColumnRenamed('avg(snowDepth)','avg_snowDepth')\\\n",
							"                                       .withColumnRenamed('avg(temperature)','avg_temperature')\\\n",
							"                                       .withColumnRenamed('max(precipTime)','max_precipTime')\\\n",
							"                                       .withColumnRenamed('max(precipDepth)','max_precipDepth')"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"source": [
							"Merge the taxi and holiday data you prepared with the new weather data. This time you only need the datetime key, and again perform a left-join of the data. Run the describe() function on the new dataframe to see summary statistics for each field."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# enrich taxi data with weather\n",
							"nyc_taxi_holiday_weather_df = nyc_taxi_holiday_df.join(weather_df_grouped, on = 'datetime' , how = 'left')\n",
							"nyc_taxi_holiday_weather_df.cache()"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"source": [
							"nyc_taxi_holiday_weather_df.show(5)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"summary"
									],
									"values": [
										"summary"
									],
									"yLabel": "summary",
									"xLabel": "summary",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"summary\":{\"count\":1,\"max\":1,\"mean\":1,\"min\":1,\"stddev\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"# Run the describe() function on the new dataframe to see summary statistics for each field.\n",
							"\n",
							"display(nyc_taxi_holiday_weather_df.describe())"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"datetime"
									],
									"values": [
										"vendorID"
									],
									"yLabel": "vendorID",
									"xLabel": "datetime",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"vendorID\":{\"2018-05-28\":1825}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(nyc_taxi_holiday_weather_df)"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"source": [
							"nyc_taxi_holiday_weather_df.write.format(\"delta\").save(\"abfs://synapseroot@accsynapsestorage.dfs.core.windows.net/nycdelta/yellowweather/\")"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"source": [
							"The summary statistics shows that the totalAmount field has negative values, which don't make sense in the context.\n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Remove invalid rows with less than 0 taxi fare or tip\n",
							"final_df = nyc_taxi_holiday_weather_df.filter(nyc_taxi_holiday_weather_df.tipAmount > 0)\\\n",
							"                                      .filter(nyc_taxi_holiday_weather_df.totalAmount > 0)"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Cleaning up the existing Database\n",
							"\n",
							"First we need to drop the tables since Spark requires that a database is empty before we can drop the Database.\n",
							"\n",
							"Then we recreate the database and set the default database context to it."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DROP TABLE IF EXISTS NYCTaxi.nyc_taxi_holiday_weather\"); "
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DROP DATABASE IF EXISTS NYCTaxi\"); \n",
							"spark.sql(\"CREATE DATABASE NYCTaxi\"); \n",
							"spark.sql(\"USE NYCTaxi\");"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Creating a new table\n",
							"We create a nyc_taxi_holiday_weather table from the nyc_taxi_holiday_weather dataframe.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql import SparkSession\n",
							"from pyspark.sql.types import *\n",
							"\n",
							"final_df.write.saveAsTable(\"nyc_taxi_holiday_weather\");\n",
							"spark.sql(\"SELECT COUNT(*) FROM nyc_taxi_holiday_weather\").show();"
						],
						"outputs": [],
						"execution_count": 25
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TextCogTest')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('TextCogTest_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import mmlspark\n",
							"\n",
							"if mmlspark.__spark_package_version__ < \"1.0.0-rc3\":\n",
							"    raise Exception(\"This notebook is not compatible with the current version of mmlspark: {}. Please upgrade to 1.0.0-rc3 or higher.\".format(\n",
							"        mmlspark.__spark_package_version__))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"comment"
									],
									"values": [
										"comment"
									],
									"yLabel": "comment",
									"xLabel": "comment",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"comment\":{\"Can't believe you fools shipped me the wrong items AGAIN. If you weren't the only company I've been able to find that even has these items, I would have stopped ordering from you a long time ago. I order weekly and it seems like at least once a month my order has some kind of foul-up. Waiting for the order to be corrected would set my business back so I need to keep extra on hand just in case. Not fair for me to have to carry extra inventory to make up for YOUR screw-ups! Hire someone who can tell the difference between a thingamabob and a whatchamacallit. If anyone reading this knows of another source please let me know.\":1,\"David, sorry, it's whatchamacallits I'm looking for. I should have been more specific. Can't find them anywhere. Of course the dolts at Fabrikam are no help.\":1,\"Hi folks. According to your encabulator brochure, the hydrocoptic marzlevanes are supposed to prevent side fumbling. In fact, I bought your retro-encabulator because of your claims that it was highly resistant to this problem. However, I'm seeing a lot of side fumbling anyway. Am I doing something wrong or do I have a defective unit?\":1,\"I ordered three widgets last week and just received them. I am VERY disappointed in the way they were packed. The box was only about two thirds full of packing peanuts and the widgets were not individually wrapped. As a result they were able to bump up against each other while in transit. The display on one doesn't work at all and the other two are quite scratched up (look like they have been in service for years) though they do work fine. I have always been satisifed with your service and trust you will make this right, but I suggest you look into how you are packing these items. You will have a lot of unhappy customers otherwise.\":1,\"I put my wedding ring in a Bag of Holding I purchased from you guys (for safekeeping while at work) and it turned into lead! What the heck? I'm really going to be in the doghouse.\":1,\"Jake, I've had similar problems tracking down another source of thingamabobs. (Or is it whatchamacallits you need?) I have found Contoso Supply to have thingamabobs but not reliably. Maybe if they started getting more orders for them this would improve.\":1,\"Jake, it's probably none of my business, but you will probably get a better response if you don't insult the people you want help from.\":1,\"Maria, I'm pretty sure the folks at Fabrikam use photos of actual customers in their brochures. Those hands are obviously the hands of someone who uses the product! I think it's great!\":1,\"That hand model needs a manicure, stat!\":1,\"Wow! I had NO IDEA that reciprocating garombles of such high quality even existed! And they're a steal, too; I've paid twice your asking price for garombles that weren't nearly as smooth in operation. Free ground delivery was a plus (the overnight shipping seems a little spendy though). We'll see how these actually hold up, but so far I'm sold!\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"from mmlspark.cognitive import *\n",
							"from notebookutils import mssparkutils\n",
							"from pyspark.sql.functions import explode\n",
							"\n",
							"# Fetch the subscription key (or a general Cognitive Service key) from Azure Key Vault\n",
							"service_key = mssparkutils.credentials.getSecret(\"accvault1\", \"textsecret\", \"accvault1\")\n",
							"\n",
							"# Load the data into a Spark DataFrame\n",
							"df = spark.sql(\"SELECT * FROM default.fabrikam_text_analytics\")\n",
							"\n",
							"sentiment = (TextSentiment()\n",
							"    .setLocation(\"centralus\")\n",
							"    .setSubscriptionKey(service_key)\n",
							"    .setOutputCol(\"output\")\n",
							"    .setErrorCol(\"error\")\n",
							"    .setLanguage(\"en\")\n",
							"    .setTextCol(\"comment\"))\n",
							"\n",
							"results = sentiment.transform(df)\n",
							"\n",
							"# Show the results\n",
							"display(results\\\n",
							"    .select(\"comment\", explode(\"output\").alias(\"exploded\"), \"error\")\\\n",
							"    .select(\"comment\", \"exploded.*\", \"error\")\\\n",
							"    .limit(10))"
						],
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Using Azure Open Datasets in Synapse')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('Using Azure Open Datasets in Synapse_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Using Azure Open Datasets in Synapse - Enrich NYC Green Taxi Data with Holiday and Weather\n",
							"\n",
							"Synapse has [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/) package pre-installed. This notebook provides examples of how to enrich NYC Green Taxi Data with Holiday and Weather with focusing on :\n",
							"- read Azure Open Dataset\n",
							"- manipulate the data to prepare for further analysis, including column projection, filtering, grouping and joins etc. \n",
							"- create a Spark table to be used in other notebooks for modeling training"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Data loading \n",
							"Let's first load the [NYC green taxi trip records](https://azure.microsoft.com/en-us/services/open-datasets/catalog/nyc-taxi-limousine-commission-green-taxi-trip-records/). The Open Datasets package contains a class representing each data source (NycTlcGreen for example) to easily filter date parameters before downloading."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Load nyc green taxi trip records from azure open dataset\n",
							"val blob_account_name = \"azureopendatastorage\"\n",
							"\n",
							"val nyc_blob_container_name = \"nyctlc\"\n",
							"val nyc_blob_relative_path = \"green\"\n",
							"val nyc_blob_sas_token = \"\"\n",
							"\n",
							"val nyc_wasbs_path = f\"wasbs://$nyc_blob_container_name@$blob_account_name.blob.core.windows.net/$nyc_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$nyc_blob_container_name.$blob_account_name.blob.core.windows.net\",nyc_blob_sas_token)\n",
							"\n",
							"val nyc_tlc = spark.read.parquet(nyc_wasbs_path)\n",
							"\n",
							"//nyc_tlc.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter data by time range\n",
							"import java.sql.Timestamp\n",
							"import org.joda.time.DateTime\n",
							"\n",
							"val end_date = new Timestamp(DateTime.parse(\"2018-06-06\").getMillis)\n",
							"val start_date = new Timestamp(DateTime.parse(\"2018-05-01\").getMillis)\n",
							"\n",
							"val nyc_tlc_df = nyc_tlc.filter((nyc_tlc(\"lpepPickupDatetime\") >= start_date) && (nyc_tlc(\"lpepPickupDatetime\") <= end_date)) \n",
							"nyc_tlc_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"Now that the initial data is loaded. Let's do some projection on the data to \n",
							"- create new columns for the month number, day of month, day of week, and hour of day. These info is going to be used in the training model to factor in time-based seasonality.\n",
							"- add a static feature for the country code to join holiday data. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Extract month, day of month, and day of week from pickup datetime and add a static column for the country code to join holiday data. \n",
							"import org.apache.spark.sql.functions._\n",
							"\n",
							"val nyc_tlc_df_expand = (\n",
							"                        nyc_tlc_df.withColumn(\"datetime\", to_date(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"month_num\",month(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"day_of_month\",dayofmonth(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"day_of_week\",dayofweek(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"hour_of_day\",hour(col(\"lpepPickupDatetime\")))\n",
							"                                  .withColumn(\"country_code\",lit(\"US\"))\n",
							"                        )"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"// Display 5 rows\n",
							"// nyc_tlc_df_expand.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"Remove some of the columns that won't need for modeling or additional feature building.\n",
							"\n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Remove unused columns from nyc green taxi data\n",
							"val nyc_tlc_df_clean = nyc_tlc_df_expand.drop(\n",
							"                    \"lpepDropoffDatetime\", \"puLocationId\", \"doLocationId\", \"pickupLongitude\", \n",
							"                     \"pickupLatitude\", \"dropoffLongitude\",\"dropoffLatitude\" ,\"rateCodeID\", \n",
							"                     \"storeAndFwdFlag\",\"paymentType\", \"fareAmount\", \"extra\", \"mtaTax\",\n",
							"                     \"improvementSurcharge\", \"tollsAmount\", \"ehailFee\", \"tripType\" )"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"// Display 5 rows\n",
							"nyc_tlc_df_clean.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enrich with holiday data\n",
							"Now that we have taxi data downloaded and roughly prepared, add in holiday data as additional features. Holiday-specific features will assist model accuracy, as major holidays are times where taxi demand increases dramatically and supply becomes limited. \n",
							"\n",
							"Let's load the [public holidays](https://azure.microsoft.com/en-us/services/open-datasets/catalog/public-holidays/) from Azure Open datasets.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Load public holidays data from azure open dataset\n",
							"val hol_blob_container_name = \"holidaydatacontainer\"\n",
							"val hol_blob_relative_path = \"Processed\"\n",
							"val hol_blob_sas_token = \"\"\n",
							"\n",
							"val hol_wasbs_path = f\"wasbs://$hol_blob_container_name@$blob_account_name.blob.core.windows.net/$hol_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$hol_blob_container_name.$blob_account_name.blob.core.windows.net\",hol_blob_sas_token)\n",
							"\n",
							"val hol_raw = spark.read.parquet(hol_wasbs_path)\n",
							"\n",
							"// Filter data by time range\n",
							"val hol_df = hol_raw.filter((hol_raw(\"date\") >= start_date) && (hol_raw(\"date\") <= end_date))\n",
							"\n",
							"// Display 5 rows\n",
							"// hol_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"source": [
							"Rename the countryRegionCode and date columns to match the respective field names from the taxi data, and also normalize the time so it can be used as a key. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val hol_df_clean = (\n",
							"                hol_df.withColumnRenamed(\"countryRegionCode\",\"country_code\")\n",
							"                .withColumn(\"datetime\",to_date(col(\"date\")))\n",
							"                )\n",
							"\n",
							"hol_df_clean.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next, join the holiday data with the taxi data by performing a left-join. This will preserve all records from taxi data, but add in holiday data where it exists for the corresponding datetime and country_code, which in this case is always \"US\". Preview the data to verify that they were merged correctly."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// enrich taxi data with holiday data\n",
							"val nyc_taxi_holiday_df = nyc_tlc_df_clean.join(hol_df_clean, Seq(\"datetime\", \"country_code\") , \"left\")\n",
							"\n",
							"nyc_taxi_holiday_df.show(5,truncate = false)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"// Create a temp table and filter out non empty holiday rows\n",
							"\n",
							"nyc_taxi_holiday_df.createOrReplaceTempView(\"nyc_taxi_holiday_df\")\n",
							"val result = spark.sql(\"SELECT * from nyc_taxi_holiday_df WHERE holidayName is NOT NULL \")\n",
							"result.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Enrich with weather data¶\n",
							"\n",
							"Now we append NOAA surface weather data to the taxi and holiday data. Use a similar approach to fetch the [NOAA weather history data](https://azure.microsoft.com/en-us/services/open-datasets/catalog/noaa-integrated-surface-data/) from Azure Open Datasets. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Load weather data from azure open dataset\n",
							"val weather_blob_container_name = \"isdweatherdatacontainer\"\n",
							"val weather_blob_relative_path = \"ISDWeather/\"\n",
							"val weather_blob_sas_token = \"\"\n",
							"\n",
							"val weather_wasbs_path = f\"wasbs://$weather_blob_container_name@$blob_account_name.blob.core.windows.net/$weather_blob_relative_path\"\n",
							"spark.conf.set(f\"fs.azure.sas.$weather_blob_container_name.$blob_account_name.blob.core.windows.net\",hol_blob_sas_token)\n",
							"\n",
							"val isd = spark.read.parquet(weather_wasbs_path)\n",
							"\n",
							"// Display 5 rows\n",
							"// isd.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter data by time range\n",
							"val isd_df = isd.filter((isd(\"datetime\") >= start_date) && (isd(\"datetime\") <= end_date))\n",
							"\n",
							"// Display 5 rows\n",
							"isd_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							"// Filter out weather info for new york city, remove the recording with null temperature \n",
							"\n",
							"val weather_df = (\n",
							"                isd_df.filter(isd_df(\"latitude\") >= \"40.53\")\n",
							"                        .filter(isd_df(\"latitude\") <= \"40.88\")\n",
							"                        .filter(isd_df(\"longitude\") >= \"-74.09\")\n",
							"                        .filter(isd_df(\"longitude\") <= \"-73.72\")\n",
							"                        .filter(isd_df(\"temperature\").isNotNull)\n",
							"                        .withColumnRenamed(\"datetime\",\"datetime_full\")\n",
							"                        )"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [
							"// Remove unused columns\n",
							"val weather_df_clean = weather_df.drop(\"usaf\", \"wban\", \"longitude\", \"latitude\").withColumn(\"datetime\", to_date(col(\"datetime_full\")))\n",
							"\n",
							"//weather_df_clean.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next group the weather data so that you have daily aggregated weather values. \n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enrich weather data with aggregation statistics\n",
							"\n",
							"val weather_df_grouped = (\n",
							"                        weather_df_clean.groupBy('datetime).\n",
							"                        agg(\n",
							"                            mean('snowDepth) as \"avg_snowDepth\",\n",
							"                            max('precipTime) as \"max_precipTime\",\n",
							"                            mean('temperature) as \"avg_temperature\",\n",
							"                            max('precipDepth) as \"max_precipDepth\"\n",
							"                            )\n",
							"                        )\n",
							"\n",
							"weather_df_grouped.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"source": [
							"Merge the taxi and holiday data you prepared with the new weather data. This time you only need the datetime key, and again perform a left-join of the data. Run the describe() function on the new dataframe to see summary statistics for each field."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Enrich taxi data with weather\n",
							"val nyc_taxi_holiday_weather_df = nyc_taxi_holiday_df.join(weather_df_grouped, Seq(\"datetime\") ,\"left\")\n",
							"nyc_taxi_holiday_weather_df.cache()"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"source": [
							"nyc_taxi_holiday_weather_df.show(5,truncate = false)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"// Run the describe() function on the new dataframe to see summary statistics for each field.\n",
							"display(nyc_taxi_holiday_weather_df.describe())"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "markdown",
						"source": [
							"The summary statistics shows that the totalAmount field has negative values, which don't make sense in the context.\n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Remove invalid rows with less than 0 taxi fare or tip\n",
							"val final_df = (\n",
							"            nyc_taxi_holiday_weather_df.\n",
							"            filter(nyc_taxi_holiday_weather_df(\"tipAmount\") > 0).\n",
							"            filter(nyc_taxi_holiday_weather_df(\"totalAmount\") > 0)\n",
							"            )"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Cleaning up the existing Database\n",
							"\n",
							"First we need to drop the tables since Spark requires that a database is empty before we can drop the Database.\n",
							"\n",
							"Then we recreate the database and set the default database context to it."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DROP TABLE IF EXISTS NYCTaxi.nyc_taxi_holiday_weather\"); "
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DROP DATABASE IF EXISTS NYCTaxi\"); \n",
							"spark.sql(\"CREATE DATABASE NYCTaxi\"); \n",
							"spark.sql(\"USE NYCTaxi\");"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Creating a new table\n",
							"We create a nyc_taxi_holiday_weather table from the nyc_taxi_holiday_weather dataframe.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"final_df.write.saveAsTable(\"nyc_taxi_holiday_weather\");\n",
							"val final_results = spark.sql(\"SELECT COUNT(*) FROM nyc_taxi_holiday_weather\");\n",
							"final_results.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 23
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/advlttest1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('advlttest1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import spark.implicits._"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val customerDF = spark.read.parquet(\"/adventureworkslt/2020/12/29/SalesLT_Customer_20201229.parquet \")"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val customerDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_Customer_20201229.parquet \")\r\n",
							"val addressDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_Address_20201229.parquet \")\r\n",
							"val customeraddressDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_CustomerAddress_20201229.parquet \")\r\n",
							"val productDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_Product_20201229.parquet \")\r\n",
							"val productcategoryDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductCategory_20201229.parquet \")\r\n",
							"val productdescriptionDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductDescription_20201229.parquet \")\r\n",
							"val productmodelDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductModel_20201229.parquet \")\r\n",
							"val productmodeldescriptionDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductModelProductDescription_20201229.parquet \")\r\n",
							"\r\n",
							"val salesorderdetailDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_SalesOrderDetail_20201229.parquet \")\r\n",
							"val salesorderheaderDF = spark.read.parquet(\"abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_SalesOrderHeader_20201229.parquet \")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(customerDF)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.Sql(\"CREATE DATABASE adventureworkslt\")"
						],
						"outputs": [],
						"execution_count": 45
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/advtablecreationparquet')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('advtablecreationparquet_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.customer USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_Customer_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.address USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_Address_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.customeraddress USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_CustomerAddress_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.product USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_Product_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.productcategory USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductCategory_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.productdescription USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductDescription_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.productmodel USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductModel_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.productmodelproductdescription USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_ProductModelProductDescription_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.salesorderdetail USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_SalesOrderDetail_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS adventureworkslt.salesorderheader USING Parquet LOCATION 'abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/adventureworkslt/2020/12/29/SalesLT_SalesOrderHeader_20201229.parquet '\")"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"display(spark.sql(\"select * from adventureworkslt.customer\"))"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"display(spark.sql(\"select * from adventureworkslt.customeraddress\"))"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"display(spark.sql(\"select * from adventureworkslt.product\"))"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"display(spark.sql(\"select * from adventureworkslt.productmodel\"))"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"display(spark.sql(\"select * from adventureworkslt.salesorderdetail\"))"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"display(spark.sql(\"select * from adventureworkslt.salesorderheader\"))"
						],
						"outputs": [],
						"execution_count": 18
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/anomalytestsvc')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('anomalytestsvc_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import mmlspark\n",
							"\n",
							"if mmlspark.__spark_package_version__ < \"1.0.0-rc3\":\n",
							"    raise Exception(\"This notebook is not compatible with the current version of mmlspark: {}. Please upgrade to 1.0.0-rc3 or higher.\".format(\n",
							"        mmlspark.__spark_package_version__))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"timestamp"
									],
									"values": [
										"value"
									],
									"yLabel": "value",
									"xLabel": "timestamp",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"value\":{\"1972-01-01T00:00:00Z\":826,\"1972-02-01T00:00:00Z\":799,\"1972-03-01T00:00:00Z\":890,\"1972-04-01T00:00:00Z\":900,\"1972-05-01T00:00:00Z\":766,\"1972-06-01T00:00:00Z\":805,\"1972-07-01T00:00:00Z\":821,\"1972-08-01T00:00:00Z\":20000,\"1972-09-01T00:00:00Z\":883,\"1972-10-01T00:00:00Z\":898}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"from mmlspark.cognitive import *\n",
							"from notebookutils import mssparkutils\n",
							"\n",
							"# Fetch the subscription key (or a general Cognitive Service key) from Azure Key Vault\n",
							"service_key = mssparkutils.credentials.getSecret(\"accvault1\", \"anomalysecret\", \"accvault1\")\n",
							"\n",
							"# Load the data into a Spark DataFrame\n",
							"df = spark.sql(\"SELECT * FROM default.anomaly_detector_testing_data\")\n",
							"\n",
							"anomalyDetector = (SimpleDetectAnomalies()\n",
							"    .setLocation(\"centralus\")\n",
							"    .setSubscriptionKey(service_key)\n",
							"    .setOutputCol(\"output\")\n",
							"    .setErrorCol(\"error\")\n",
							"    .setGranularity(\"monthly\")\n",
							"    .setTimestampCol(\"timestamp\")\n",
							"    .setValueCol(\"value\")\n",
							"    .setGroupbyCol(\"group\"))\n",
							"\n",
							"results = anomalyDetector.transform(df)\n",
							"\n",
							"# Show the results\n",
							"display(results.select(\"timestamp\", \"value\", \"group\", \"output.*\", \"error\").limit(10))"
						],
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/atstask1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('atstask1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark",
						"name": "mlspark",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 64,
						"memory": 400
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"1-ST0000309839\":10}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/atsinput/TaskResults.csv', format='csv'\r\n",
							"## If header exists uncomment line below\r\n",
							"##, header=True\r\n",
							")\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"#columns = [CPKPlaceId,tenant_id,place_id,currency,global_name,name,repair_center,PlaceStatus,Site,modified_dttm,time_zone_info_id,CPKEquipmentId,model_id,EquipmentGroup,AssetNum,AssetDesc,SerialNum,Criticality,SubLocation,EquipmentType,EquipmentSubType,OEM,EquipmentCategory,ControlType,Status,ManufacturedDate,InstalledDate,SublocationPM,CPKTaskId,CPKRequestId,WoId,TaskId,task_template_id,TaskTemplateDescription,WoPriority,EquipCriticality,TaskPriority,PlannedTaskDurationSeconds,EstimatedTaskSeconds,PlanedInAdvanceSeconds,PmComplianceOutOfWindowDays,PmCompletionOutOfWindowDays,WoType,WoStatus,WoSubStatus,TaskType,TaskStatus,status_reason,CPKTeamId,TaskCategory,ReasonForVarianceCode,IsBreakDown,IsVendorContract,IsChangeOver,IsAssetImprovement,IsOperatorPM,IsCostSavings,IsOutOfScope,IsNADT,IsSafety,HasComplianceExpired,HasCompletionExpired,IsScheduled,IsScheduleCompliant,IsPlanned,IsWaitingOnMaterials,IsRegulatory,PMComplianceWindowEndDate,PMCompletionWindowEndDate,TaskCompletedDate,TaskCreatedDate,WorkOrderCreatedOn,IsProactiveOverride,IsProactive,planned_status_datetime,TimeToPlanSeconds,PlannedStartDateTimeLocal,PlannedEndDateTimeLocal,TaskOpenDays,TotalTaskLaborHours,MalfuctionId,OperatingStatus_Id,MalfuctionStart,MalfuctionStop,MalfuctionStartLocal,MalfunctionStopLocal,MalfuctionDuration,DaysSinceLastMalfunction,ObjectCode,SymptomCode,ProblemCode,ResolutionCode,TotalDownTimeHours,ObjctDesc,ProblemDesc,ResolutionDesc,SymptomDesc]\n",
							"columns = ['CPKPlaceId','tenant_id','place_id','currency','global_name','name','repair_center','PlaceStatus','Site','modified_dttm','time_zone_info_id','CPKEquipmentId','model_id','EquipmentGroup','AssetNum','AssetDesc','SerialNum','Criticality','SubLocation','EquipmentType','EquipmentSubType','OEM','EquipmentCategory','ControlType','Status','ManufacturedDate','InstalledDate','SublocationPM','CPKTaskId','CPKRequestId','WoId','TaskId','task_template_id','TaskTemplateDescription','WoPriority','EquipCriticality','TaskPriority','PlannedTaskDurationSeconds','EstimatedTaskSeconds','PlanedInAdvanceSeconds','PmComplianceOutOfWindowDays','PmCompletionOutOfWindowDays','WoType','WoStatus','WoSubStatus','TaskType','TaskStatus','status_reason','CPKTeamId','TaskCategory','ReasonForVarianceCode','IsBreakDown','IsVendorContract','IsChangeOver','IsAssetImprovement','IsOperatorPM','IsCostSavings','IsOutOfScope','IsNADT','IsSafety','HasComplianceExpired','HasCompletionExpired','IsScheduled','IsScheduleCompliant','IsPlanned','IsWaitingOnMaterials','IsRegulatory','PMComplianceWindowEndDate','PMCompletionWindowEndDate','TaskCompletedDate','TaskCreatedDate','WorkOrderCreatedOn','IsProactiveOverride','IsProactive','planned_status_datetime','TimeToPlanSeconds','PlannedStartDateTimeLocal','PlannedEndDateTimeLocal','TaskOpenDays','TotalTaskLaborHours','MalfuctionId','OperatingStatus_Id','MalfuctionStart','MalfuctionStop','MalfuctionStartLocal','MalfunctionStopLocal','MalfuctionDuration','DaysSinceLastMalfunction','ObjectCode','SymptomCode','ProblemCode','ResolutionCode','TotalDownTimeHours','ObjctDesc','ProblemDesc','ResolutionDesc','SymptomDesc']"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"CPKPlaceId"
									],
									"values": [
										"CPKPlaceId"
									],
									"yLabel": "CPKPlaceId",
									"xLabel": "CPKPlaceId",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"CPKPlaceId\":{\"1-ST0000104090\":1,\"1-ST90000436\":1000}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"from pyspark.sql.functions import col\n",
							"\n",
							" ##columns is list from hack chat\n",
							" ##df_orig is a spark dataframe read from orig csv\n",
							"\n",
							"col_rename = {f'_c{i}':columns[i] for i in range(0,len(columns))}\n",
							"df_with_col_renamed = df.select([col(c).alias(col_rename.get(c,c)) for c in df.columns])\n",
							"display(df_with_col_renamed)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"source": [
							"#new_column_name_list= list(map(lambda x: x.replace(\" \", \"_\"), df.columns))\n",
							"\n",
							"df = df.toDF(*new_column_name_list)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"df.columns = new_column_name_list"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"1-ST0000104090\":1,\"1-ST90000436\":99}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.head(100))"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"df.describe()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import mean as _mean, stddev as _stddev, col\n",
							"\n",
							"df.mean()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"df.median()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"df.columns"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c5"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "_c5",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"0001 - CATERPILLAR - Nuevo Laredo Finsa 1\":35706,\"0004 - EATON - POWER - REYNOSA\":19321,\"0006 - EATON - TIJUANA\":29785,\"0010 - CATERPILLAR - TORREON\":56363,\"0013 - CARRIER - SANTA CATARINA PLANTA A\":40600,\"0015 - CARRIER - SANTA CATARINA PLANTA B\":28078,\"0017 - EATON ELECTRICAL CPCD - TIJUANA\":21573,\"0019 - EATON FILTRATION - REYNOSA\":11459,\"0020 - EATON FLUID CONVEYANCE - REYNOSA\":60214,\"0024 - CATERPILLAR - RAMOS\":46159,\"0025 - EATON - NOGALES\":12270,\"0026 - EATON - QUERETARO\":23280,\"0027 - CATERPILLAR - Nuevo Laredo Finsa 3\":28190,\"0028 - CATERPILLAR - Nuevo Laredo Oradel\":34161,\"0029 - GRUPO LALA SAB DE CV PLANTA DERIV - TORREON\":1024,\"0031 - TRAVELEX - CAMBERLEY\":1775,\"0034 - FORJAS Y MAQUINAS S DE RL DE CV\":17663,\"0035 - PARKER HANNIFIN - DEWSBURY\":2633,\"0049 - EATON - BRIERLEY HILL\":89,\"0052 - EATON AEROSPACE - TITCHFIELD\":10031,\"0055 - EATON FLUID POWER - HAVANT\":18332,\"0065 - AUTOMATED PACKAGING SYSTEMS LTD\":9264,\"0066 - AMESBURYTRUTH\":260,\"0140 - AUTOLITE FRAM GROUP - DUNCAN\":3022,\"0161 - HONEYWELL - ROCKY MOUNT\":4166,\"0171 - EATON - ASHEVILLE\":31472,\"0174 - EATON ELECTRICAL - GREENWOOD\":24556,\"0176 - SENIOR FLEXONICS - BARTLETT\":43642,\"0177 - J&L FIBER SERVICES - WAUKESHA\":18415,\"0178 - WORLD'S FINEST CHOCOLATE\":29974,\"0180 - ELGIN SWEEPER - ELGIN\":24265,\"0200 - EATON - CLEVELAND\":34834,\"0201 - EATON - FAYETTEVILLE\":22272,\"0202 - EATON ELECTRICAL - SUMTER\":29615,\"0211 - E-Z GO TEXTRON - AUGUSTA\":23932,\"0213 - CATERPILLAR - GRIFFIN\":15677,\"0282 - EATON HYDRAULIC - GREENWOOD\":14590,\"0302 - EATON - CHARLESTON\":9826,\"0311 - EATON - NEWBERN\":32195,\"0313 - TEREX UTILITIES - HURON\":16383,\"0402 - CATERPILLAR - LAGRANGE\":15789,\"0405 - SAFRAN - SARASOTA\":9410,\"0408 - EATON - SEARCY\":33582,\"0409 - EATON - JACKSON\":4693,\"0423 - EATON - MIDDLESEX\":13630,\"0424 - EATON - BELTSVILLE\":10961,\"0425 - ATS EFACTORY SERVICES\":36,\"0431 - NTN BOWER - HAMILTON\":2982,\"0432 - USG - Washingtonville\":35103,\"0436 - EATON - ATHENS\":32085,\"0443 _ ONEAL STEEL INC INDIANAPOLIS\":680,\"0445 - USG - KANSAS CITY\":33675,\"0468 - BORG WARNER - BELLWOOD\":110075,\"0469 - BORG WARNER - FRANKFORT\":31654,\"0474 - CATERPILLAR POWERTRAIN - FRANKLIN\":46450,\"0476 - CATERPILLAR - FARGO\":17937,\"0483 - EATON - SHAWNEE\":44253,\"0490 - BORG WARNER - WATER VALLEY\":170550,\"0492 - THERMAL CERAMICS - AUGUSTA\":49343,\"0493 - INTERNATIONAL MANUFACTURING\":24,\"0535 - EATON - MOUNTAIN HOME\":65422,\"0564 - TRINITY INDUSTRIES - LV SHADY BROOK\":35796,\"0565 - TRINITY INDUSTRIES - LV JORDAN\":45623,\"0568 - CATERPILLAR - WEST PLAINS\":11316,\"0595 - NELSON GLOBAL PRODUCTS - MORTON\":1877,\"0598 - SLOAN VALVE COMPANY - AUGUSTA\":8137,\"0617 - TEREX UTILITIES - WATERTOWN\":15127,\"0624 - SLOAN VALVE COMPANY - FRANKLIN PARK\":21614,\"0625 - DANFOSS POWER SOLUTIONS - EASLEY\":7886,\"0626 - EATON ELECTRICAL - HODGES\":23826,\"0630 - PRETZELS INCORPORATED\":15541,\"0633 - USG - EL CENTRO\":53577,\"0636 - PARKER HANNIFIN - FORT WORTH\":23250,\"0637 - EATON - AMERICUS\":13274,\"0649 - EATON - BELMOND\":44369,\"0653 - EATON - HASTINGS\":19015,\"0660 - USG - TORRANCE\":16382,\"0661 - USG - PHOENIX\":9873,\"0663 - TRINITY INDUSTRIES - HUGO\":6545,\"0664 - EATON AEROSPACE - TOCCOA\":17923,\"0669 - WESTERN FORGE - COLORADO SPRINGS\":8320,\"0670 - TRINITY INDUSTRIES - JONESBORO\":30496,\"0671 - NATIONAL GYPSUM - WESTWEGO\":5081,\"0672 - EATON - WILLIAMSBURG\":1702,\"0673 - TENNECO - JEFFERSONVILLE\":3277,\"0687 - TENNECO - KANSAS CITY\":1179,\"0689 - BEHLEN MFG - COLUMBUS\":14965,\"0691 - CNH INDUSTRIAL AMERICA - BURLINGTON\":894,\"0695 - EATON AEROSPACE - GLENOLDEN\":19630,\"0698 - EATON POWER - GREENWOOD\":40510,\"0701 - USG - AUBURN\":14338,\"0706 - APEX INTERNATIONAL - CHASKA\":11451,\"0707 - USG - EAST CHICAGO\":26708,\"0709 - ILLINOIS TOOL WORKS\":1723,\"0726 - TROJAN BATTERY CO - SANDERSVILLE\":30249,\"0727 - EATON COOPER POWER SYSTEMS - OLEAN\":41678,\"0733 - CATERPILLAR - PONTIAC\":159502,\"0734 - SOUTHWIRE - LAFAYETTE\":30196,\"0735 - SOUTHWIRE - STARKVILLE\":48345,\"0737 - ASHLAND HARDWARE\":21132,\"0738 - SOUTHWIRE - HUNTERSVILLE\":9921,\"0740 - PARKER HANNIFIN - ENUMCLAW\":10703,\"0743 - TRINITY HEADS - NAVASOTA\":9366,\"0744 - MORGAN ADVANCED MATERIAL - ST MARYS\":20275,\"0761 - TECH CENTER BUILDING L\":13758,\"0764 - TRINITY MAINTENANCE SERVICES - VIDOR\":3055,\"0772 - CONTINENTAL AEROSPACE TECHNOLOGIES\":6024,\"0811 - PROFILE PRODUCTS LLC\":940,\"0812 - MASTER LOCK COMPANY\":2176,\"COOPER LIGHTING LLC-AURORA\":7574,\"EATON ELECTRICAL DISTRIBUTION CTR\":12670}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.groupBy(\"_c5\").count())"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c5"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "_c5",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"0436 - EATON - ATHENS\":32085}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"# ST90000436\n",
							"display(df.where(df[\"_c2\"] == \"ST90000436\").groupby(\"_c5\").count())"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"1-ST90000436\":1001}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.where(df[\"_c2\"] == \"ST90000436\"))"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c5"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "_c5",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"0001 - CATERPILLAR - Nuevo Laredo Finsa 1\":35706,\"0004 - EATON - POWER - REYNOSA\":19321,\"0006 - EATON - TIJUANA\":29785,\"0010 - CATERPILLAR - TORREON\":56363,\"0013 - CARRIER - SANTA CATARINA PLANTA A\":40600,\"0015 - CARRIER - SANTA CATARINA PLANTA B\":28078,\"0017 - EATON ELECTRICAL CPCD - TIJUANA\":21573,\"0019 - EATON FILTRATION - REYNOSA\":11459,\"0020 - EATON FLUID CONVEYANCE - REYNOSA\":59820,\"0024 - CATERPILLAR - RAMOS\":46159,\"0025 - EATON - NOGALES\":12270,\"0026 - EATON - QUERETARO\":23280,\"0027 - CATERPILLAR - Nuevo Laredo Finsa 3\":28190,\"0028 - CATERPILLAR - Nuevo Laredo Oradel\":34161,\"0029 - GRUPO LALA SAB DE CV PLANTA DERIV - TORREON\":1024,\"0031 - TRAVELEX - CAMBERLEY\":1775,\"0034 - FORJAS Y MAQUINAS S DE RL DE CV\":17663,\"0035 - PARKER HANNIFIN - DEWSBURY\":2633,\"0049 - EATON - BRIERLEY HILL\":89,\"0052 - EATON AEROSPACE - TITCHFIELD\":10031,\"0055 - EATON FLUID POWER - HAVANT\":18332,\"0065 - AUTOMATED PACKAGING SYSTEMS LTD\":9264,\"0066 - AMESBURYTRUTH\":260,\"0140 - AUTOLITE FRAM GROUP - DUNCAN\":3022,\"0161 - HONEYWELL - ROCKY MOUNT\":4166,\"0171 - EATON - ASHEVILLE\":31472,\"0174 - EATON ELECTRICAL - GREENWOOD\":24556,\"0176 - SENIOR FLEXONICS - BARTLETT\":43642,\"0177 - J&L FIBER SERVICES - WAUKESHA\":18415,\"0178 - WORLD'S FINEST CHOCOLATE\":29974,\"0180 - ELGIN SWEEPER - ELGIN\":24056,\"0200 - EATON - CLEVELAND\":34834,\"0201 - EATON - FAYETTEVILLE\":22272,\"0202 - EATON ELECTRICAL - SUMTER\":29612,\"0211 - E-Z GO TEXTRON - AUGUSTA\":23932,\"0213 - CATERPILLAR - GRIFFIN\":15677,\"0282 - EATON HYDRAULIC - GREENWOOD\":14590,\"0302 - EATON - CHARLESTON\":9826,\"0311 - EATON - NEWBERN\":32195,\"0313 - TEREX UTILITIES - HURON\":16383,\"0402 - CATERPILLAR - LAGRANGE\":15789,\"0405 - SAFRAN - SARASOTA\":9410,\"0408 - EATON - SEARCY\":33582,\"0409 - EATON - JACKSON\":4693,\"0423 - EATON - MIDDLESEX\":13630,\"0424 - EATON - BELTSVILLE\":10961,\"0425 - ATS EFACTORY SERVICES\":36,\"0431 - NTN BOWER - HAMILTON\":2982,\"0432 - USG - Washingtonville\":35103,\"0436 - EATON - ATHENS\":32085,\"0443 _ ONEAL STEEL INC INDIANAPOLIS\":680,\"0445 - USG - KANSAS CITY\":33675,\"0468 - BORG WARNER - BELLWOOD\":109991,\"0469 - BORG WARNER - FRANKFORT\":31654,\"0474 - CATERPILLAR POWERTRAIN - FRANKLIN\":46450,\"0476 - CATERPILLAR - FARGO\":17937,\"0483 - EATON - SHAWNEE\":44253,\"0490 - BORG WARNER - WATER VALLEY\":170550,\"0492 - THERMAL CERAMICS - AUGUSTA\":49335,\"0493 - INTERNATIONAL MANUFACTURING\":24,\"0535 - EATON - MOUNTAIN HOME\":65422,\"0564 - TRINITY INDUSTRIES - LV SHADY BROOK\":35796,\"0565 - TRINITY INDUSTRIES - LV JORDAN\":45556,\"0568 - CATERPILLAR - WEST PLAINS\":11316,\"0595 - NELSON GLOBAL PRODUCTS - MORTON\":1877,\"0598 - SLOAN VALVE COMPANY - AUGUSTA\":8137,\"0617 - TEREX UTILITIES - WATERTOWN\":15127,\"0624 - SLOAN VALVE COMPANY - FRANKLIN PARK\":21614,\"0625 - DANFOSS POWER SOLUTIONS - EASLEY\":7886,\"0626 - EATON ELECTRICAL - HODGES\":23824,\"0630 - PRETZELS INCORPORATED\":15541,\"0633 - USG - EL CENTRO\":53577,\"0636 - PARKER HANNIFIN - FORT WORTH\":23250,\"0637 - EATON - AMERICUS\":13274,\"0649 - EATON - BELMOND\":44346,\"0653 - EATON - HASTINGS\":19015,\"0660 - USG - TORRANCE\":16382,\"0661 - USG - PHOENIX\":9873,\"0663 - TRINITY INDUSTRIES - HUGO\":6545,\"0664 - EATON AEROSPACE - TOCCOA\":17923,\"0669 - WESTERN FORGE - COLORADO SPRINGS\":8320,\"0670 - TRINITY INDUSTRIES - JONESBORO\":30423,\"0671 - NATIONAL GYPSUM - WESTWEGO\":5081,\"0672 - EATON - WILLIAMSBURG\":1702,\"0673 - TENNECO - JEFFERSONVILLE\":3277,\"0687 - TENNECO - KANSAS CITY\":1179,\"0689 - BEHLEN MFG - COLUMBUS\":14867,\"0691 - CNH INDUSTRIAL AMERICA - BURLINGTON\":893,\"0695 - EATON AEROSPACE - GLENOLDEN\":19630,\"0698 - EATON POWER - GREENWOOD\":40510,\"0701 - USG - AUBURN\":14338,\"0706 - APEX INTERNATIONAL - CHASKA\":11451,\"0707 - USG - EAST CHICAGO\":26708,\"0709 - ILLINOIS TOOL WORKS\":1723,\"0726 - TROJAN BATTERY CO - SANDERSVILLE\":30249,\"0727 - EATON COOPER POWER SYSTEMS - OLEAN\":41677,\"0733 - CATERPILLAR - PONTIAC\":159502,\"0734 - SOUTHWIRE - LAFAYETTE\":30196,\"0735 - SOUTHWIRE - STARKVILLE\":48345,\"0737 - ASHLAND HARDWARE\":21132,\"0738 - SOUTHWIRE - HUNTERSVILLE\":9921,\"0740 - PARKER HANNIFIN - ENUMCLAW\":10703,\"0743 - TRINITY HEADS - NAVASOTA\":9299,\"0744 - MORGAN ADVANCED MATERIAL - ST MARYS\":20275,\"0761 - TECH CENTER BUILDING L\":13758,\"0764 - TRINITY MAINTENANCE SERVICES - VIDOR\":3055,\"0772 - CONTINENTAL AEROSPACE TECHNOLOGIES\":6024,\"0811 - PROFILE PRODUCTS LLC\":940,\"0812 - MASTER LOCK COMPANY\":2176,\"COOPER LIGHTING LLC-AURORA\":7574,\"EATON ELECTRICAL DISTRIBUTION CTR\":12670}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.where(df[\"_c43\"] == \"CLOSED\").groupby(\"_c5\").count())"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c12"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "_c12",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"\\\"0026 - GEROLER / GEROTOR   \\\"\\\"GG\\\"\\\"\\\"\":10,\"0004-1'2'4'\":17,\"0006 - BENDING\":52,\"0006 - ELECTROMECANICA\":22,\"0010 - ATSAREA DE BHL  BUCKETS EDIFICIO B\":200,\"0010 - ATSAREA DE PRIMERAS OP HD  CP011\":7,\"0010 - ATSAREA DE PRIMERAS OP SHOT BLAST EDICIO B\":6,\"0010 - ATSAREA DE TOOL ROOM MAQUINADO\":1,\"0010 - ATSP048-BB00-AREA DE SWL  T4 BUCKETS\":8,\"0013-BOMBAS DE VACIO\":13,\"0017 - SUBLOCATION\":55,\"0017-AREAS DE SOPORTE\":91,\"0020-5LP\":1,\"0020-BRASS FITTING LINEA 3B\":3,\"0020-KARG\":16,\"0020-METALES 04U\":2,\"0020-TRUCK\":271,\"0024-TERMICOS\":178,\"0034 - RECTIFICADO 11A\":4,\"0034-RECTIFICADO 9B\":34,\"0034-ROLADO 7\":2,\"0034-SOLD FRIC 10\":3,\"0052-HORIZONTAL\":5,\"0052-M/C SHOP FINAL\":7,\"0052-SRC\":1,\"0055-GOODS IN\":45,\"0055-HAV PILOT VALVE ASSY\":6,\"0055-THOR ASSY (MAIN STAGE)\":8,\"0161 - 9455 METAL JOINING MACHINING - HUB\":1,\"0161 - 9462 PWC CELL\":1,\"0174 - POWDER COAT\":69,\"0176 - FURNACES\":32,\"0176 - TEST RIGS\":6,\"0177 - MG01 PROG AVE OUTSIDE/GROUNDS/FACILITIES\":3745,\"0200-FORKLIFT\":10,\"0202-BUILDING 2\":18,\"0202-SWITCHBOARD ASSEMBLY SHIPPING\":16,\"0311-FACILITY GENERAL\":476,\"0311-ROYAL FLEX - TEST TABLE GENERAL\":10,\"0311-RUBBER MFG-COMPOUND ROOM\":15,\"0313-WS L.A. BOOM LINE BOOM TACK\":8,\"0402-KBL ZONE 3\":4,\"0402-TFB ENGINE SUB\":4,\"0402-WSK CAB ZONE 2\":1,\"0402-WSK MARRY\":10,\"0405 - 1526 LINE\":4,\"0405 - DEPT 20851 - WELDING\":47,\"0405 - QUALITY CLINIC\":14,\"0408-CETOP 3-5 STAK MACHINING\":1,\"0408-HRC\":3,\"0408-SNYDER-CM11 MACHINING\":1,\"0409-PORT AND CUSHION\":1,\"0431-DEPT 206 __ LINE 255\":1,\"0431-DEPT 522_ LINE 17\":3,\"0431-DEPT320 _ LINE 211\":3,\"0436-TEST CELL\":19,\"0474-6.4L HPFR ASSEMBLY\":5,\"0474-FRANKLIN DB2 DB2\":9,\"0474-FRANKLIN WAREHOUSE\":40,\"0490 -  RESEARCH AND DEVELOPMENT\":6,\"0490 - GM F4 SOLENOID\":2,\"0491 - CORELITE\":92,\"0492-SKWL AIR CLASSIFIER 2\":5,\"0492-SKWL SPUN FIBER LINE 1\":103,\"0492-SKWL SPUN FIBER LINE 2\":122,\"0535-BRD 1029\":1,\"0535-BRD 1033\":1,\"0565 - 110 MAINTENANCE SHOP\":1008,\"0565 - 200 BLDG 1\":799,\"0598-MELT DECK\":47,\"0617-21ST STREET AIR TOOLS\":11,\"0625-121-MACHINING\":47,\"0625-142-RECEIVING\":1,\"0625-154-PVB / P32\":7,\"0625-COMATROL HIC 2 ASSEMBLY\":2,\"0630 - LINE 13 - PRODUCTION PARENT\":1,\"0630 - PRETZEL PROCESS LINE 14\":33,\"0633-CHILLED WATER SYSTEM-LINE #3\":4,\"0633-ROCK CONVEYING SOUTH\":10,\"0633-SILOXANE ADDITIVE SYSTEM-LINE #3\":1,\"0649-FINISH - DEPT 860 - 860 LINE\":153,\"0653-GENERAL PLANT - HVAC\":2,\"0660 - PLUMBING\":16,\"0660 - READY MIX LINE (LINE 1)\":172,\"0663-BD02-MECHANICAL SHOP\":414,\"0669-4/6 IN ADJ\":2,\"0669-MET LAB\":12,\"0669-P4 FACILITIES\":72,\"0670 - CLEANING RACK - ENVIRONMENTAL\":158,\"0670 - MECHANICAL - STOREROOM\":137,\"0672 - GLUE/PAINT PRODUCTION\":7,\"0672 - PIPE CUTTING\":1,\"0672 - SHIPPING/RECEIVING BLD (149B)\":2,\"0691-DOZER ASSEMBLY SUBS\":1,\"0695 - TUMBLING\":57,\"0698-BUSS DUCT\":3,\"0698-SEPARATE & CRIMP FOILS\":3,\"0698-TOOL & DIE\":26,\"0707-BOARD LINE KILN\":341,\"0709-CELL #16\":1,\"0726-CURING CHAMBERS\":25,\"0727 - HOLLOW CORE\":149,\"0733-F178 MAINT. - HEAT TREAT\":5,\"0733-F515 HEP MANUFACTURING (MANUFACTURING 2)\":1,\"0761 - WING 7 CAFETERIA\":38,\"0761 - WING 8 L1\":32,\"0764 - MAINTENANCE\":106,\"0811 - BAG05-BAGGER 5\":9,\"0811 - TOW01-MAIN FEED SYSTEM\":8,\"A&A MANUFACTURING CO (DYNATECT MANUFACTURING INC) 68M0608\":85,\"ABAR IPSEN INC T22 GM\":12,\"ABSOLUTAIRE INC AA2-UOM\":2,\"ABSOLUTAIRE INC UNABLE TO ID-664-A1048\":22,\"ACCO WRIGHT (ACCO MATERIAL HANDLING SOLUTIONS) 2130030-VFD\":9,\"ACCU-CUT DIAMOND TOOL & BORE SIZING SYSTEMS 2X2SM-1S\":405,\"ACCUCHILLER (THERMAL CARE) UNABLE TO ID-0733-BR393\":16,\"ACCURATE (SCHENCK PROCESS HOLDING GMBH) UNABLE TO ID-0598-MD3158\":22,\"ACCURATE (SCHENCK PROCESS HOLDING GMBH) UNABLE TO ID-200-2997C\":1,\"ACME-GRIDLEY RA 6 -1/4\":2,\"ACSI (AUTOMATED CONVEYOR SYSTEMS INC) CUSTOMER MADE-010-CR010\":6,\"ACSI (AUTOMATED CONVEYOR SYSTEMS INC) CUSTOMER MADE-010-CR061\":7,\"ADEPT TECHNOLOGY INC UNABLE TO ID-0733-M3310\":94,\"ADVANCE PRODUCTION TOOLS UNABLE TO ID-0701-MET-3157-10\":33,\"ADVANCED AUTOMATION INC CUSTOMER MADE-0733-M4368\":139,\"AEC (ACS GROUP) UNABLE TO ID-0737-MOL-13\":4,\"AEM UNICORE UMC3000\":452,\"AEROLYTE SYSTEMS (CLEMCO INDUSTRIES CORP) 6X4X7\":626,\"AEROQUIP (EATON) CUSTOMER MADE-006-EA0290\":93,\"AEROQUIP (EATON) CUSTOMER MADE-006-EA1068\":46,\"AEROQUIP (EATON) CUSTOMER MADE-535-COIL-08\":33,\"AEROQUIP (EATON) MINI II\":11,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 10CE12CVB962-1/4\":13,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 24L422-FSR-1107-1/3\":6,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 36L422BD40C1121-3\":22,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 42W738-VW-870-10\":15,\"AGRAMKOW FLUID SYSTEMS AS EST 300\":13,\"ALLEN-BRADLEY (ROCKWELL AUTOMATION INC) 20G1AND186AN0NNNNN\":2,\"ALLEN-BRADLEY (ROCKWELL AUTOMATION INC) CENTERLINE 2100\":1,\"ALMCO FINISHING & CLEANING SYS UNABLE TO ID-019-RY193\":75,\"ALPHA CONVERTING EQUIPMENT LTD ALPHATRIM TWM-P\":31,\"ALPHA PRESS 60 TON\":195,\"ALPHA TECH A86674B113\":41,\"ALPHA TECH CUSTOMER MADE-164-CACCOVERPUNCH01\":20,\"ALPHA TECH CUSTOMER MADE-171-HP11\":2,\"AMADA AMERICA INC MP-1224\":1,\"AMADA AMERICA INC MP-1225US\":2,\"AMERICAN KHUNE (GRAHAM ENGINEERING CORP) AK150 24:1 A/C EXT\":38,\"AMERICAN KHUNE (GRAHAM ENGINEERING CORP) AK200 24:1 A/C EXT\":97,\"AMERICAN TOOL & DIE UNABLE TO ID-626-446\":272,\"AMPCO PUMPS CO AZP3-060-SM\":32,\"AMPCO PUMPS CO RBZP1-030-SO\":45,\"ANGOR-INTOOLS UNABLE TO ID-469-5772\":22,\"ANVER CORP A150M6-86-3/44\":56,\"ANVER CORP VPFL4-04-AC-L3P/6P\":22,\"ARTOS ENGINEERING CO CR.11 2017\":14,\"ASC INDUSTRIES LTD UNABLE TO ID-468-1306\":58,\"ASI (ASHLEY SLINGS INC) 21407154\":1,\"ATW (ASSEMBLY & TEST WORLDWIDE)(AUTOMATION TOOLING SYSTEMS INC) ATW GPTS\":207,\"AUTOMATED FINISHING CUSTOMER MADE-0733-M1666\":89,\"AUTOMATED SYS UNABLE TO ID-408-TS10\":7,\"AUTOMATION INTERNATIONAL INC EN1001\":16,\"AUTOQUIP CORP T-36-044\":52,\"AVTRON (EMERSON ELECTRIC CO) K841BD30502\":22,\"AZO GMBH & COMPANY KG UNABLE TO ID-0630-AZO1CC\":1,\"BAHMUELLER TECHNOLOGIES INC XPRO\":132,\"BAKER PERKINS LTD UNABLE TO ID-178-CMCON0001\":255,\"BALDOR ELECTRIC CO (ABB GROUP) 07-309-30\":28,\"BALDOR ELECTRIC CO (ABB GROUP) 332B\":90,\"BALDOR ELECTRIC CO (ABB GROUP) UNABLE TO ID-483-BT-6007\":17,\"BARBER-COLMAN (BOURN & KOCH INC) UNABLE TO ID-020-AU-25\":41,\"BARTELL MACHINERY SYSTEMS LLC UNABEL TO ID-0735-A-9-TAKEUP\":74,\"BARTELL MACHINERY SYSTEMS LLC UNABLE TO ID-0735-E-15-PAYOFF 2 SOUTH\":93,\"BATTENFELD (WITTMANN BATTENFELD INC) HM 1000\":56,\"BCN (BLISS CLEARING NIAGARA) TECHNICAL SERVICES INC C-35\":53,\"BECCA INC 25000\":6,\"BEHLEN MANUFACTURING CO CUSTOMER MADE-689-294\":14,\"BEKO TECHNOLOGIES GMBH RAX 100 NA\":10,\"BELDEN MACHINE CORP UNABLE TO ID-469-5807\":85,\"BESLY GRINDERS DH2-23\":195,\"BETA LASERMIKE (NDC TECHNOLOGIES) AS5080RD\":6,\"BETTER ENGINEERING MANUFACTURING INC UNABLE TO ID-474-PE901\":2,\"BETTER PACKAGES INC 338 PLUS\":3,\"BIG LIFT LLC S22-62\":34,\"BIMAL TESTING MACHINES SPA PROPORTIONAL VALVE TEST STAND\":239,\"BISHAMON INDUSTRIES CORP OPTIMUS LIFT3K\":11,\"BLAST-IT-ALL 3636-9P M4 DC-3\":1941,\"BLUE GIANT LLC UNABLE TO ID-013-R-14\":25,\"BLUE M (THERMAL PRODUCT SOLUTIONS) CC-09S-M-F\":9,\"BLUE M (THERMAL PRODUCT SOLUTIONS) VO-18C\":1,\"BODINE ELECTRIC CO 64-STA 21\":4,\"BORGWARNER INC CUSTOMER MADE-0469-FT20489\":1,\"BORGWARNER INC CUSTOMER MADE-468-ST12388\":250,\"BORGWARNER INC CUSTOMER MADE-469-FT02458\":3,\"BORGWARNER INC CUSTOMER MADE-469-FT08352\":24,\"BORGWARNER INC CUSTOMER MADE-469-FT10682\":139,\"BORGWARNER INC CUSTOMER MADE-469-FT10750\":50,\"BORGWARNER INC CUSTOMER MADE-469-FT10756\":40,\"BORGWARNER INC CUSTOMER MADE-469-FT10899\":4,\"BORGWARNER INC CUSTOMER MADE-469-FT20296\":1,\"BORGWARNER INC CUSTOMER MADE-469-FT20312\":5,\"BORGWARNER INC UNABLE TO ID-468-7597\":307,\"BOYAR-SCHULTZ SMT (LESTER DETTERBECK ENTERPRISES LTD) CHALLENGER\":1,\"BRADBURY COMPANY INC (BRADBURY GROUP) CUSTOMER MADE-689-1286\":7,\"BRANSON & BRATTON UNABLE TO ID-469-5481\":223,\"BRANSON & BRATTON UNABLE TO ID-469-5635\":78,\"BRANSON & BRATTON UNABLE TO ID-469-5636\":219,\"BRIDGEPORT (HARDINGE INC) SERIES 2\":22,\"BROWN & SHARPE (HEXAGON METROLOGY) 1436\":1,\"BROWN & SHARPE (HEXAGON METROLOGY) UNABLE TO ID-0669-2623\":25,\"BRYANT HEATING & COOLING SYSTEMS 558FEX120000ABGA\":12,\"BUDGIT HOIST (COLUMBUS MCKINNON CORP) 115841-16\":54,\"BUFFALO PUMPS UNABLE TO ID-445-P-FCE-02-PMPB\":9,\"BUHLER AG DELTA ABRASIMET\":22,\"BUNTING MAGNETICS CO VUNTMAGNETGF\":16,\"BURGMASTER CORP VTC-300L\":38,\"BURT (NANTONG BURT CNC MACHINE COMPANY LTD) UNABLE TO ID-004-HU035\":21,\"BURT (NANTONG BURT CNC MACHINE COMPANY LTD) UNABLE TO ID-019-NJ139\":51,\"BUSCH USA (BUSCH GMBH) RC 0063-A005-1001\":9,\"BYSTRONIC INC FILTERBYS VERSION 3\":8,\"CARLE & MONTANARI-OPM SPA SMUN\":38,\"CARLE & MONTANARI-OPM SPA TCS-B\":2,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 25HBB 330A300\":52,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 39EH26\":7,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 50TC-A08A-2A6A0A0A0\":46,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 50TJQ006-601\":18,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) UNABLE TO ID-483-BT-9110\":70,\"CASTOLINE EUTECTIC INTL GAP-3001-DC\":31,\"CATERPILLAR 3N8991-02-F1791NO\":14,\"CATERPILLAR CUSTOMER MADE-001-BUIL013\":1,\"CATERPILLAR CUSTOMER MADE-001-CFB116\":6,\"CATERPILLAR CUSTOMER MADE-001-CFB290\":17,\"CATERPILLAR CUSTOMER MADE-001-EDIFICIO\":67,\"CATERPILLAR CUSTOMER MADE-010-AP358\":13,\"CATERPILLAR CUSTOMER MADE-010-AP364\":8,\"CATERPILLAR CUSTOMER MADE-010-IL023\":14,\"CATERPILLAR CUSTOMER MADE-010-IL027\":13,\"CATERPILLAR CUSTOMER MADE-027-CFM225E\":21,\"CATERPILLAR CUSTOMER MADE-028-CFB5022\":1,\"CATERPILLAR CUSTOMER MADE-028-CFB619\":41,\"CATERPILLAR CUSTOMER MADE-028-CFM1077\":10,\"CATERPILLAR CUSTOMER MADE-028-CFM1133\":16,\"CATERPILLAR CUSTOMER MADE-028-CFM1192\":5,\"CATERPILLAR CUSTOMER MADE-028-CFM1283\":249,\"CATERPILLAR CUSTOMER MADE-028-CFM256E\":1,\"CATERPILLAR CUSTOMER MADE-028-CFM4300\":61,\"CATERPILLAR CUSTOMER MADE-028-CFM4369\":8,\"CATERPILLAR CUSTOMER MADE-0761-PT-L-SL-CAU-29-M33234\":19,\"CATERPILLAR CUSTOMER MADE-0761-PT-L-SL-FLP-76-FPS008\":1,\"CATERPILLAR CUSTOMER MADE-0761-PT-L-SL-FLP-76-FPS018\":1,\"CATERPILLAR CUSTOMER MADE-402-EE1003\":17,\"CATERPILLAR CUSTOMER MADE-402-FA0009\":25,\"CATERPILLAR CUSTOMER MADE-402-WSK15\":12,\"CATERPILLAR CUSTOMER MADE-474-2380\":48,\"CATERPILLAR V 140\":3,\"CHEVALIER MACHINERY USA FSG-2A1020\":27,\"CHICAGO PNEUMATIC CP-0351\":38,\"CHICAGO RIVET & MACHINE CO 912\":51,\"CINCINNATI 350MX10\":117,\"CINCINNATI 90 CBII-6\":51,\"CINCINNATI CCGRINDER-CCI\":3,\"CINCINNATI CINEL 60\":3,\"CINCINNATI CUSTOMER MADE-490-WV11110\":80,\"CINCINNATI FAN HDBI-330\":5,\"CINCINNATI RK\":98,\"CLAUSING COLCHESTER (600 GROUP) UNABLE TO ID-624-468\":2,\"CLAY UNABLE TO ID-492-1494\":40,\"CLEAVER-BROOKS NB100D35300\":92,\"CLOOS ROBOTIC WELDING INC 2008\":40,\"COE PRESS EQUIPMENT CORP CPRF SM-3-42\":58,\"COFFING HOISTS (COLUMBUS MCKINNON CORP) ELC-0516-3\":9,\"COGNEX CORP UNABLE TO ID-492-10774\":13,\"COLCHESTER LATHE CO (COLCHESTER-HARRISON 600 GROUP) TRIUMPH 7 1/2 IN\":16,\"COLUMBUS MCKINNON CORP UNABLE TO ID-0727-H-16\":39,\"CONAIR FRANKLIN CH54\":24,\"CONAIR GROUP DL15\":5,\"CONAIR GROUP UNABLE TO ID-020-AU-1183\":1,\"CONCO (WHITING CORP) UNABLE TO ID-010-GJ204\":7,\"CONSTRUCCIONES MECANICAS CABALLE CRM-25001\":230,\"CROWN BATTERY CORP 3-18-750\":14,\"CROWN EQUIPMENT CORP SC 4000\":10,\"CRUSTBUSTER-SPEED KING INC UNABLE TO ID-630-LFR-014\":22,\"CTS (CINCINNATI TEST SYS) CUSTOMER MADE-490-WV12257\":43,\"CTS (CINCINNATI TEST SYS) J75862556\":204,\"CUSTOMER MADE 21B1000021\":64,\"CUSTOMER MADE 5510\":15,\"CUSTOMER MADE CUSTOMER MADE-0034-RCK15-CRO\":46,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-1D-OPCARGADOR\":21,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-8A-OPVIBRON\":5,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-CEL4-OPVIBRON/043\":81,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-ROL5-OPVIBRON\":3,\"CUSTOMER MADE CUSTOMER MADE-0034-TC10-11A-OPVIBRON\":16,\"CUSTOMER MADE CUSTOMER MADE-0034-TC2-2U-OP121-3\":20,\"CUSTOMER MADE CUSTOMER MADE-0034-TC2-PTA3-OP33-3\":2,\"CUSTOMER MADE CUSTOMER MADE-0034-TC3-5A-OPVIBRON\":7,\"CUSTOMER MADE CUSTOMER MADE-0034-TC4-4B-OP121\":4,\"CUSTOMER MADE CUSTOMER MADE-0034-TC5-2G-OP014\":3,\"CUSTOMER MADE CUSTOMER MADE-0034-TC7-13A-OP37\":55,\"CUSTOMER MADE CUSTOMER MADE-0034-TC7-4D-OP122\":9,\"CUSTOMER MADE CUSTOMER MADE-0034-TC8-2J-OP00-26\":1,\"CUSTOMER MADE CUSTOMER MADE-020-GB045\":81,\"CUSTOMER MADE CUSTOMER MADE-0213-HC56018\":43,\"CUSTOMER MADE CUSTOMER MADE-0565-43419\":13,\"CUSTOMER MADE CUSTOMER MADE-0565-D09\":2,\"CUSTOMER MADE CUSTOMER MADE-0565-WE38675\":20,\"CUSTOMER MADE CUSTOMER MADE-0565-YD7\":3,\"CUSTOMER MADE CUSTOMER MADE-0637-CNV02\":8,\"CUSTOMER MADE CUSTOMER MADE-0669-2439\":1,\"CUSTOMER MADE CUSTOMER MADE-0669-2547\":5,\"CUSTOMER MADE CUSTOMER MADE-0669-2991\":4,\"CUSTOMER MADE CUSTOMER MADE-0669-528\":5,\"CUSTOMER MADE CUSTOMER MADE-0698-C110001-1\":36,\"CUSTOMER MADE CUSTOMER MADE-0706-CN-0939\":19,\"CUSTOMER MADE CUSTOMER MADE-0707-B1-POC-03-4-DECK\":7,\"CUSTOMER MADE CUSTOMER MADE-0733-B294\":12,\"CUSTOMER MADE CUSTOMER MADE-0733-M3364\":13,\"CUSTOMER MADE CUSTOMER MADE-0733-RR18\":1,\"CUSTOMER MADE CUSTOMER MADE-0733-RR5\":3,\"CUSTOMER MADE CUSTOMER MADE-0734-35BU15\":239,\"CUSTOMER MADE CUSTOMER MADE-0734-35BU4\":218,\"CUSTOMER MADE CUSTOMER MADE-0734-35CB2\":925,\"CUSTOMER MADE CUSTOMER MADE-0735-E-9-QUENCH TROUGH DRAIN PIT SYSTEM\":3,\"CUSTOMER MADE CUSTOMER MADE-0811-811-114\":6,\"CUSTOMER MADE CUSTOMER MADE-0811-811-501\":2,\"CUSTOMER MADE CUSTOMER MADE-0812-790\":11,\"CUSTOMER MADE CUSTOMER MADE-171-155364\":1,\"CUSTOMER MADE CUSTOMER MADE-171-201026\":1,\"CUSTOMER MADE CUSTOMER MADE-171-202012\":1,\"CUSTOMER MADE CUSTOMER MADE-176-BIN061\":2,\"CUSTOMER MADE CUSTOMER MADE-176-CART028\":1,\"CUSTOMER MADE CUSTOMER MADE-178-CPCON0024\":20,\"CUSTOMER MADE CUSTOMER MADE-178-CPCON4020B\":3,\"CUSTOMER MADE CUSTOMER MADE-178-PXDMP0041\":1,\"CUSTOMER MADE CUSTOMER MADE-200-200470\":1,\"CUSTOMER MADE CUSTOMER MADE-200-200610\":3,\"CUSTOMER MADE CUSTOMER MADE-200-2243C\":1,\"CUSTOMER MADE CUSTOMER MADE-200-2527D63T5A\":4,\"CUSTOMER MADE CUSTOMER MADE-200-4180B09\":38,\"CUSTOMER MADE CUSTOMER MADE-201-MP0093\":29,\"CUSTOMER MADE CUSTOMER MADE-211-K150\":6,\"CUSTOMER MADE CUSTOMER MADE-211-S901\":30,\"CUSTOMER MADE CUSTOMER MADE-313-PAINT-01\":180,\"CUSTOMER MADE CUSTOMER MADE-408-PB50\":30,\"CUSTOMER MADE CUSTOMER MADE-408-TAB2\":124,\"CUSTOMER MADE CUSTOMER MADE-408-TAC5\":189,\"CUSTOMER MADE CUSTOMER MADE-424-1-464-021\":3,\"CUSTOMER MADE CUSTOMER MADE-424-5-454-040\":2,\"CUSTOMER MADE CUSTOMER MADE-424-5-456-011\":1,\"CUSTOMER MADE CUSTOMER MADE-432-ACCUM PO\":157,\"CUSTOMER MADE CUSTOMER MADE-432-AIR SEP\":10,\"CUSTOMER MADE CUSTOMER MADE-468-305\":84,\"CUSTOMER MADE CUSTOMER MADE-468-ST10621\":47,\"CUSTOMER MADE CUSTOMER MADE-468-ST11237\":1,\"CUSTOMER MADE CUSTOMER MADE-468-ST11815\":18,\"CUSTOMER MADE CUSTOMER MADE-468-ST11845\":111,\"CUSTOMER MADE CUSTOMER MADE-468-ST11850\":71,\"CUSTOMER MADE CUSTOMER MADE-468-ST12077\":64,\"CUSTOMER MADE CUSTOMER MADE-468-ST12188\":22,\"CUSTOMER MADE CUSTOMER MADE-468-ST12199\":1,\"CUSTOMER MADE CUSTOMER MADE-468-ST12660\":10,\"CUSTOMER MADE CUSTOMER MADE-468-ST12720-3\":94,\"CUSTOMER MADE CUSTOMER MADE-468-ST3106\":6,\"CUSTOMER MADE CUSTOMER MADE-468-ST9376\":21,\"CUSTOMER MADE CUSTOMER MADE-468-ST9801\":65,\"CUSTOMER MADE CUSTOMER MADE-474-2104\":25,\"CUSTOMER MADE CUSTOMER MADE-490-WV10822\":56,\"CUSTOMER MADE CUSTOMER MADE-490-WV11122\":1,\"CUSTOMER MADE CUSTOMER MADE-490-WV20492\":205,\"CUSTOMER MADE CUSTOMER MADE-490-WV20686\":12,\"CUSTOMER MADE CUSTOMER MADE-490-WV21547\":20,\"CUSTOMER MADE CUSTOMER MADE-490-WV21888\":34,\"CUSTOMER MADE CUSTOMER MADE-492-2556\":372,\"CUSTOMER MADE CUSTOMER MADE-492-5734\":5,\"CUSTOMER MADE CUSTOMER MADE-492-6289\":16,\"CUSTOMER MADE CUSTOMER MADE-492-6656\":52,\"CUSTOMER MADE CUSTOMER MADE-492-6965\":40,\"CUSTOMER MADE CUSTOMER MADE-492-7587\":2,\"CUSTOMER MADE CUSTOMER MADE-492-8475-1\":13,\"CUSTOMER MADE CUSTOMER MADE-492-8903\":194,\"CUSTOMER MADE CUSTOMER MADE-492-9286\":2,\"CUSTOMER MADE CUSTOMER MADE-492-9485\":16,\"CUSTOMER MADE CUSTOMER MADE-492-9490\":3,\"CUSTOMER MADE CUSTOMER MADE-595-252\":4,\"CUSTOMER MADE CUSTOMER MADE-595-7212\":6,\"CUSTOMER MADE CUSTOMER MADE-636-CMA-005\":49,\"CUSTOMER MADE CUSTOMER MADE-636-CMA-041\":49,\"CUSTOMER MADE CUSTOMER MADE-637-CF05\":3,\"CUSTOMER MADE CUSTOMER MADE-637-CL41\":9,\"CUSTOMER MADE DAKE\":1,\"CUSTOMER MADE-0492-5222-3 ALUM TANK\":26,\"CYCLONAIRE UNABLE TO ID-535-DC-2\":31,\"DAEWOO PUMA 230\":123,\"DAIKIN UNABLE TO ID-0568-1130BH098\":16,\"DAIKIN UNABLE TO ID-0568-1130BH107\":16,\"DALMEC SPA UNABLE TO ID-0568-1130HJ5731\":13,\"DALMEC SPA UNABLE TO ID-0568-1130HJ5732\":19,\"DALMEC SPA UNABLE TO ID-0568-1130HJ5742\":17,\"DANFOSS CUSTOMER MADE-625-1011658\":10,\"DANFOSS CUSTOMER MADE-625-1012857\":14,\"DANFOSS CUSTOMER MADE-625-3523\":1,\"DATA AIRE INC DRCU-0312-15\":19,\"DAYTON 11K281\":3,\"DAYTON 3YB75H\":27,\"DAYTON 4C837\":16,\"DAYTON 4RJ44\":8,\"DAYTON 4YU89\":14,\"DAYTON CUSTOMER MADE-636-TUB-023\":20,\"DAYTON UNABLE TO ID-0669-ATS-054\":1,\"DE SMITH INC LV2515\":123,\"DE SMITH INC W-2469A\":2,\"DELTA POWER EQUIPMENT CORP UNABLE TO ID-689-167\":5,\"DEMAG (TEREX MHPS GMBH) DCM PRO\":5,\"DEMAG (TEREX MHPS GMBH) EKDR-COM\":26,\"DENISON MULTIPRESS (QPI MULTIPRESS INC) S087MC257D242A72A59S\":4,\"DESPATCH INDUSTRIES (ITW CO) C-188\":14,\"DETROIT BROACH & MACHINE CO 5X48\":907,\"DETROIT HOIST UNABLE TO ID-0761-PT-L-L1-CRN-48-HX20054\":16,\"DETROIT HOIST UNABLE TO ID-402-HX7102\":36,\"DONALDSON TORIT 90-5 CAB\":195,\"DONALDSON TORIT DFT 2-8\":171,\"DONALDSON TORIT UNABLE TO ID-0733-BF559\":8,\"DONALDSON TORIT UNABLE TO ID-649-I-1507\":25,\"DONALDSON TORIT VF-2000\":22,\"DONALDSON TORIT VS-1500\":11,\"DOUGLAS MACHINE INC 18-125-13\":4,\"DUMORE CORP UNABLE TO ID-0669-1753\":2,\"DUSCOVENT ENGINEERING LTD UNABLE TO ID-492-10688\":71,\"EASOM AUTOMATION SYSTEMS INC (LINCOLN ELECTRIC CO) CUSTOMER MADE-687-FW-01\":9,\"EATON 9355-10\":2,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-0727-OL-1496\":1,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-0727-OL-7446\":1,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-0727-OL-7474-1\":1,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-491-TS50\":5,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-491-TS51\":17,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-698-C100002-2\":16,\"EATON COOPER POWER SYSTEMS UNABLE TO ID-200-5129C\":36,\"EATON CUSTOMER MADE-0017-E21814\":6,\"EATON CUSTOMER MADE-004-COLLET 8\":20,\"EATON CUSTOMER MADE-006-EA1097\":19,\"EATON CUSTOMER MADE-006-FAC-22\":6,\"EATON CUSTOMER MADE-006-FAC-32\":3,\"EATON CUSTOMER MADE-006-FAC-48\":7,\"EATON CUSTOMER MADE-017-E19998\":6,\"EATON CUSTOMER MADE-019-FILTRATION FACILITY\":2,\"EATON CUSTOMER MADE-0491-PL10\":141,\"EATON CUSTOMER MADE-052-E0007\":11,\"EATON CUSTOMER MADE-052-E0055\":1,\"EATON CUSTOMER MADE-200-1004C\":9,\"EATON CUSTOMER MADE-649-I-2067\":9,\"EATON CUSTOMER MADE-664-8753-2\":1,\"EATON CUSTOMER MADE-664-BNF1304AB-1\":1,\"EATON CUSTOMER MADE-664-CND606AA\":1,\"EATON CUSTOMER MADE-664-DA600AH\":1,\"EATON CUSTOMER MADE-664-DAF608BT\":1,\"EATON CUSTOMER MADE-664-DBD1304AG\":3,\"EATON CUSTOMER MADE-664-FD608CM\":1,\"EATON CUSTOMER MADE-664-NH3000804-10 & 805-10\":1,\"EATON CUSTOMER MADE-664-PR1903AD\":10,\"EATON UNABLE TO ID-0020-GB059\":13,\"ECLIPSE AUTOMATION INC UNABLE TO ID-468-7478\":51,\"EDGE TECHNOLOGIES TURBO 3-38\":186,\"EEMCO (ERIE ENGINE & MANUFACTURING CO) UNABLE TO ID-0734-31RBR-MILL2\":54,\"ELECTRO-MATIC PRODUCTS CO UNABLE TO ID-027-CFM5041\":17,\"ELECTRONIC MEASUREMENTS INC (TDK-LAMBDA AMERICAS INC) UNABLE TO ID-405-SRQ00030\":13,\"EM BENSON COMPANY LLC UNABLE TO ID-282-1035\":19,\"EMPIRE ABRASIVE EQUIPMENT PF-3648\":791,\"ENERPAC UNABLE TO ID-0733-M1789\":31,\"ENTOLETER LLC 60MOD845\":1,\"EPWORTH MILL AE010530A\":105,\"ERCA SA (IMA DAIRY & FOOD HOLDING GMBH) UNABLE TO ID-0029-ENV-EF600-07\":10,\"ERNST (PAUL ERNST MASCHINENFABRIK GMBH) 80066\":2,\"EVANS POWER EQUIPMENT UNABLE TO ID-010-CS010\":54,\"EVERGREEN HIGH VOLTAGE LLC HVFDC-600-10-RS\":4,\"EXIDE TECHNOLOGIES G3-18-865\":28,\"FALK (REXNORD CORP) UNABLE TO ID-445-P-SPE-02-RDX\":88,\"FANUC AMERICA CORP D21MIA5\":35,\"FARR CO (CAMFIL GROUP) GS20\":11,\"FARREL CORP UNABLE TO ID-535-FINISH MILL TCU\":13,\"FARRIS CONVEYOR C000-VT\":258,\"FELLOWS (BOURN & KOCH INC) 4A-GS\":29,\"FINN-POWER (LILLBACKA POWERCO OY) FP20 VS\":32,\"FINNPOWER CRIMPING PRODUCTS (HYDRAPOWER DYNAMICS LTD) FP120UC\":76,\"FINNPOWER CRIMPING PRODUCTS (HYDRAPOWER DYNAMICS LTD) TRS6SB\":3058,\"FLEX-KLEEN (MET-PRO ENVIRONMENTAL AIR SOLUTIONS) 84-BVBC-48IIIG\":277,\"FLEXLINK SYSTEMS INC (COESIA CO) CUSTOMER MADE-490-277-TEST-RAK2\":53,\"FLOWSERVE DURCO (FLOWSERVE CORP) 3986\":1,\"FMT (FINDLAY MACHINE & TOOL) UNABLE TO ID-0733-M3830\":166,\"FRANKLIN ELECTRIC COMPANY INC UNABLE TO ID-006-EA0826\":9,\"FRANKLIN MANUFACTURING INC F5100X6\":127,\"FREIGHTLINER (DAIMLER TRUCKS NORTH AMERICA LLC) M2 106\":7,\"FROMMELT INDUSTRIES (RITE-HITE) UNABLE TO ID-178-RUD-22\":2,\"FUJI MACHINE MANUFACTURING COMPANY LTD UNABLE TO ID-673-SP-05\":33,\"FUJITSU GENERAL AMERICA INC (FUJITSU GENERAL LTD) AOU30CLX1\":18,\"FULLER ULTRA VIOLET CORP FG 2036\":2,\"FURNAS ELECTRIC CO (SIEMENS INDUSTRY INC) 89BFA1C82011\":14,\"GAMM INDUSTRIES INC 48X36\":2,\"GARDNER DENVER INC A5CDL13K\":14,\"GARDNER DENVER INC EAM99C\":53,\"GEI AUTOWRAPPERS (GEI PROCESSING PACKAGING MACHINERY LTD) FLOWTRONIC 120\":4,\"GENERAL PUMP (INTERPUMP GROUP SRL) TS1041\":87,\"GERHARD SCHUBERT GMBH UNABLE TO ID-178-CPROB1017\":1,\"GFS (GLOBAL FINISHING SOLUTIONS LLC) SDG-1512PDT-18-BB-S\":7,\"GFS (GLOBAL FINISHING SOLUTIONS LLC) WBS-141020-DT-CT-S\":115,\"GIDDINGS & LEWIS (FIVES) UNABLE TO ID-027-CFM546\":270,\"GOODMAN MANUFACTURING COMPANY LP VSX130301AA\":18,\"GORBEL INC GLCS-FS-2000-20-2173\":26,\"GORBEL INC GLCSLS-FS-4000\":4,\"GORBEL INC UNABLE TO ID-0568-1130HX5827\":16,\"GORBEL INC UNABLE TO ID-474-2211\":1,\"GORBEL INC WSJ360-NP6-1000-13-8\":15,\"GRACO INC CUSTOMER MADE-0035-DEW02450\":6,\"GRACO INC UNABLE TO ID-0564-BP498\":52,\"GRACO INC UNABLE TO ID-0624-6512\":20,\"GRANT MANUFACTURING & MACHINE CO (GRANT RIVETERS) 183\":18,\"GREENERD PRESS & MACHINE COMPANY INC HPB-3\":95,\"GT SCHMIDT (SCHMIDT MARKING SYSTEMS) 2X3S\":5,\"GUSHER PUMPS (RUTHMAN CO) 11022K-XL-5-AG-A-TC\":7,\"GYPTECH AB UNABLE TO ID-432-B-BUNDLE CULL TRANSFER\":166,\"GYPTECH AB UNABLE TO ID-633-B1-SAW-1822-20M02\":9,\"HAAS AUTOMATION INC SL-20B\":28,\"HAAS AUTOMATION INC TM-2P\":165,\"HAAS AUTOMATION INC VF-1B\":125,\"HADEN INTERNATIONAL GROUP INC UNABLE TO ID-0691-BUA4314\":5,\"HAEFELY HIPOTRONICS (HUBBELL INC) 7100-56A-B\":22,\"HAMMOND ROTO FINISH 7229\":3,\"HAMMOND ROTO FINISH HZ-30\":6,\"HAMMOND ROTO FINISH ST-1\":236,\"HANEL STORAGE SYS (HANEL GMBH & CO KG) 123.689/1-2\":31,\"HANKISON (SPX FLOW) DBP2100-460V-MSDC/DWPTM\":328,\"HANSFORD PARTS & PRODUCTS UNABLE TO ID-664-0741\":15,\"HANSON-VAN WINKLE MUNNING CO DC GENERATOR HVW\":4,\"HARDFACE ALLOYS INC (HAI ADVANCED MATERIAL SPECIALISTS INC) RD20IADEX\":59,\"HARDINGE INC CS-51\":673,\"HARRINGTON HOISTS INC 64SY4886\":10,\"HARRINGTON HOISTS INC ER1A-63SY1282\":7,\"HARRINGTON HOISTS INC ER2A-1ASY7857\":13,\"HARRINGTON HOISTS INC TCR-1000P\":2,\"HARTWIG INC LU300-2SC600\":204,\"HAUCK MANUFACTURING CO HT-100\":8,\"HAWK TECHNOLOGY LTD UNABLE TO ID-0691-X68224\":1,\"HAYNES ENGINEERING & MANUFACTURING INC UNABLE TO ID-649-I-1601\":58,\"HEALD MACHINE INC (CINCINNATI-HEALD) 2EF73\":22,\"HERKULES EQUIPMENT CORP G200\":2,\"HERR-VOSS STAMCO INC (ANDRITZ) CUSTOMER MADE-468-1054\":63,\"HINES INDUSTRIES INC HC-10\":2,\"HMT (HORN MACHINE TOOLS INC) CNC80TBREL\":17,\"HOBART (ITW FOOD EQUIPMENT GROUP NORTH AMERICA) AM15\":18,\"HOFMANN MESS- UND AUSWUCHTTECHNIK GMBH & COMPANY KG HL16-1\":5,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-841206\":7,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE4518\":101,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE4521\":10,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE4845\":2,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE5178\":9,\"HONEYWELL INTERNATIONAL INC FENDALL PURE FLOW 1000\":5,\"HYPERTHERM INC POWERMAX 85\":228,\"HYTROL CONVEYOR COMPANY INC UNABLE TO ID-0701-ATS007\":41,\"HYTROL CONVEYOR COMPANY INC UNABLE TO ID-311-LOM-CNV1\":2,\"HYTROL CONVEYOR COMPANY INC UNABLE TO ID-630-CNV-067\":2,\"IDC CORP CUSTOMER MADE-424-5-452-046\":15,\"IEMCA (BUCCI INDUSTRIES) UNABLE TO ID-0812-492-FIMAT-BAR\":1,\"IES SYSTEMS INC IES12542\":92,\"ILLINOIS CRANE INC UNABLE TO ID-0733-HX616\":10,\"IMS (INDUSTRIAL MOLDING SUPPLIES CO) 115675-DRUM SEPARATOR\":4,\"IMVDESIGN SRO CUSTOMER MADE-490-WV21390\":38,\"INDEX TRAUB TNM 28\":44,\"INDUSTRIAL MACHINE SPECIALTIES CUSTOMER MADE-535-CHILLER-60\":8,\"INFICON HLD5000\":31,\"INGERSOLL RAND NVC800A400\":57,\"INTENSITY UNABLE TO ID-0024-LN11FCL00007\":30,\"IPSEN USA DLR-4-4-E\":1,\"ITT INDUSTRIAL PRODUCTS P21 5-409-23-061-002\":17,\"JACK MILLER CO FR\":83,\"JAGER COLD SAWS FHC-275SA\":48,\"JAMES BRINKLEY CO UNABLE TO ID-445-P-WBS-01-AGT\":46,\"JANITROL (DAIKEN INDUSTRIES LTD) PC036-3B\":52,\"JCR AUTOMATION INC LS1500\":65,\"JD NEUHAUS UNABLE TO ID-0483-BOXING CELL HOIST\":7,\"JET TOOLS (JPW IND) 1024P\":7,\"JET TOOLS (JPW IND) J-8201VS\":7,\"JLG INDUSTRIES INC (OSHKOSH CORP) 20MVL\":16,\"JUNGHEINRICH (MCFA INC) UNABLE TO ID-0568-1130V3001\":1,\"KALAMAZOO INDUSTRIES INC S6M\":12,\"KALAMAZOO INDUSTRIES INC UNABLE TO ID-0707-FMS-016\":1,\"KBA-METRONIC GMBH (KOENIG & BAUER AG) HSAJC\":19,\"KEARNEY & TRECKER (FIVES GROUP) 4CSM\":2,\"KENT OWENS 2-20-DS\":170,\"KEPPEL SEGHERS UK LTD 6V001\":49,\"KEYENCE CORP CUSTOMER MADE-0176-ASP FLATNESS CHECKER M401301\":5,\"KNUTH MACHINE TOOL USA INC UFM6\":14,\"KO LEE (LEBLOND LTD) B6060\":7,\"KOIKE ARONSON INC HD240R\":28,\"KOIKE ARONSON INC UNABLE TO ID-010-PS244\":14,\"KOMATSU WA500-8\":263,\"KONECRANES CXT30410025P26FCL0F\":87,\"KONECRANES UNABLE TO ID-010-GB006\":37,\"KONECRANES UNABLE TO ID-010-GE023\":12,\"KONECRANES UNABLE TO ID-010-GE062\":20,\"KONECRANES UNABLE TO ID-010-GE073\":7,\"KOOLANT KOOLERS HCV15000-PR-NF-FILT-H\":8,\"KRRAS MACHINE MANUFACTURER RAS 206\":103,\"KURTZ ERSA CORP (KURTZ HOLDING GMBH & COMPANY BETEILIGUNGS KG) IRPL650\":39,\"L&P MACHINE 8488 RT 305\":402,\"L&P MACHINE UNABLE TO ID-535-LETOFF-14\":1,\"L&P MACHINE UNABLE TO ID-535-LETOFF-15\":5,\"L&P MACHINE UNABLE TO ID-535-LETOFF-62\":4,\"LAGUN (REPUBLIC LAGUN MACHINE TOOL CO) FTV-1S\":44,\"LANCO GROUP OF COMPANIES AAA-S10-73000\":11,\"LANCO GROUP OF COMPANIES AAA-X11-00800\":60,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-0490-WV21377-360\":59,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-0490-WV21935\":157,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN01-LP01-01\":5,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN01-LP02-43\":4,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN02-LP02-04\":2,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN03-LP02-07\":4,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN04-LP01-26\":1,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN04-LP02-17\":1,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP01-07\":4,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP02-12\":3,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP02-48\":3,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP03-17\":1,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-TL5-112\":1,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV11795\":1,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV12019\":67,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV20860\":148,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV20891\":25,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV20892\":18,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV21333\":181,\"LANCO GROUP OF COMPANIES UNABLE TO ID-0490-WV21178\":48,\"LARSON SYSTEM INC FLASH 11\":122,\"LASCHET (HEINZ BERGER MASCHINENFABRIK GMBH & COMPANY KG) UNABLE TO ID-0669-2641\":27,\"LAUFFER USA CUSTOMER MADE-468-7558\":74,\"LEBLOND LTD REGAL 15 INCH\":8,\"LEBLOND LTD UNABLE TO ID-0772-M327\":3,\"LENNOX INTERNATIONAL INC HS29-060-9Y\":8,\"LENNOX INTERNATIONAL INC R213366KR\":5,\"LINCOLN ELECTRIC CO PRECISION TIG 375\":34,\"LINCOLN ELECTRIC CO REALWELD\":3,\"LITTELL 60-30\":1,\"LVD GROUP (STRIPPIT INC) PPEB 150/10 MNC95\":7,\"M&I DOOR SYSTEMS LTD UNABLE TO ID-689-4625\":7,\"M&J MACHINE SHOP INC 9726 C\":8,\"MAGNAFLUX ZB100F\":13,\"MAGNATECH INTERNATIONAL INC 225-II\":196,\"MANCHESTER TANK (MCWANE INC) UNABLE TO ID-0006-CATIII-002\":7,\"MANITOU 120 AETJ C3D\":41,\"MARATHON EQUIPMENT CO 6030\":6,\"MARATHON EQUIPMENT CO RJ-100SC\":19,\"MARKETEER CO 323\":37,\"MARLEY COOLING TECHNOLOGIES 222-721 NC 17\":82,\"MARTIN ROLLSTAND 84X60W RH\":459,\"MARTIN SPROCKET & GEAR INC 21G5000002\":27,\"MARTIN SPROCKET & GEAR INC CUSTOMER MADE-432-DRIBBLE BIN SCREW CONV 1\":1,\"MASON & SONS UNABLE TO ID-0733-HX6\":7,\"MATTISON MACHINE WORKS NO. 24\":20,\"MAUMEE VALLEY FABRICATORS CUSTOMER MADE-432-DRIBBLE BIN\":2,\"MAXIMUM CONTROLS LLC MAX 2200 P\":1,\"MAZAK CORP HCN10800-II\":360,\"MAZAK CORP VTC-30C\":11,\"MAZAK CORP YB-L400 A8M 4E\":32,\"MCGILL AIRFLOW LLC UNABLE TO ID-0733-BH1030\":4,\"MCM (MICHIGAN CUSTOM MACHINES INC) SO2668\":5,\"MCM (MICHIGAN CUSTOM MACHINES INC) SO3564\":636,\"MELTON MACHINE & CONTROL CO 132312-16-A-125\":3,\"MELTON MACHINE & CONTROL CO 132312-16-A-139\":1,\"MELTON MACHINE & CONTROL CO LT-01\":7,\"MELTON MACHINE & CONTROL CO UNABLE TO ID-673-MWB-15\":3,\"MESH CUSTOMER MADE-436-BT-1846\":92,\"METKON INSTRUMENTS INC METACUT 320\":1,\"METTLER-TOLEDO INTERNATIONAL INC UNABLE TO ID-492-835\":14,\"MFI (MASS FINISHING INC) HZ-160\":21,\"MFL USA SERVICE CORP (CABALLE) CES-18X630 D\":33,\"MILACRON PLASTICS A-S110IA\":119,\"MILFORD (ORBITFORM LLC) 256\":56,\"MILLER ELECTRIC MANUFACTURING CO (ILLINOIS TOOL WORKS CORP) DELTAWELD 451\":264,\"MITTS & MERRILL LP MS-4220\":155,\"MODERN MACHINE TOOL CO 2K\":126,\"MODINE MANUFACTURING CO PD350AE0130\":20,\"MODINE MANUFACTURING CO UNABLE TO ID-0733-BV2019\":1,\"MONARCH LATHES 16IN\":34,\"MOTION IND UNABLE TO ID-0726-GS-120-CAST02-HPU\":55,\"MOTOMAN (YASKAWA AMERICA INC) UNABLE TO ID-0565-CELL 7-RBT 2\":30,\"MS MACHINING SYSTEMS INC UNABLE TO ID-0691-BUA6008\":8,\"MTA AUTOMATION INC TAE EVO 161\":12,\"MYERS MIXERS LLC V600-20-935\":12,\"NATIONAL MACHINERY LLC 1/4-5 BM\":72,\"NATIONAL RIVET & MANUFACTURING CO 1600 STR\":253,\"NATIONAL STANDARD UNABLE TO ID-0735-C-4-CAT PULLER 2\":21,\"NELSON STUD WELDING 101\":238,\"NEW HOLLAND DRYER DIV (FANTA EQUIPMENT CO) K-11\":9,\"NEWCO ENTERPRISES INC DM 1416\":17,\"NIEHOFF ENDEX NORTH AMERICA INC ARH 800.1.3.R\":556,\"NIEHOFF ENDEX NORTH AMERICA INC MMH 121.E2.1.A.16.2618\":18,\"NIEHOFF ENDEX NORTH AMERICA INC MSM 85.12.1.A.01.V13\":66,\"NILFISK ADVANCED 6340\":33,\"NILFISK ADVANCED CONDOR XL AXP\":3,\"NITTO SEIKO COMPANY LTD FM503H\":3,\"NITTOKU ENGINEERING COMPANY LTD AN480-12-30\":348,\"NITTOKU ENGINEERING COMPANY LTD AN720-12-30\":16,\"NITTOKU ENGINEERING COMPANY LTD CUSTOMER MADE-0490-277-WINDER 1-002\":4,\"NITTOKU ENGINEERING COMPANY LTD CUSTOMER MADE-0490-277-WINDER 1-003\":3,\"NORDSON CORP 3100-2AA32\":26,\"NORDSON CORP 3400-1EA32\":21,\"NORDSON CORP EXCEL 2000\":281,\"NORDSON CORP PROBLUE MELTER\":4,\"NORDSON CORP UNABLE TO ID-171-PL01G\":24,\"NORDSON UNABLE TO ID-436-BT-1503\":2,\"NORTH EAST MACHINE & TOOL CO UNABLE TO ID-649-I-3056\":3,\"NORTHWEST DRYER & MACHINERY INC UNABLE TO ID-671-02685\":13,\"NOVATEC INC MDM-25 HOPPER\":6,\"NOVATEC INC UNABLE TO ID-020-AU-1578\":3,\"NOVATEC INC UNABLE TO ID-020-AU-2206\":4,\"NUTEC BICKLEY 12-2524\":184,\"NYB (NEW YORK BLOWER CO) 2014-13777-01\":15,\"O&R PRECISION GRINDING INC 33758A\":287,\"OERLIKON LEYBOLD VACUUM GMBH SOGEVAC SV 40 BI\":24,\"OKAMOTO CORP ACC-20.24DX\":2,\"OKUMA AMERICA CORP MC-1000H\":463,\"OLAMEF USA INC TP6/V-1/EC\":21,\"OMA USA INC UNABLE TO ID-0568-1130M9596\":69,\"OMA USA INC UNABLE TO ID-0568-1130M9597\":87,\"OMRON SCIENTIFIC TECHNOLOGIES INC CUSTOMER MADE-0727-CPSX-03560\":181,\"ORION (SUNSTONE) 150S V2\":2,\"P&H 60M-619X6-40TR20-JAM\":210,\"P&H CD-36633\":101,\"PANGBORN GROUP S880938\":746,\"PARKER HANNIFIN CORP 75-780\":3,\"PARKER HANNIFIN CORP C-72520 F50A\":1,\"PARKER HANNIFIN CORP CUSTOMER MADE-0035-DEW02423\":4,\"PARKER HANNIFIN CORP CUSTOMER MADE-0035-DEW02501\":10,\"PAULI SYSTEMS INC DH-48\":1,\"PENTALIFT EQUIPMENT CORP UNABLE TO ID-0707-B1-DUN-10-6\":38,\"PENTALIFT EQUIPMENT CORP UNABLE TO ID-0707-B1-STK-06\":3,\"PIRANHA P50\":3,\"PLASTICRAFT (NORMAN HAY GROUP) CUSTOMER MADE-0052-MFD30\":1,\"PLATO PRODUCTS INC (ITW) SP-500T\":72,\"POLARCOOL (HH TECHNOLOGIES) PAC2K363S\":1,\"POLARCOOL (HH TECHNOLOGIES) UNABLE TO ID-633-G-SWAMP-10\":6,\"POLARCOOL (HH TECHNOLOGIES) UNABLE TO ID-633-G-SWAMP-11\":50,\"POURTIER (GAUDER GROUP) DTF2600E\":124,\"PRAB INC CUSTOMER MADE-468-7075\":2,\"PRAB INC S-06125-KA\":155,\"PRAXAIR TECHNOLOGY INC UNABLE TO ID-015-MC-2038\":126,\"PREMIER 18K750B3\":1,\"PRESTO LIFTS INC UNABLE TO ID-469-4865-B\":2,\"PRESTO LIFTS INC XS36-10F\":1,\"PRESTOLITE POWER 1050H3-12C\":39,\"PRETZELS INC CUSTOMER MADE-630-CNV-042\":5,\"PRETZELS INC CUSTOMER MADE-630-CNV-085\":37,\"PRIMA POWER MT8-C\":11,\"PROTO-1 MANUFACTURING LLC RFM-2008S\":1,\"QUADRANT CUSTOMER MADE-468-322\":41,\"QUALITEK ENGINEERING & MANUFACTURING INC CUSTOMER MADE-176-M401266\":126,\"RAMCO EQUIPMENT CORP UNABLE TO ID-027-CFM035\":59,\"RANSOHOFF CUSTOMER MADE-490-WV10615\":892,\"RANSOME WELDING POSITIONING EQUIPMENT 25P\":32,\"RAPID INDUSTRIES INC 1310901\":195,\"RAYMOND CORP 20P40TN\":47,\"RAYMOND CORP 2T-B-96-03455\":1,\"RAYMOND CORP 8300\":5,\"RAYMOND CORP EMB\":16,\"RAYNOR GARAGE DOORS (RAYNOR WORLDWIDE) UNABLE TO ID-0707-OHD-072A\":11,\"READING BAKERY SYS (MARKEL FOOD GROUP) J109-144-110\":41,\"READING BAKERY SYS (MARKEL FOOD GROUP) UNABLE TO ID-630-BCT-013\":26,\"READING BAKERY SYS (MARKEL FOOD GROUP) UNABLE TO ID-630-EXT-011\":204,\"READING BAKERY SYS (MARKEL FOOD GROUP) UNABLE TO ID-630-PRF-011\":138,\"REDVIKING UNABLE TO ID-673-DS-08\":13,\"REED-RICO (REED MACHINERY INC) A75-TVB\":12,\"REEL-O-MATIC INC 1705\":31,\"REN CORP CUSTOMER MADE-004-HU1909B\":47,\"REN CORP CUSTOMER MADE-408-TS16\":149,\"RITTAL GMBH & COMPANY KG SK3281100\":1,\"ROBOVENT HVE-175-80-1-V\":13,\"RODASYSTEM UNABLE TO ID-015-MC-413\":113,\"ROFIN-SINAR LASER GMBH S1143\":7,\"ROGERS ENGINEERING & MANUFACTURING COMPANY INC EX-4000\":162,\"ROGERS ENGINEERING AND MFG PU-ZR\":14,\"RTD (ROCHELEAU TOOL & DIE COMPANY INC) UNABLE TO ID-0734-35MW1-PO8\":2,\"RTD (ROCHELEAU TOOL & DIE COMPANY INC) UNABLE TO ID-0734-35MW5-PO2\":1,\"SAFETY-KLEEN SYSTEMS INC 81\":7,\"SAFETY-KLEEN SYSTEMS INC PCS-4255\":77,\"SANDPIPER (WARREN RUPP INC) S1FB1IBWANS100\":6,\"SCHAUER VA4BC\":17,\"SCHLEUNIGER ECOCUT 3300\":3,\"SCHMIDT TECHNOLOGY CORP 23/50\":16,\"SCHMIDT TECHNOLOGY CORP NR 29.100\":14,\"SCHMIDT TECHNOLOGY CORP PRESS CONTROL 50\":243,\"SCHMIDT TECHNOLOGY CORP UNABLE TO ID-695-A227\":24,\"SCOTT TURBON MIXER (HAYWARD GORDON) UNABLE TO ID-0744-4022\":33,\"SEALEY (JACK SEALEY LTD) BG 200XL/98\":36,\"SECURALL (A&A SHEET METAL PRODUCTS) UNABLE TO ID-0733-BE35\":2,\"SEILER VAKUUMTECHNIK GMBH 436-0910\":148,\"SEMCO (PPG INDUSTRIES INC) BUS100\":11,\"SENECA ENVIRONMENTAL PRODUCTS 154-FMTHS-100\":54,\"SENECA ENVIRONMENTAL PRODUCTS CUSTOMER MADE-432-A-DRYER MILL DC SCREW 1\":10,\"SENECA ENVIRONMENTAL PRODUCTS CUSTOMER MADE-432-B-KETTLE DC SCREW CONV\":13,\"SENTRY AIR SYSTEMS INC SS-100-FS-ST\":12,\"SHEPARD NILES (KONECRANES) UNABLE TO ID-423-CRANE\":30,\"SHERMAN TOOL INC 6X12 LAB MILL\":12,\"SHIZUOKA MACHINE TOOL COMPANY LTD MILLMASTER B-10V\":22,\"SHOP FOX (WOODSTOCK INTERNATIONAL INC) M1008\":14,\"SIEMENS CORP 6AV6643-0CD01-1AX1\":84,\"SILVAN IND (SAMUEL PRESSURE VESSEL GROUP) 789968\":25,\"SLOAN VALVE CO CUSTOMER MADE-0624-MHS1\":190,\"SMITH ENGINEERING INC UNABLE TO ID-0706-WS-0375\":1,\"SO-LOW ENVIRONMENTAL EQUIPMENT CO CH40-13\":1,\"SOLER & PALAU VENTILATION GROUP (S&P) UNABLE TO ID-0017-E20106\":14,\"SOLITECH KF120W112\":1,\"SOUTHWORTH PRODUCTS CORP UTB4-45\":141,\"SPANCO INC BEH5016\":1,\"SROKA INC PR DD\":9,\"SS MANUFACTURING CO UNABLE TO ID-624-461\":5,\"SSI (SHREDDING SYSTEMS INC) 600-E\":9,\"STAHLI USA DLM 705\":800,\"STANDARD XCHANGE (XYLEM) P41 5-431-23-085-012\":12,\"STIEBEL 4082.01.02099.95-\":3,\"STRATOFLEX PRODUCTS DIV (PARKER HANNIFIN CORP) CUSTOMER MADE-636-TFL-053\":29,\"STRUERS INC PRONTOPRESS-20\":2,\"STURTEVANT RICHMONT UNABLE TO ID-004-TWH-EH-479\":1,\"SUGINO CORP CUSTOMER MADE-595-2634\":10,\"SULLAIR LS160-75L/A\":13,\"SULLAIR SR-2400\":1,\"SULLAIR TS32-300/350\":245,\"SVERDRUP TECHNOLOGY INC (JACOBS ENGINEERING GROUP INC) 98-3955-SVD\":593,\"SYNCRO MACHINE CO (NEXTROM HOLDING AG) CAPSTAN\":8,\"SYSTEMATIX INC CUSTOMER MADE-468-7444\":245,\"TBCOMFORT (SCHENCK ROTEC GMBH) TBC D-64273 DARMSTAD\":174,\"TBS ENGINEERING LTD APP2\":40,\"THERMAL DYNAMICS (ESAB) PAK5XR\":2,\"THERMALL (WT LAROSE & ASSOCIATES INC) EO-1\":2,\"THERMOTRON INC SM-5.5C\":15,\"THERN INC 4WP2TC-2000-8\":49,\"TITAN CONVEYORS (TITAN INDUSTRIES INC) UNABLE TO ID-0035-DEW08080\":23,\"TOOL & HOIST SPECIALTIES UNABLE TO ID-0565-ATS-200-306\":29,\"TOOLCRAFT COMPANY INC CUSTOMER MADE-200-3876C\":7,\"TOSH SRL PLATFORM S\":2,\"TRANE 5-414-23-108-001-P43\":20,\"TRANE CCAD0204CKOOAT100F000U\":10,\"TRANE CVHF077GA2W0ACU2797W7B8TFA00000000LA10040LS00003A100A\":19,\"TRANE S-023115422\":10,\"TRANE TCD300B400BC\":7,\"TRANE TCD360A40A0A1CB1\":689,\"TRANE YCC042F3MOAA\":5,\"TRANE YSC060E3ELA000014\":17,\"TRANE YSC92F4RHA09\":17,\"TRANE YSD300F4RLA01\":227,\"TRAVELEX UK LTD CLM044\":1,\"TRIAD INDUSTRIAL CORP TR-24-8K-15\":16,\"TRINITYRAIL (TRINITY INDUSTRIES INC) C-POWER TRUNNION\":136,\"TRINITYRAIL (TRINITY INDUSTRIES INC) CUSTOMER MADE-670-SWITCH 6\":16,\"TRINITYRAIL (TRINITY INDUSTRIES INC) GATX1R\":4,\"TRONICS AMERICA INC S3STP\":139,\"TWIN CITY VENTCO (TWIN CITY FAN COMPANIES LTD) BCRD-160C\":9,\"UNA-DYN (UNIVERSAL DYNAMICS INC) DHD-30\":94,\"UNABLE TO ID 2987679\":11,\"UNABLE TO ID HDC 360\":8,\"UNABLE TO ID UNABLE TO ID-0013-BP-LCH\":67,\"UNABLE TO ID UNABLE TO ID-0024-LN11FCL00043\":38,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCT00001\":16,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00012\":62,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00019\":71,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00026\":38,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00031\":37,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00088\":35,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00121\":53,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00182\":3,\"UNABLE TO ID UNABLE TO ID-0024-LN11PGV00001\":149,\"UNABLE TO ID UNABLE TO ID-0035-DEW09092\":1,\"UNABLE TO ID UNABLE TO ID-0065-SB20\":4,\"UNABLE TO ID UNABLE TO ID-0065-SB41\":3,\"UNABLE TO ID UNABLE TO ID-020-AU-1354\":207,\"UNABLE TO ID UNABLE TO ID-020-AU-805\":39,\"UNABLE TO ID UNABLE TO ID-020-MANA239\":1,\"UNABLE TO ID UNABLE TO ID-020-VW034\":45,\"UNABLE TO ID UNABLE TO ID-0213-HJ00013\":39,\"UNABLE TO ID UNABLE TO ID-0213-MA00127\":5,\"UNABLE TO ID UNABLE TO ID-0564-BP19WR1\":11,\"UNABLE TO ID UNABLE TO ID-0565-ATS-017-103\":1,\"UNABLE TO ID UNABLE TO ID-0568-1130BH80\":14,\"UNABLE TO ID UNABLE TO ID-0568-1130HX5764\":9,\"UNABLE TO ID UNABLE TO ID-0568-1130M8313\":22,\"UNABLE TO ID UNABLE TO ID-0568-1130M8809-5\":1,\"UNABLE TO ID UNABLE TO ID-0568-1130M8974-2\":2,\"UNABLE TO ID UNABLE TO ID-0568-1130M9162\":48,\"UNABLE TO ID UNABLE TO ID-0598-FC0043\":1,\"UNABLE TO ID UNABLE TO ID-0660-J2-PAC-CNV-10\":2,\"UNABLE TO ID UNABLE TO ID-0689-H063\":3,\"UNABLE TO ID UNABLE TO ID-0701-J1-FSE-02\":4,\"UNABLE TO ID UNABLE TO ID-0701-J1-LMS-04\":23,\"UNABLE TO ID UNABLE TO ID-0706-CN-0209\":1,\"UNABLE TO ID UNABLE TO ID-0706-TK-0862\":1,\"UNABLE TO ID UNABLE TO ID-0707-B1-CAS-01-DC\":13,\"UNABLE TO ID UNABLE TO ID-0707-J-DPS-001-SCR\":5,\"UNABLE TO ID UNABLE TO ID-0707-M1-LCS-01\":10,\"UNABLE TO ID UNABLE TO ID-0707-M1-SCS-10\":12,\"UNABLE TO ID UNABLE TO ID-0726-GS-150-WBT-05\":129,\"UNABLE TO ID UNABLE TO ID-0726-GS-195-CL-01\":25,\"UNABLE TO ID UNABLE TO ID-0727-T6\":21,\"UNABLE TO ID UNABLE TO ID-0733-BR371\":1,\"UNABLE TO ID UNABLE TO ID-0733-BR522\":1,\"UNABLE TO ID UNABLE TO ID-0733-HX121\":41,\"UNABLE TO ID UNABLE TO ID-0733-M4155\":50,\"UNABLE TO ID UNABLE TO ID-0734-30CB3-PO3\":6,\"UNABLE TO ID UNABLE TO ID-0734-35BU2-PO4\":3,\"UNABLE TO ID UNABLE TO ID-0734-35CB1-PO2\":1,\"UNABLE TO ID UNABLE TO ID-0734-35MW3-PO8\":3,\"UNABLE TO ID UNABLE TO ID-0744-4423\":16,\"UNABLE TO ID UNABLE TO ID-0761-PT-L-RF-EXF-12-EEF-508\":9,\"UNABLE TO ID UNABLE TO ID-0764-HPU03\":3,\"UNABLE TO ID UNABLE TO ID-0811-811-266\":1,\"UNABLE TO ID UNABLE TO ID-0811-811-468\":4,\"UNABLE TO ID UNABLE TO ID-0811-811-474\":11,\"UNABLE TO ID UNABLE TO ID-0812-240631-BOWL 2\":2,\"UNABLE TO ID UNABLE TO ID-0812-3588 ST-15\":2,\"UNABLE TO ID UNABLE TO ID-0812-VENT 82-2\":1,\"UNABLE TO ID UNABLE TO ID-202-PANELBOARD LINES\":151,\"UNABLE TO ID UNABLE TO ID-302-G040\":46,\"UNABLE TO ID UNABLE TO ID-311-CTA-MIXDC\":83,\"UNABLE TO ID UNABLE TO ID-423-TRASH COMPACTOR-01\":1,\"UNABLE TO ID UNABLE TO ID-445-P-PMC-03-ROL-PRESSURE\":4,\"UNABLE TO ID UNABLE TO ID-492-6927-1\":1,\"UNABLE TO ID UNABLE TO ID-492-7192\":36,\"UNABLE TO ID UNABLE TO ID-535-CIRCULATING PUMP 3\":1,\"UNABLE TO ID UNABLE TO ID-633-M-PFM-MCC-1A3\":3,\"UNABLE TO ID UNABLE TO ID-649-I-3286\":96,\"UNABLE TO ID UNABLE TO ID-649-P732-4\":8,\"UNABLE TO ID UNABLE TO ID-649-Z AI-125\":1,\"UNABLE TO ID UNABLE TO ID-660-J5-05\":4,\"UNABLE TO ID UNABLE TO ID-664-EF-08\":9,\"UNABLE TO ID UNABLE TO ID-670-C18\":20,\"UNABLE TO ID UNABLE TO ID-689-J119\":1,\"UNABLE TO ID WGH 81AR\":15,\"UNHOLTZ-DICKIE CORP SAI60-R24C\":8,\"UNI-HYDRO INC 42-14\":6,\"UNIVERSAL INDUSTRIES INC D\":79,\"US MOTORS (NIDEC MOTOR CORP) T593A ESP\":13,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DAS-1303-21DB\":30,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DAS-1303-78M01\":23,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DBS-1709-72DR\":20,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DBT-1811-05AC\":2,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DIS-1603-15M01\":11,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-HRA-1302-07FR\":5,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-HRA-1302-16M01\":2,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-STK-1825-35BK02\":1,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-SUB-2D\":11,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-WBH-1601-05M01\":160,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-WBH-1601-20ZE01\":1,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-WBI-1602-10M01\":4,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-BBS-50\":2,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-GSS-06A\":154,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-GWS-07\":3,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-KBS-09-BLW\":2,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-MIX-VENT-FAN-03\":1,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-MSS-05\":36,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-PFS-02\":4,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-RTS-01\":4,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-STC-13\":20,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-VER-02\":3,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-WBC-06-02\":36,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-M-PFM-12-MTR\":9,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-M-RSH-05\":50,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-M-WIL-05-CYC-SCNV\":3,\"UVA (KMT GROUP) U 80 NMA33R\":88,\"UVA (KMT GROUP) U80 GH23R\":308,\"V-TECH ENGINEERING INC (BAKERITE SYSTEMS LLC) UNABLE TO ID-630-OVN-1206\":129,\"VACULEX UNABLE TO ID-0701-J1-DAS-10\":9,\"VALENTE (PIERALISI GROUP) LT-08\":40,\"VANTAGE CONTROLS (LEGRAND) GAGE INTERNAL\":40,\"VAUGHN MANUFACTURING CO CUSTOMER MADE-200-1701C\":26,\"VERSA MACHINERY INC C-22\":141,\"VERSA-MATIC (WARREN RUPP INC) UNABLE TO ID-0670-DP90\":8,\"VERTEX CRANES & HOISTS B.ARM-C\":4,\"VESTIL MANUFACTURING CORP EHLT-4272-6-44\":19,\"VIM RECYCLERS 3400-HD LH\":2,\"WABASH MPI (ACS GROUP) 50-18-2TM\":17,\"WABASH MPI (ACS GROUP) 5300-30-30-2CTRMX\":261,\"WD DISTRIBUTING UNABLE TO ID-483-BT-9185\":37,\"WELCH VACUUM (GARDNER DENVER) 1397 SMST-PDPLUS2RLI-PCT-BV-01K-05-SP3\":57,\"WESTINGHOUSE ELECTRIC CORP UNABLE TO ID-649-Z E-59\":6,\"WHEELABRATOR A3-44873\":9,\"WILBANKS MCWORTH LLC WM002\":35,\"WILTON TOOL CO (JPW INDUSTRIES INC) CUSTOMER MADE-698-C030001\":279,\"WIRTZ MFG CO INC EFR6500\":2,\"WISCONSIN OVEN CUSTOMER MADE-436-BT-1387\":122,\"WOLF MECHANICAL & EQUIPMENT COMPANY INC UNABLE TO ID-0698-D030001\":21,\"WSF INDUSTRIES INC UNABLE TO ID-0744-3442\":154,\"WYSONG MANUFACTURING (DELTA PHOENIX INC) THS100-72\":1,\"XANTREX (SCHNEIDER ELECTRIC) UNABLE TO ID-017-E19755\":14,\"YALE GLC 040\":2,\"YALE HOISTS (CM) CEW5-21BM19S4\":75,\"YALE HOISTS (CM) KEL-1/2-20PT30S1\":54,\"YALE MATERIALS HANDLING CORP MPB040-EN24T1848\":6,\"YAMATO CORP DKN812\":18,\"YAMATO CORP DPI-320\":41,\"YASKAWA ELECTRIC CORP MA1400\":2,\"YORK (JOHNSON CONTROLS INC) DM240N24A1AAA1C\":32,\"YORK (JOHNSON CONTROLS INC) H5CE090A25A\":21,\"YORK (JOHNSON CONTROLS INC) YCJD30S41S1A\":33,\"YORK (JOHNSON CONTROLS INC) YCJD60S44S3A\":17,\"YOUNG & BERTKE AIR SYSTEMS CO CUSTOMER MADE-200-M13308A\":11,\"ZARGES GMBH UNABLE TO ID-0065-L13\":4,\"ZEISS NORTH AMERICA ACCURA MASS\":2,\"ZEKS COMPRESSED AIR SOLUTIONS 400HSGA400\":19}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.where(df[\"_c43\"] == \"CLOSED\").groupby(\"_c12\").count())"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql import Row\n",
							"from pyspark.sql.types import *"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"dfnew = df.withColumn(\"TotalTimeSecs\", df._c38.cast(FloatType()))\n",
							"df = df.withColumn(\"TotalTimeSecs\", df._c38.cast(FloatType()))"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c12"
									],
									"values": [
										"sum(TotalTimeSecs)"
									],
									"yLabel": "sum(TotalTimeSecs)",
									"xLabel": "_c12",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"sum(TotalTimeSecs)\":{\"\\\"0026 - GEROLER / GEROTOR   \\\"\\\"GG\\\"\\\"\\\"\":24000,\"0004-1'2'4'\":0,\"0006 - BENDING\":56400,\"0006 - ELECTROMECANICA\":16200,\"0010 - ATSAREA DE BHL  BUCKETS EDIFICIO B\":0,\"0010 - ATSAREA DE PRIMERAS OP HD  CP011\":0,\"0010 - ATSAREA DE PRIMERAS OP SHOT BLAST EDICIO B\":0,\"0010 - ATSAREA DE TOOL ROOM MAQUINADO\":0,\"0010 - ATSP048-BB00-AREA DE SWL  T4 BUCKETS\":0,\"0013-BOMBAS DE VACIO\":0,\"0017 - SUBLOCATION\":100500,\"0017-AREAS DE SOPORTE\":27900,\"0020-5LP\":0,\"0020-BRASS FITTING LINEA 3B\":0,\"0020-KARG\":0,\"0020-METALES 04U\":0,\"0020-TRUCK\":1316340,\"0024-TERMICOS\":0,\"0034 - RECTIFICADO 11A\":0,\"0034-RECTIFICADO 9B\":321600,\"0034-ROLADO 7\":7200,\"0034-SOLD FRIC 10\":1200,\"0052-HORIZONTAL\":14400,\"0052-M/C SHOP FINAL\":10800,\"0052-SRC\":0,\"0055-GOODS IN\":113400,\"0055-HAV PILOT VALVE ASSY\":7200,\"0055-THOR ASSY (MAIN STAGE)\":0,\"0161 - 9455 METAL JOINING MACHINING - HUB\":0,\"0161 - 9462 PWC CELL\":0,\"0174 - POWDER COAT\":254700,\"0176 - FURNACES\":48600,\"0176 - TEST RIGS\":900,\"0177 - MG01 PROG AVE OUTSIDE/GROUNDS/FACILITIES\":38502000,\"0200-FORKLIFT\":0,\"0202-BUILDING 2\":900,\"0311-FACILITY GENERAL\":3668760,\"0311-ROYAL FLEX - TEST TABLE GENERAL\":18000,\"0311-RUBBER MFG-COMPOUND ROOM\":0,\"0313-WS L.A. BOOM LINE BOOM TACK\":0,\"0402-KBL ZONE 3\":16200,\"0402-TFB ENGINE SUB\":31200,\"0402-WSK CAB ZONE 2\":0,\"0402-WSK MARRY\":19800,\"0405 - 1526 LINE\":0,\"0405 - DEPT 20851 - WELDING\":0,\"0405 - QUALITY CLINIC\":0,\"0408-CETOP 3-5 STAK MACHINING\":0,\"0408-HRC\":3600,\"0408-SNYDER-CM11 MACHINING\":0,\"0431-DEPT 206 __ LINE 255\":0,\"0431-DEPT 522_ LINE 17\":0,\"0431-DEPT320 _ LINE 211\":0,\"0436-TEST CELL\":86400,\"0474-6.4L HPFR ASSEMBLY\":0,\"0474-FRANKLIN DB2 DB2\":0,\"0474-FRANKLIN WAREHOUSE\":64800,\"0490 -  RESEARCH AND DEVELOPMENT\":14400,\"0490 - GM F4 SOLENOID\":0,\"0491 - CORELITE\":99000,\"0492-SKWL AIR CLASSIFIER 2\":0,\"0492-SKWL SPUN FIBER LINE 1\":777600,\"0492-SKWL SPUN FIBER LINE 2\":763200,\"0535-BRD 1029\":0,\"0535-BRD 1033\":0,\"0565 - 110 MAINTENANCE SHOP\":754380,\"0565 - 200 BLDG 1\":747900,\"0598-MELT DECK\":450000,\"0617-21ST STREET AIR TOOLS\":0,\"0625-121-MACHINING\":261000,\"0625-154-PVB / P32\":1800,\"0625-COMATROL HIC 2 ASSEMBLY\":0,\"0630 - LINE 13 - PRODUCTION PARENT\":0,\"0630 - PRETZEL PROCESS LINE 14\":0,\"0633-CHILLED WATER SYSTEM-LINE #3\":0,\"0633-ROCK CONVEYING SOUTH\":66600,\"0633-SILOXANE ADDITIVE SYSTEM-LINE #3\":0,\"0649-FINISH - DEPT 860 - 860 LINE\":248400,\"0653-GENERAL PLANT - HVAC\":0,\"0660 - PLUMBING\":98820,\"0660 - READY MIX LINE (LINE 1)\":1810680,\"0663-BD02-MECHANICAL SHOP\":50400,\"0669-4/6 IN ADJ\":0,\"0669-MET LAB\":14400,\"0669-P4 FACILITIES\":36000,\"0670 - CLEANING RACK - ENVIRONMENTAL\":3201300,\"0670 - MECHANICAL - STOREROOM\":87900,\"0672 - GLUE/PAINT PRODUCTION\":0,\"0672 - PIPE CUTTING\":0,\"0672 - SHIPPING/RECEIVING BLD (149B)\":0,\"0695 - TUMBLING\":108300,\"0698-BUSS DUCT\":288000,\"0698-SEPARATE & CRIMP FOILS\":0,\"0698-TOOL & DIE\":109800,\"0707-BOARD LINE KILN\":1639080,\"0709-CELL #16\":0,\"0726-CURING CHAMBERS\":5400,\"0727 - HOLLOW CORE\":30600,\"0733-F178 MAINT. - HEAT TREAT\":0,\"0733-F515 HEP MANUFACTURING (MANUFACTURING 2)\":0,\"0761 - WING 7 CAFETERIA\":0,\"0761 - WING 8 L1\":0,\"0764 - MAINTENANCE\":39600,\"0811 - BAG05-BAGGER 5\":213000,\"0811 - TOW01-MAIN FEED SYSTEM\":123300,\"A&A MANUFACTURING CO (DYNATECT MANUFACTURING INC) 68M0608\":69120,\"ABAR IPSEN INC T22 GM\":45360,\"ABSOLUTAIRE INC AA2-UOM\":0,\"ABSOLUTAIRE INC UNABLE TO ID-664-A1048\":32400,\"ACCO WRIGHT (ACCO MATERIAL HANDLING SOLUTIONS) 2130030-VFD\":8100,\"ACCU-CUT DIAMOND TOOL & BORE SIZING SYSTEMS 2X2SM-1S\":414360,\"ACCUCHILLER (THERMAL CARE) UNABLE TO ID-0733-BR393\":43200,\"ACCURATE (SCHENCK PROCESS HOLDING GMBH) UNABLE TO ID-0598-MD3158\":61200,\"ACCURATE (SCHENCK PROCESS HOLDING GMBH) UNABLE TO ID-200-2997C\":0,\"ACME-GRIDLEY RA 6 -1/4\":16200,\"ACSI (AUTOMATED CONVEYOR SYSTEMS INC) CUSTOMER MADE-010-CR010\":172800,\"ACSI (AUTOMATED CONVEYOR SYSTEMS INC) CUSTOMER MADE-010-CR061\":172800,\"ADEPT TECHNOLOGY INC UNABLE TO ID-0733-M3310\":63000,\"ADVANCE PRODUCTION TOOLS UNABLE TO ID-0701-MET-3157-10\":64260,\"ADVANCED AUTOMATION INC CUSTOMER MADE-0733-M4368\":75600,\"AEC (ACS GROUP) UNABLE TO ID-0737-MOL-13\":0,\"AEM UNICORE UMC3000\":19061100,\"AEROLYTE SYSTEMS (CLEMCO INDUSTRIES CORP) 6X4X7\":778800,\"AEROQUIP (EATON) CUSTOMER MADE-006-EA0290\":132120,\"AEROQUIP (EATON) CUSTOMER MADE-006-EA1068\":65520,\"AEROQUIP (EATON) CUSTOMER MADE-535-COIL-08\":7200,\"AEROQUIP (EATON) MINI II\":0,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 10CE12CVB962-1/4\":66240,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 36L422BD40C1121-3\":97920,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) 42W738-VW-870-10\":75600,\"AEROVENT FAN COMPANY INC (TWIN CITY FAN COMPANIES LTD) CUSTOMER MADE-468-1118\":1860,\"AGRAMKOW FLUID SYSTEMS AS EST 300\":115200,\"ALLEN-BRADLEY (ROCKWELL AUTOMATION INC) 20G1AND186AN0NNNNN\":54000,\"ALLEN-BRADLEY (ROCKWELL AUTOMATION INC) CENTERLINE 2100\":0,\"ALMCO FINISHING & CLEANING SYS UNABLE TO ID-019-RY193\":229680,\"ALPHA CONVERTING EQUIPMENT LTD ALPHATRIM TWM-P\":25200,\"ALPHA PRESS 60 TON\":1192560,\"ALPHA TECH A86674B113\":611400,\"ALPHA TECH CUSTOMER MADE-164-CACCOVERPUNCH01\":52200,\"AMADA AMERICA INC MP-1224\":0,\"AMADA AMERICA INC MP-1225US\":0,\"AMERICAN KHUNE (GRAHAM ENGINEERING CORP) AK150 24:1 A/C EXT\":262800,\"AMERICAN KHUNE (GRAHAM ENGINEERING CORP) AK200 24:1 A/C EXT\":438600,\"AMERICAN TOOL & DIE UNABLE TO ID-626-446\":1024200,\"AMPCO PUMPS CO AZP3-060-SM\":64800,\"AMPCO PUMPS CO RBZP1-030-SO\":59400,\"ANGOR-INTOOLS UNABLE TO ID-469-5772\":0,\"ANVER CORP A150M6-86-3/44\":103200,\"ANVER CORP VPFL4-04-AC-L3P/6P\":38100,\"ARTOS ENGINEERING CO CR.11 2017\":36000,\"ASC INDUSTRIES LTD UNABLE TO ID-468-1306\":144900,\"ASI (ASHLEY SLINGS INC) 21407154\":0,\"ATW (ASSEMBLY & TEST WORLDWIDE)(AUTOMATION TOOLING SYSTEMS INC) ATW GPTS\":405000,\"AUTOMATED FINISHING CUSTOMER MADE-0733-M1666\":439200,\"AUTOMATED PACKAGING SYSTEMS INC AB 180 ONESTEP\":48600,\"AUTOMATED SYS UNABLE TO ID-408-TS10\":0,\"AUTOMATION INTERNATIONAL INC EN1001\":0,\"AUTOQUIP CORP T-36-044\":72000,\"AVTRON (EMERSON ELECTRIC CO) K841BD30502\":118800,\"AZO GMBH & COMPANY KG UNABLE TO ID-0630-AZO1CC\":3600,\"BAHMUELLER TECHNOLOGIES INC XPRO\":385200,\"BAKER PERKINS LTD UNABLE TO ID-178-CMCON0001\":5939400,\"BALDOR ELECTRIC CO (ABB GROUP) 07-309-30\":104400,\"BALDOR ELECTRIC CO (ABB GROUP) 332B\":94680,\"BALDOR ELECTRIC CO (ABB GROUP) 662E\":3600,\"BALDOR ELECTRIC CO (ABB GROUP) UNABLE TO ID-483-BT-6007\":16800,\"BARBER-COLMAN (BOURN & KOCH INC) UNABLE TO ID-020-AU-25\":42120,\"BARTELL MACHINERY SYSTEMS LLC UNABEL TO ID-0735-A-9-TAKEUP\":342000,\"BARTELL MACHINERY SYSTEMS LLC UNABLE TO ID-0735-E-15-PAYOFF 2 SOUTH\":144900,\"BATTENFELD (WITTMANN BATTENFELD INC) HM 1000\":37800,\"BCN (BLISS CLEARING NIAGARA) TECHNICAL SERVICES INC C-35\":208800,\"BECCA INC 25000\":43200,\"BEHLEN MANUFACTURING CO CUSTOMER MADE-689-294\":21600,\"BEKO TECHNOLOGIES GMBH RAX 100 NA\":18000,\"BELDEN MACHINE CORP UNABLE TO ID-469-5807\":154800,\"BESLY GRINDERS DH2-23\":980700,\"BETA LASERMIKE (NDC TECHNOLOGIES) AS5080RD\":0,\"BETTER ENGINEERING MANUFACTURING INC UNABLE TO ID-474-PE901\":6480,\"BETTER PACKAGES INC 338 PLUS\":1800,\"BIG LIFT LLC S22-62\":181440,\"BIMAL TESTING MACHINES SPA PROPORTIONAL VALVE TEST STAND\":497700,\"BISHAMON INDUSTRIES CORP OPTIMUS LIFT3K\":21660,\"BLAST-IT-ALL 3636-9P M4 DC-3\":1546200,\"BLUE GIANT LLC UNABLE TO ID-013-R-14\":151200,\"BLUE M (THERMAL PRODUCT SOLUTIONS) CC-09S-M-F\":30240,\"BLUE M (THERMAL PRODUCT SOLUTIONS) VO-18C\":0,\"BODINE ELECTRIC CO 64-STA 21\":7200,\"BORGWARNER INC CUSTOMER MADE-0469-FT20489\":0,\"BORGWARNER INC CUSTOMER MADE-468-ST12388\":0,\"BORGWARNER INC CUSTOMER MADE-469-FT02458\":0,\"BORGWARNER INC CUSTOMER MADE-469-FT08352\":21600,\"BORGWARNER INC CUSTOMER MADE-469-FT09402\":5400,\"BORGWARNER INC CUSTOMER MADE-469-FT10682\":252000,\"BORGWARNER INC CUSTOMER MADE-469-FT10750\":68400,\"BORGWARNER INC CUSTOMER MADE-469-FT10756\":19800,\"BORGWARNER INC CUSTOMER MADE-469-FT10899\":57600,\"BORGWARNER INC CUSTOMER MADE-469-FT20296\":0,\"BORGWARNER INC CUSTOMER MADE-469-FT20312\":0,\"BORGWARNER INC UNABLE TO ID-468-7597\":321780,\"BOYAR-SCHULTZ SMT (LESTER DETTERBECK ENTERPRISES LTD) CHALLENGER\":0,\"BRADBURY COMPANY INC (BRADBURY GROUP) CUSTOMER MADE-689-1286\":46800,\"BRANSON & BRATTON UNABLE TO ID-469-5481\":254880,\"BRANSON & BRATTON UNABLE TO ID-469-5635\":127440,\"BRANSON & BRATTON UNABLE TO ID-469-5636\":289260,\"BRIDGEPORT (HARDINGE INC) SERIES 2\":81360,\"BROWN & SHARPE (HEXAGON METROLOGY) 1436\":3600,\"BROWN & SHARPE (HEXAGON METROLOGY) UNABLE TO ID-0669-2623\":73800,\"BRYANT HEATING & COOLING SYSTEMS 558FEX120000ABGA\":43200,\"BUDGIT HOIST (COLUMBUS MCKINNON CORP) 115841-16\":112800,\"BUFFALO PUMPS UNABLE TO ID-445-P-FCE-02-PMPB\":61200,\"BUHLER AG DELTA ABRASIMET\":68400,\"BUNTING MAGNETICS CO VUNTMAGNETGF\":32400,\"BURGMASTER CORP VTC-300L\":91800,\"BURT (NANTONG BURT CNC MACHINE COMPANY LTD) UNABLE TO ID-004-HU035\":113400,\"BURT (NANTONG BURT CNC MACHINE COMPANY LTD) UNABLE TO ID-019-NJ139\":196560,\"BUSCH USA (BUSCH GMBH) RC 0063-A005-1001\":61200,\"BYSTRONIC INC FILTERBYS VERSION 3\":4600800,\"CARBOLITE GERO LTD GP450A\":72000,\"CARLE & MONTANARI-OPM SPA SMUN\":135720,\"CARLE & MONTANARI-OPM SPA TCS-B\":0,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 25HBB 330A300\":459180,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 39EH26\":29700,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 50TC-A08A-2A6A0A0A0\":668880,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) 50TJQ006-601\":37800,\"CARRIER CORP (UNITED TECHNOLOGIES CORP) UNABLE TO ID-483-BT-9110\":342000,\"CARTCADDY (DJ PRODUCTS INC) 5W\":0,\"CASTOLINE EUTECTIC INTL GAP-3001-DC\":100440,\"CATERPILLAR 3N8991-02-F1791NO\":57600,\"CATERPILLAR CUSTOMER MADE-001-BUIL013\":0,\"CATERPILLAR CUSTOMER MADE-001-CFB116\":0,\"CATERPILLAR CUSTOMER MADE-001-CFB290\":0,\"CATERPILLAR CUSTOMER MADE-001-CFB347\":0,\"CATERPILLAR CUSTOMER MADE-001-EDIFICIO\":7200,\"CATERPILLAR CUSTOMER MADE-010-AP358\":86400,\"CATERPILLAR CUSTOMER MADE-010-AP364\":86400,\"CATERPILLAR CUSTOMER MADE-010-IL023\":748800,\"CATERPILLAR CUSTOMER MADE-010-IL027\":14040,\"CATERPILLAR CUSTOMER MADE-027-CFM225E\":37800,\"CATERPILLAR CUSTOMER MADE-028-CFB5022\":0,\"CATERPILLAR CUSTOMER MADE-028-CFB619\":0,\"CATERPILLAR CUSTOMER MADE-028-CFM1077\":12600,\"CATERPILLAR CUSTOMER MADE-028-CFM1133\":8400,\"CATERPILLAR CUSTOMER MADE-028-CFM1192\":21600,\"CATERPILLAR CUSTOMER MADE-028-CFM1283\":163740,\"CATERPILLAR CUSTOMER MADE-028-CFM256E\":0,\"CATERPILLAR CUSTOMER MADE-028-CFM4300\":54000,\"CATERPILLAR CUSTOMER MADE-028-CFM4369\":0,\"CATERPILLAR CUSTOMER MADE-0761-PT-L-SL-CAU-29-M33234\":62100,\"CATERPILLAR CUSTOMER MADE-0761-PT-L-SL-FLP-76-FPS008\":0,\"CATERPILLAR CUSTOMER MADE-0761-PT-L-SL-FLP-76-FPS018\":0,\"CATERPILLAR CUSTOMER MADE-402-EE1003\":54720,\"CATERPILLAR CUSTOMER MADE-402-FA0009\":82800,\"CATERPILLAR CUSTOMER MADE-402-WSK15\":32760,\"CATERPILLAR CUSTOMER MADE-474-2380\":152280,\"CATERPILLAR V 140\":12960,\"CERAMIC DRYING SYSTEMS LTD CUSTOMER MADE-0035-DEW02610\":0,\"CHEVALIER MACHINERY USA FSG-2A1020\":52200,\"CHICAGO PNEUMATIC CP-0351\":46800,\"CHICAGO RIVET & MACHINE CO 912\":21600,\"CINCINNATI 350MX10\":397500,\"CINCINNATI 90 CBII-6\":201600,\"CINCINNATI CCGRINDER-CCI\":0,\"CINCINNATI CINEL 60\":28800,\"CINCINNATI CUSTOMER MADE-490-WV11110\":23400,\"CINCINNATI FAN HDBI-330\":64800,\"CINCINNATI RK\":475440,\"CLAUSING COLCHESTER (600 GROUP) UNABLE TO ID-624-468\":0,\"CLAY UNABLE TO ID-492-1494\":44280,\"CLEAVER-BROOKS NB100D35300\":614700,\"CLOOS ROBOTIC WELDING INC 2008\":104700,\"COE PRESS EQUIPMENT CORP CPRF SM-3-42\":198000,\"COFFING HOISTS (COLUMBUS MCKINNON CORP) ELC-0516-3\":14400,\"COGNEX CORP UNABLE TO ID-492-10774\":0,\"COLCHESTER LATHE CO (COLCHESTER-HARRISON 600 GROUP) TRIUMPH 7 1/2 IN\":86400,\"COLUMBUS MCKINNON CORP 2183-10\":14040,\"COLUMBUS MCKINNON CORP UNABLE TO ID-0727-H-16\":205200,\"CONAIR FRANKLIN CH54\":0,\"CONAIR GROUP DL15\":0,\"CONAIR GROUP UNABLE TO ID-020-AU-1183\":0,\"CONCO (WHITING CORP) UNABLE TO ID-010-GJ204\":86400,\"CONSTRUCCIONES MECANICAS CABALLE CRM-25001\":96300,\"CROWN BATTERY CORP 3-18-750\":75600,\"CROWN EQUIPMENT CORP FC5245-65\":7200,\"CROWN EQUIPMENT CORP SC 4000\":85680,\"CRUSTBUSTER-SPEED KING INC UNABLE TO ID-630-LFR-014\":10800,\"CTS (CINCINNATI TEST SYS) CUSTOMER MADE-490-WV12257\":75600,\"CTS (CINCINNATI TEST SYS) J75862556\":135900,\"CUSTOMER MADE 21B1000021\":9712800,\"CUSTOMER MADE 5510\":54000,\"CUSTOMER MADE CUSTOMER MADE-0034-RCK15-CRO\":1544400,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-1D-OPCARGADOR\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-8A-OPVIBRON\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-CEL4-OPVIBRON/043\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC1-ROL5-OPVIBRON\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC10-11A-OPVIBRON\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC2-2U-OP121-3\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC2-PTA3-OP33-3\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC3-5A-OPVIBRON\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC4-4B-OP121\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC5-2G-OP014\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC7-13A-OP37\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC7-4D-OP122\":0,\"CUSTOMER MADE CUSTOMER MADE-0034-TC8-2J-OP00-26\":0,\"CUSTOMER MADE CUSTOMER MADE-020-GB045\":223200,\"CUSTOMER MADE CUSTOMER MADE-0213-HC56018\":310500,\"CUSTOMER MADE CUSTOMER MADE-0565-43419\":6480,\"CUSTOMER MADE CUSTOMER MADE-0565-D09\":5760,\"CUSTOMER MADE CUSTOMER MADE-0565-WE38675\":24300,\"CUSTOMER MADE CUSTOMER MADE-0565-YD7\":17280,\"CUSTOMER MADE CUSTOMER MADE-0637-CNV02\":28800,\"CUSTOMER MADE CUSTOMER MADE-0669-2439\":5400,\"CUSTOMER MADE CUSTOMER MADE-0669-2547\":0,\"CUSTOMER MADE CUSTOMER MADE-0669-2991\":3600,\"CUSTOMER MADE CUSTOMER MADE-0669-528\":7200,\"CUSTOMER MADE CUSTOMER MADE-0698-C110001-1\":35100,\"CUSTOMER MADE CUSTOMER MADE-0706-CN-0939\":86400,\"CUSTOMER MADE CUSTOMER MADE-0707-B1-POC-03-4-DECK\":120600,\"CUSTOMER MADE CUSTOMER MADE-0733-B294\":48600,\"CUSTOMER MADE CUSTOMER MADE-0733-M3364\":7200,\"CUSTOMER MADE CUSTOMER MADE-0733-RR18\":0,\"CUSTOMER MADE CUSTOMER MADE-0733-RR5\":14400,\"CUSTOMER MADE CUSTOMER MADE-0734-35BU15\":401400,\"CUSTOMER MADE CUSTOMER MADE-0734-35BU4\":654300,\"CUSTOMER MADE CUSTOMER MADE-0734-35CB2\":971201,\"CUSTOMER MADE CUSTOMER MADE-0735-E-9-QUENCH TROUGH DRAIN PIT SYSTEM\":0,\"CUSTOMER MADE CUSTOMER MADE-0811-811-114\":0,\"CUSTOMER MADE CUSTOMER MADE-0811-811-501\":0,\"CUSTOMER MADE CUSTOMER MADE-0812-790\":16200,\"CUSTOMER MADE CUSTOMER MADE-171-155364\":0,\"CUSTOMER MADE CUSTOMER MADE-171-201026\":0,\"CUSTOMER MADE CUSTOMER MADE-171-202012\":54000,\"CUSTOMER MADE CUSTOMER MADE-176-BIN061\":0,\"CUSTOMER MADE CUSTOMER MADE-176-CART028\":0,\"CUSTOMER MADE CUSTOMER MADE-178-CPCON0024\":73440,\"CUSTOMER MADE CUSTOMER MADE-178-CPCON4020B\":14400,\"CUSTOMER MADE CUSTOMER MADE-178-PXDMP0041\":0,\"CUSTOMER MADE CUSTOMER MADE-200-200470\":0,\"CUSTOMER MADE CUSTOMER MADE-200-200610\":0,\"CUSTOMER MADE CUSTOMER MADE-200-2243C\":54000,\"CUSTOMER MADE CUSTOMER MADE-200-2527D63T5A\":18000,\"CUSTOMER MADE CUSTOMER MADE-200-4180B09\":342000,\"CUSTOMER MADE CUSTOMER MADE-201-MP0093\":170760,\"CUSTOMER MADE CUSTOMER MADE-211-K150\":0,\"CUSTOMER MADE CUSTOMER MADE-211-S901\":0,\"CUSTOMER MADE CUSTOMER MADE-313-PAINT-01\":119700,\"CUSTOMER MADE CUSTOMER MADE-408-PB50\":77400,\"CUSTOMER MADE CUSTOMER MADE-408-TAB2\":223200,\"CUSTOMER MADE CUSTOMER MADE-408-TAC5\":212040,\"CUSTOMER MADE CUSTOMER MADE-424-1-464-021\":10800,\"CUSTOMER MADE CUSTOMER MADE-424-5-454-040\":0,\"CUSTOMER MADE CUSTOMER MADE-424-5-456-011\":7200,\"CUSTOMER MADE CUSTOMER MADE-432-ACCUM PO\":8590860,\"CUSTOMER MADE CUSTOMER MADE-432-AIR SEP\":470160,\"CUSTOMER MADE CUSTOMER MADE-468-305\":92280,\"CUSTOMER MADE CUSTOMER MADE-468-ST10621\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST11237\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST11815\":201600,\"CUSTOMER MADE CUSTOMER MADE-468-ST11845\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST11850\":14400,\"CUSTOMER MADE CUSTOMER MADE-468-ST12077\":28800,\"CUSTOMER MADE CUSTOMER MADE-468-ST12188\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST12199\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST12720-3\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST3106\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST9376\":0,\"CUSTOMER MADE CUSTOMER MADE-468-ST9801\":0,\"CUSTOMER MADE CUSTOMER MADE-474-2104\":82080,\"CUSTOMER MADE CUSTOMER MADE-490-WV10822\":79200,\"CUSTOMER MADE CUSTOMER MADE-490-WV11122\":0,\"CUSTOMER MADE CUSTOMER MADE-490-WV20492\":377100,\"CUSTOMER MADE CUSTOMER MADE-490-WV20686\":0,\"CUSTOMER MADE CUSTOMER MADE-490-WV21547\":41400,\"CUSTOMER MADE CUSTOMER MADE-490-WV21888\":43200,\"CUSTOMER MADE CUSTOMER MADE-492-2556\":561600,\"CUSTOMER MADE CUSTOMER MADE-492-5734\":3600,\"CUSTOMER MADE CUSTOMER MADE-492-6289\":14400,\"CUSTOMER MADE CUSTOMER MADE-492-6656\":372600,\"CUSTOMER MADE CUSTOMER MADE-492-6965\":122400,\"CUSTOMER MADE CUSTOMER MADE-492-7587\":0,\"CUSTOMER MADE CUSTOMER MADE-492-8475-1\":0,\"CUSTOMER MADE CUSTOMER MADE-492-8903\":7200,\"CUSTOMER MADE CUSTOMER MADE-492-9286\":0,\"CUSTOMER MADE CUSTOMER MADE-492-9485\":0,\"CUSTOMER MADE CUSTOMER MADE-492-9490\":25200,\"CUSTOMER MADE CUSTOMER MADE-595-252\":0,\"CUSTOMER MADE CUSTOMER MADE-595-7212\":1080,\"CUSTOMER MADE CUSTOMER MADE-636-CMA-005\":176400,\"CUSTOMER MADE CUSTOMER MADE-636-CMA-041\":176400,\"CUSTOMER MADE CUSTOMER MADE-637-CF05\":16200,\"CUSTOMER MADE CUSTOMER MADE-637-CL41\":0,\"CUSTOMER MADE DAKE\":7200,\"CUSTOMER MADE-0492-5222-3 ALUM TANK\":0,\"CYCLONAIRE UNABLE TO ID-535-DC-2\":144000,\"DAEWOO PUMA 230\":465840,\"DAIKIN UNABLE TO ID-0568-1130BH098\":45000,\"DAIKIN UNABLE TO ID-0568-1130BH107\":45000,\"DALMEC SPA UNABLE TO ID-0568-1130HJ5731\":59400,\"DALMEC SPA UNABLE TO ID-0568-1130HJ5732\":59400,\"DALMEC SPA UNABLE TO ID-0568-1130HJ5742\":59400,\"DANFOSS CUSTOMER MADE-625-1011658\":10800,\"DANFOSS CUSTOMER MADE-625-1012857\":39600,\"DANFOSS CUSTOMER MADE-625-3523\":0,\"DATA AIRE INC DRCU-0312-15\":90720,\"DAYTON 11K281\":4500,\"DAYTON 3YB75H\":43020,\"DAYTON 4C837\":57600,\"DAYTON 4RJ44\":25200,\"DAYTON 4YU89\":27000,\"DAYTON CUSTOMER MADE-636-TUB-023\":30600,\"DAYTON UNABLE TO ID-0669-ATS-054\":0,\"DE SMITH INC LV2515\":434520,\"DE SMITH INC W-2469A\":0,\"DELTA POWER EQUIPMENT CORP UNABLE TO ID-689-167\":27000,\"DEMAG (TEREX MHPS GMBH) DCM PRO\":21600,\"DEMAG (TEREX MHPS GMBH) EKDR-COM\":162000,\"DENISON MULTIPRESS (QPI MULTIPRESS INC) S087MC257D242A72A59S\":0,\"DESPATCH INDUSTRIES (ITW CO) C-188\":9000,\"DETROIT BROACH & MACHINE CO 5X48\":1202400,\"DETROIT HOIST UNABLE TO ID-0761-PT-L-L1-CRN-48-HX20054\":44100,\"DETROIT HOIST UNABLE TO ID-402-HX7102\":114300,\"DONALDSON TORIT 90-5 CAB\":420300,\"DONALDSON TORIT DFT 2-8\":590400,\"DONALDSON TORIT UNABLE TO ID-0733-BF559\":28800,\"DONALDSON TORIT UNABLE TO ID-649-I-1507\":129600,\"DONALDSON TORIT VF-2000\":43200,\"DONALDSON TORIT VS-1500\":27000,\"DOUGLAS MACHINE INC 18-125-13\":12600,\"DUMORE CORP UNABLE TO ID-0669-1753\":0,\"DUSCOVENT ENGINEERING LTD UNABLE TO ID-492-10688\":223200,\"EASOM AUTOMATION SYSTEMS INC (LINCOLN ELECTRIC CO) CUSTOMER MADE-687-FW-01\":201600,\"EATON 9355-10\":0,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-0727-OL-1496\":10800,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-0727-OL-7446\":10800,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-0727-OL-7474-1\":10800,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-491-TS50\":21600,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-491-TS51\":25200,\"EATON COOPER POWER SYSTEMS CUSTOMER MADE-698-C100002-2\":10800,\"EATON COOPER POWER SYSTEMS UNABLE TO ID-200-5129C\":0,\"EATON CUSTOMER MADE-0017-E21814\":2160,\"EATON CUSTOMER MADE-004-COLLET 8\":172800,\"EATON CUSTOMER MADE-006-EA1097\":43020,\"EATON CUSTOMER MADE-006-FAC-22\":72000,\"EATON CUSTOMER MADE-006-FAC-32\":14400,\"EATON CUSTOMER MADE-006-FAC-48\":36000,\"EATON CUSTOMER MADE-017-E19998\":1800,\"EATON CUSTOMER MADE-019-FILTRATION FACILITY\":0,\"EATON CUSTOMER MADE-0491-PL10\":297000,\"EATON CUSTOMER MADE-052-E0007\":0,\"EATON CUSTOMER MADE-052-E0055\":0,\"EATON CUSTOMER MADE-200-1004C\":0,\"EATON CUSTOMER MADE-649-I-2067\":43200,\"EATON CUSTOMER MADE-664-8753-2\":0,\"EATON CUSTOMER MADE-664-BNF1304AB-1\":0,\"EATON CUSTOMER MADE-664-CND606AA\":0,\"EATON CUSTOMER MADE-664-DA600AH\":0,\"EATON CUSTOMER MADE-664-DAF608BT\":0,\"EATON CUSTOMER MADE-664-DBD1304AG\":0,\"EATON CUSTOMER MADE-664-FD608CM\":0,\"EATON CUSTOMER MADE-664-NH3000804-10 & 805-10\":0,\"EATON CUSTOMER MADE-664-PR1903AD\":0,\"EATON UNABLE TO ID-0020-GB059\":36000,\"ECLIPSE AUTOMATION INC UNABLE TO ID-468-7478\":102600,\"EDGE MANUFACTURING INC HR-20-10\":0,\"EDGE TECHNOLOGIES TURBO 3-38\":408600,\"EEMCO (ERIE ENGINE & MANUFACTURING CO) UNABLE TO ID-0734-31RBR-MILL2\":219600,\"ELECTRO-MATIC PRODUCTS CO UNABLE TO ID-027-CFM5041\":77400,\"ELECTRONIC MEASUREMENTS INC (TDK-LAMBDA AMERICAS INC) UNABLE TO ID-405-SRQ00030\":0,\"EM BENSON COMPANY LLC UNABLE TO ID-282-1035\":70200,\"EMPIRE ABRASIVE EQUIPMENT PF-3648\":2203440,\"ENERPAC UNABLE TO ID-0733-M1789\":55800,\"EPWORTH MILL AE010530A\":14040000,\"ERCA SA (IMA DAIRY & FOOD HOLDING GMBH) UNABLE TO ID-0029-ENV-EF600-07\":0,\"ERNST (PAUL ERNST MASCHINENFABRIK GMBH) 80066\":21600,\"EVANS POWER EQUIPMENT UNABLE TO ID-010-CS010\":356400,\"EVERGREEN HIGH VOLTAGE LLC HVFDC-600-10-RS\":0,\"EXIDE TECHNOLOGIES G3-18-865\":199800,\"FALK (REXNORD CORP) UNABLE TO ID-445-P-SPE-02-RDX\":246600,\"FANUC AMERICA CORP D21MIA5\":37800,\"FARR CO (CAMFIL GROUP) GS20\":43200,\"FARREL CORP UNABLE TO ID-535-FINISH MILL TCU\":7200,\"FARRIS CONVEYOR C000-VT\":14400,\"FELLOWS (BOURN & KOCH INC) 4A-GS\":49680,\"FINN-POWER (LILLBACKA POWERCO OY) FP20 VS\":205200,\"FINNPOWER CRIMPING PRODUCTS (HYDRAPOWER DYNAMICS LTD) FP120UC\":235080,\"FINNPOWER CRIMPING PRODUCTS (HYDRAPOWER DYNAMICS LTD) TRS6SB\":2997600,\"FLEX-KLEEN (MET-PRO ENVIRONMENTAL AIR SOLUTIONS) 84-BVBC-48IIIG\":610560,\"FLEXLINK SYSTEMS INC (COESIA CO) CUSTOMER MADE-490-277-TEST-RAK2\":6180,\"FLOWSERVE DURCO (FLOWSERVE CORP) 3986\":0,\"FMT (FINDLAY MACHINE & TOOL) UNABLE TO ID-0733-M3830\":453600,\"FRANKLIN ELECTRIC COMPANY INC UNABLE TO ID-006-EA0826\":25200,\"FRANKLIN MANUFACTURING INC F5100X6\":219600,\"FREIGHTLINER (DAIMLER TRUCKS NORTH AMERICA LLC) M2 106\":102600,\"FROMMELT INDUSTRIES (RITE-HITE) UNABLE TO ID-178-RUD-22\":0,\"FUJI MACHINE MANUFACTURING COMPANY LTD UNABLE TO ID-673-SP-05\":0,\"FUJITSU GENERAL AMERICA INC (FUJITSU GENERAL LTD) AOU30CLX1\":58320,\"FULLER ULTRA VIOLET CORP FG 2036\":3600,\"FURNAS ELECTRIC CO (SIEMENS INDUSTRY INC) 89BFA1C82011\":147600,\"GAMM INDUSTRIES INC 48X36\":0,\"GARDNER DENVER INC A5CDL13K\":49800,\"GARDNER DENVER INC EAM99C\":124200,\"GEI AUTOWRAPPERS (GEI PROCESSING PACKAGING MACHINERY LTD) FLOWTRONIC 120\":0,\"GENERAL PUMP (INTERPUMP GROUP SRL) TS1041\":241200,\"GERHARD SCHUBERT GMBH UNABLE TO ID-178-CPROB1017\":0,\"GFS (GLOBAL FINISHING SOLUTIONS LLC) SDG-1512PDT-18-BB-S\":12600,\"GFS (GLOBAL FINISHING SOLUTIONS LLC) WBS-141020-DT-CT-S\":504000,\"GIDDINGS & LEWIS (FIVES) UNABLE TO ID-027-CFM546\":208800,\"GNB (EXIDE TECHNOLOGIES) 07F5949M\":3600,\"GOODMAN MANUFACTURING COMPANY LP VSX130301AA\":230400,\"GORBEL INC GLCS-FS-2000-20-2173\":72000,\"GORBEL INC GLCSLS-FS-4000\":32400,\"GORBEL INC UNABLE TO ID-0568-1130HX5827\":68400,\"GORBEL INC UNABLE TO ID-474-2211\":0,\"GORBEL INC WSJ360-NP6-1000-13-8\":28080,\"GRACO INC CUSTOMER MADE-0035-DEW02450\":3600,\"GRACO INC UNABLE TO ID-0564-BP498\":104400,\"GRACO INC UNABLE TO ID-0624-6512\":0,\"GRANT MANUFACTURING & MACHINE CO (GRANT RIVETERS) 183\":50400,\"GREENERD PRESS & MACHINE COMPANY INC HPB-3\":320760,\"GT SCHMIDT (SCHMIDT MARKING SYSTEMS) 2X3S\":5400,\"GUSHER PUMPS (RUTHMAN CO) 11022K-XL-5-AG-A-TC\":0,\"GYPTECH AB UNABLE TO ID-432-B-BUNDLE CULL TRANSFER\":13613280,\"GYPTECH AB UNABLE TO ID-633-B1-SAW-1822-20M02\":21600,\"HAAS AUTOMATION INC SL-20B\":181800,\"HAAS AUTOMATION INC TM-2P\":1888200,\"HAAS AUTOMATION INC VF-1B\":356580,\"HADEN INTERNATIONAL GROUP INC UNABLE TO ID-0691-BUA4314\":19800,\"HAEFELY HIPOTRONICS (HUBBELL INC) 7100-56A-B\":29700,\"HAMMOND ROTO FINISH 7229\":0,\"HAMMOND ROTO FINISH HZ-30\":18720,\"HAMMOND ROTO FINISH ST-1\":799200,\"HANEL STORAGE SYS (HANEL GMBH & CO KG) 123.689/1-2\":217740,\"HANKISON (SPX FLOW) DBP2100-460V-MSDC/DWPTM\":2513520,\"HANSFORD PARTS & PRODUCTS UNABLE TO ID-664-0741\":54000,\"HARDFACE ALLOYS INC (HAI ADVANCED MATERIAL SPECIALISTS INC) RD20IADEX\":522000,\"HARDINGE INC CS-51\":1324800,\"HARRINGTON HOISTS INC 64SY4886\":32400,\"HARRINGTON HOISTS INC ER1A-63SY1282\":0,\"HARRINGTON HOISTS INC ER2A-1ASY7857\":149760,\"HARRINGTON HOISTS INC TCR-1000P\":0,\"HARTWIG INC LU300-2SC600\":363600,\"HATHAWAY CORP UNABLE TO ID-492-NEC FEED TANK\":82800,\"HAUCK MANUFACTURING CO HT-100\":18000,\"HAYNES ENGINEERING & MANUFACTURING INC UNABLE TO ID-649-I-1601\":195840,\"HEALD MACHINE INC (CINCINNATI-HEALD) 2EF73\":21600,\"HERKULES EQUIPMENT CORP G200\":0,\"HERR-VOSS STAMCO INC (ANDRITZ) CUSTOMER MADE-468-1054\":144240,\"HINES INDUSTRIES INC HC-10\":7200,\"HOBART (ITW FOOD EQUIPMENT GROUP NORTH AMERICA) AM15\":29700,\"HOFMANN MESS- UND AUSWUCHTTECHNIK GMBH & COMPANY KG HL16-1\":252000,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-841206\":11160,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE4518\":12600,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE4521\":18000,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE4845\":0,\"HONEYWELL INTERNATIONAL INC CUSTOMER MADE-161-CTE5178\":0,\"HONEYWELL INTERNATIONAL INC FENDALL PURE FLOW 1000\":3000,\"HOPPMAN (SHIBUYA HOPPMANN CORP) FT/30\":0,\"HYPERTHERM INC POWERMAX 85\":790260,\"HYTROL CONVEYOR COMPANY INC UNABLE TO ID-0701-ATS007\":114300,\"HYTROL CONVEYOR COMPANY INC UNABLE TO ID-311-LOM-CNV1\":0,\"HYTROL CONVEYOR COMPANY INC UNABLE TO ID-630-CNV-067\":3600,\"IDC CORP CUSTOMER MADE-424-5-452-046\":43200,\"IEMCA (BUCCI INDUSTRIES) UNABLE TO ID-0812-492-FIMAT-BAR\":3600,\"IES SYSTEMS INC IES12542\":1155180,\"ILLINOIS CRANE INC UNABLE TO ID-0733-HX616\":24300,\"IMS (INDUSTRIAL MOLDING SUPPLIES CO) 115675-DRUM SEPARATOR\":5400,\"IMVDESIGN SRO CUSTOMER MADE-490-WV21390\":64800,\"INDEX TRAUB TNM 28\":0,\"INDUSTRIAL MACHINE SPECIALTIES CUSTOMER MADE-535-CHILLER-60\":0,\"INFICON HLD5000\":216000,\"INFICON MICRO GC FUSION\":12600,\"INGERSOLL RAND NVC800A400\":99000,\"INTENSITY UNABLE TO ID-0024-LN11FCL00007\":216000,\"IPSEN USA DLR-4-4-E\":0,\"ITT INDUSTRIAL PRODUCTS P21 5-409-23-061-002\":86400,\"JACK MILLER CO FR\":295200,\"JAGER COLD SAWS FHC-275SA\":32400,\"JAMES BRINKLEY CO UNABLE TO ID-445-P-WBS-01-AGT\":234900,\"JANITROL (DAIKEN INDUSTRIES LTD) PC036-3B\":219960,\"JCR AUTOMATION INC LS1500\":28080,\"JD NEUHAUS UNABLE TO ID-0483-BOXING CELL HOIST\":3600,\"JET TOOLS (JPW IND) 1024P\":16200,\"JET TOOLS (JPW IND) J-8201VS\":25200,\"JLG INDUSTRIES INC (OSHKOSH CORP) 20MVL\":88200,\"JUNGHEINRICH (MCFA INC) UNABLE TO ID-0568-1130V3001\":0,\"KALAMAZOO INDUSTRIES INC S6M\":39600,\"KALAMAZOO INDUSTRIES INC UNABLE TO ID-0707-FMS-016\":1800,\"KBA-METRONIC GMBH (KOENIG & BAUER AG) HSAJC\":14400,\"KEARNEY & TRECKER (FIVES GROUP) 4CSM\":0,\"KENT OWENS 2-20-DS\":394200,\"KEPPEL SEGHERS UK LTD 6V001\":523800,\"KEYENCE CORP CUSTOMER MADE-0176-ASP FLATNESS CHECKER M401301\":4800,\"KNUTH MACHINE TOOL USA INC UFM6\":0,\"KO LEE (LEBLOND LTD) B6060\":25200,\"KOIKE ARONSON INC HD240R\":167760,\"KOIKE ARONSON INC UNABLE TO ID-010-PS244\":172800,\"KOMATSU WA500-8\":17399280,\"KONECRANES CXT30410025P26FCL0F\":140880,\"KONECRANES UNABLE TO ID-010-GB006\":144000,\"KONECRANES UNABLE TO ID-010-GE023\":86400,\"KONECRANES UNABLE TO ID-010-GE057\":86400,\"KONECRANES UNABLE TO ID-010-GE062\":100800,\"KONECRANES UNABLE TO ID-010-GE073\":86400,\"KOOLANT KOOLERS HCV15000-PR-NF-FILT-H\":0,\"KRRAS MACHINE MANUFACTURER RAS 206\":322200,\"KURTZ ERSA CORP (KURTZ HOLDING GMBH & COMPANY BETEILIGUNGS KG) IRPL650\":218880,\"L&P MACHINE 8488 RT 305\":0,\"L&P MACHINE UNABLE TO ID-535-LETOFF-14\":0,\"L&P MACHINE UNABLE TO ID-535-LETOFF-15\":0,\"L&P MACHINE UNABLE TO ID-535-LETOFF-62\":0,\"L&P MACHINE UNABLE TO ID-535-LETOFF-77\":0,\"LAGUN (REPUBLIC LAGUN MACHINE TOOL CO) FTV-1S\":201600,\"LANCO GROUP OF COMPANIES AAA-S10-73000\":19800,\"LANCO GROUP OF COMPANIES AAA-X11-00800\":72000,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-0490-WV21377-360\":84600,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-0490-WV21935\":469800,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN01-LP01-01\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN01-LP02-43\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN02-LP02-04\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN04-LP01-26\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN04-LP02-17\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP01-07\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP02-12\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP02-48\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-LN05-LP03-17\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-277-TL5-112\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV11795\":0,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV12019\":3600,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV20860\":397800,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV20891\":10800,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV20892\":10800,\"LANCO GROUP OF COMPANIES CUSTOMER MADE-490-WV21333\":682200,\"LANCO GROUP OF COMPANIES UNABLE TO ID-0490-WV21178\":113400,\"LARSON SYSTEM INC FLASH 11\":330960,\"LASCHET (HEINZ BERGER MASCHINENFABRIK GMBH & COMPANY KG) UNABLE TO ID-0669-2641\":41400,\"LAUFFER USA CUSTOMER MADE-468-7558\":92880,\"LEBLOND LTD REGAL 15 INCH\":86400,\"LEBLOND LTD UNABLE TO ID-0772-M327\":10800,\"LENNOX INTERNATIONAL INC HS29-060-9Y\":75600,\"LENNOX INTERNATIONAL INC R213366KR\":0,\"LINCOLN ELECTRIC CO PRECISION TIG 375\":99000,\"LINCOLN ELECTRIC CO REALWELD\":10800,\"LITTELL 60-30\":0,\"LVD GROUP (STRIPPIT INC) PPEB 150/10 MNC95\":25200,\"M&I DOOR SYSTEMS LTD UNABLE TO ID-689-4625\":0,\"M&J MACHINE SHOP INC 9726 C\":187200,\"MAGNAFLUX ZB100F\":0,\"MAGNATECH INTERNATIONAL INC 225-II\":176400,\"MAGNUS EQUIPMENT UNABLE TO ID-027-CFM210\":302400,\"MANCHESTER TANK (MCWANE INC) UNABLE TO ID-0006-CATIII-002\":12600,\"MANITOU 120 AETJ C3D\":149400,\"MARATHON EQUIPMENT CO 6030\":34200,\"MARATHON EQUIPMENT CO RJ-100SC\":99720,\"MARKETEER CO 323\":717900,\"MARLEY COOLING TECHNOLOGIES 222-721 NC 17\":120600,\"MARTIN ROLLSTAND 84X60W RH\":16879080,\"MARTIN SPROCKET & GEAR INC 21G5000002\":1018800,\"MARTIN SPROCKET & GEAR INC CUSTOMER MADE-432-DRIBBLE BIN SCREW CONV 1\":3600,\"MASON & SONS UNABLE TO ID-0733-HX6\":18900,\"MATTISON MACHINE WORKS NO. 24\":86400,\"MAUMEE VALLEY FABRICATORS CUSTOMER MADE-432-DRIBBLE BIN\":7200,\"MAXIMUM CONTROLS LLC MAX 2200 P\":0,\"MAYVILLE ENGINEERING CO 2548HT\":0,\"MAZAK CORP HCN10800-II\":2199600,\"MAZAK CORP YB-L400 A8M 4E\":135000,\"MCGILL AIRFLOW LLC UNABLE TO ID-0733-BH1030\":5400,\"MCM (MICHIGAN CUSTOM MACHINES INC) SO2668\":36000,\"MCM (MICHIGAN CUSTOM MACHINES INC) SO3564\":1751400,\"MELTON MACHINE & CONTROL CO 132312-16-A-125\":0,\"MELTON MACHINE & CONTROL CO 132312-16-A-139\":0,\"MELTON MACHINE & CONTROL CO LT-01\":18000,\"MELTON MACHINE & CONTROL CO UNABLE TO ID-673-MWB-15\":1800,\"MESH CUSTOMER MADE-436-BT-1846\":576000,\"METKON INSTRUMENTS INC METACUT 320\":0,\"METTLER-TOLEDO INTERNATIONAL INC UNABLE TO ID-492-835\":39600,\"MFI (MASS FINISHING INC) HZ-160\":0,\"MFL USA SERVICE CORP (CABALLE) CES-18X630 D\":21600,\"MILACRON PLASTICS A-S110IA\":164880,\"MILFORD (ORBITFORM LLC) 256\":252000,\"MILLER ELECTRIC MANUFACTURING CO (ILLINOIS TOOL WORKS CORP) DELTAWELD 451\":550200,\"MITTS & MERRILL LP MS-4220\":234000,\"MODERN MACHINE TOOL CO 2K\":370800,\"MODINE MANUFACTURING CO PD350AE0130\":97200,\"MODINE MANUFACTURING CO UNABLE TO ID-0733-BV2019\":1800,\"MONARCH LATHES 16IN\":59760,\"MOTION IND UNABLE TO ID-0726-GS-120-CAST02-HPU\":172800,\"MOTOMAN (YASKAWA AMERICA INC) UNABLE TO ID-0565-CELL 7-RBT 2\":72360,\"MS MACHINING SYSTEMS INC UNABLE TO ID-0691-BUA6008\":57600,\"MTA AUTOMATION INC TAE EVO 161\":109800,\"MYERS MIXERS LLC V600-20-935\":27600,\"NATIONAL MACHINERY LLC 1/4-5 BM\":424800,\"NATIONAL RIVET & MANUFACTURING CO 1600 STR\":655200,\"NATIONAL STANDARD UNABLE TO ID-0735-C-4-CAT PULLER 2\":42300,\"NELSON STUD WELDING 101\":615900,\"NEW HOLLAND DRYER DIV (FANTA EQUIPMENT CO) K-11\":0,\"NEWCO ENTERPRISES INC DM 1416\":36000,\"NIEHOFF ENDEX NORTH AMERICA INC ARH 800.1.3.R\":383400,\"NIEHOFF ENDEX NORTH AMERICA INC MMH 121.E2.1.A.16.2618\":40800,\"NIEHOFF ENDEX NORTH AMERICA INC MSM 85.12.1.A.01.V13\":100800,\"NILFISK ADVANCED 6340\":4826280,\"NILFISK ADVANCED CONDOR XL AXP\":0,\"NITTO SEIKO COMPANY LTD FM503H\":10800,\"NITTOKU ENGINEERING COMPANY LTD AN480-12-30\":174060,\"NITTOKU ENGINEERING COMPANY LTD AN720-12-30\":0,\"NITTOKU ENGINEERING COMPANY LTD CUSTOMER MADE-0490-277-WINDER 1-002\":0,\"NITTOKU ENGINEERING COMPANY LTD CUSTOMER MADE-0490-277-WINDER 1-003\":0,\"NORDSON CORP 3100-2AA32\":111600,\"NORDSON CORP 3400-1EA32\":122400,\"NORDSON CORP EXCEL 2000\":7894800,\"NORDSON CORP PROBLUE MELTER\":0,\"NORDSON CORP UNABLE TO ID-171-PL01G\":113400,\"NORDSON UNABLE TO ID-436-BT-1503\":0,\"NORTH EAST MACHINE & TOOL CO UNABLE TO ID-649-I-3056\":8280,\"NORTHWEST DRYER & MACHINERY INC UNABLE TO ID-671-02685\":0,\"NOVATEC INC MDM-25 HOPPER\":41040,\"NOVATEC INC UNABLE TO ID-020-AU-1578\":32400,\"NOVATEC INC UNABLE TO ID-020-AU-2206\":43200,\"NUTEC BICKLEY 12-2524\":597600,\"NYB (NEW YORK BLOWER CO) 2014-13777-01\":27000,\"O&R PRECISION GRINDING INC 33758A\":7200,\"OERLIKON LEYBOLD VACUUM GMBH SOGEVAC SV 40 BI\":117600,\"OKAMOTO CORP ACC-20.24DX\":0,\"OKUMA AMERICA CORP MC-1000H\":2199600,\"OLAMEF USA INC TP6/V-1/EC\":115560,\"OMA USA INC UNABLE TO ID-0568-1130M9596\":88200,\"OMA USA INC UNABLE TO ID-0568-1130M9597\":271800,\"OMRON SCIENTIFIC TECHNOLOGIES INC CUSTOMER MADE-0727-CPSX-03560\":129600,\"ORION (SUNSTONE) 150S V2\":0,\"P&H 60M-619X6-40TR20-JAM\":1081620,\"P&H CD-36633\":458640,\"PACIFIC PRESS TECHNOLOGIES INC UNABLE TO ID-0669-413\":63000,\"PANGBORN GROUP S880938\":2026800,\"PARKER HANNIFIN CORP 75-780\":0,\"PARKER HANNIFIN CORP C-72520 F50A\":0,\"PARKER HANNIFIN CORP CUSTOMER MADE-0035-DEW02423\":10800,\"PARKER HANNIFIN CORP CUSTOMER MADE-0035-DEW02501\":3600,\"PARKER HANNIFIN CORP CUSTOMER MADE-0035-DEW05800-2\":3600,\"PENTALIFT EQUIPMENT CORP UNABLE TO ID-0707-B1-DUN-10-6\":72000,\"PENTALIFT EQUIPMENT CORP UNABLE TO ID-0707-B1-STK-06\":3600,\"PIRANHA P50\":10800,\"PLASTICRAFT (NORMAN HAY GROUP) CUSTOMER MADE-0052-MFD30\":0,\"PLATO PRODUCTS INC (ITW) SP-500T\":224640,\"POLARCOOL (HH TECHNOLOGIES) PAC2K363S\":0,\"POLARCOOL (HH TECHNOLOGIES) UNABLE TO ID-633-G-SWAMP-10\":18000,\"POLARCOOL (HH TECHNOLOGIES) UNABLE TO ID-633-G-SWAMP-11\":340200,\"POURTIER (GAUDER GROUP) DTF2600E\":388800,\"PRAB INC CUSTOMER MADE-468-7075\":24480,\"PRAB INC S-06125-KA\":3600,\"PRAXAIR TECHNOLOGY INC UNABLE TO ID-015-MC-2038\":225000,\"PREMIER 18K750B3\":0,\"PRESTO LIFTS INC UNABLE TO ID-469-4865-B\":0,\"PRESTO LIFTS INC XS36-10F\":28800,\"PRESTOLITE POWER 1050H3-12C\":199800,\"PRETZELS INC CUSTOMER MADE-630-CNV-042\":0,\"PRETZELS INC CUSTOMER MADE-630-CNV-085\":11700,\"PRIMA POWER MT8-C\":468000,\"QUADRANT CUSTOMER MADE-468-322\":127260,\"QUALITEK ENGINEERING & MANUFACTURING INC CUSTOMER MADE-176-M401266\":198000,\"RAMCO EQUIPMENT CORP UNABLE TO ID-027-CFM035\":144000,\"RANSOHOFF CUSTOMER MADE-490-WV10615\":2049660,\"RANSOME WELDING POSITIONING EQUIPMENT 25P\":73800,\"RAPID INDUSTRIES INC 1310901\":1587600,\"RAYMOND CORP 20P40TN\":283500,\"RAYMOND CORP 2T-B-96-03455\":7200,\"RAYMOND CORP 8300\":5400,\"RAYMOND CORP EMB\":10800,\"RAYNOR GARAGE DOORS (RAYNOR WORLDWIDE) UNABLE TO ID-0707-OHD-072A\":27000,\"READING BAKERY SYS (MARKEL FOOD GROUP) J109-144-110\":32400,\"READING BAKERY SYS (MARKEL FOOD GROUP) UNABLE TO ID-630-BCT-013\":18000,\"READING BAKERY SYS (MARKEL FOOD GROUP) UNABLE TO ID-630-EXT-011\":47700,\"READING BAKERY SYS (MARKEL FOOD GROUP) UNABLE TO ID-630-PRF-011\":110700,\"REDVIKING UNABLE TO ID-673-DS-08\":21600,\"REED-RICO (REED MACHINERY INC) A75-TVB\":0,\"REEL-O-MATIC INC 1705\":54900,\"REN CORP CUSTOMER MADE-004-HU1909B\":222480,\"REN CORP CUSTOMER MADE-408-TS16\":174240,\"RITTAL GMBH & COMPANY KG SK3281100\":28800,\"ROBOVENT HVE-175-80-1-V\":43200,\"RODASYSTEM UNABLE TO ID-015-MC-413\":547200,\"ROFIN-SINAR LASER GMBH S1143\":2880,\"ROGERS ENGINEERING & MANUFACTURING COMPANY INC EX-4000\":2095200,\"ROGERS ENGINEERING AND MFG PU-ZR\":0,\"RTD (ROCHELEAU TOOL & DIE COMPANY INC) UNABLE TO ID-0734-35MW1-PO8\":7200,\"RTD (ROCHELEAU TOOL & DIE COMPANY INC) UNABLE TO ID-0734-35MW5-PO2\":0,\"SAFETY-KLEEN SYSTEMS INC 81\":23400,\"SAFETY-KLEEN SYSTEMS INC PCS-4255\":97200,\"SCHAUER VA4BC\":122400,\"SCHLEUNIGER ECOCUT 3300\":0,\"SCHMIDT TECHNOLOGY CORP 23/50\":17280,\"SCHMIDT TECHNOLOGY CORP NR 29.100\":128520,\"SCHMIDT TECHNOLOGY CORP PRESS CONTROL 50\":70200,\"SCHMIDT TECHNOLOGY CORP UNABLE TO ID-695-A227\":17280,\"SCOTT TURBON MIXER (HAYWARD GORDON) UNABLE TO ID-0744-4022\":84840,\"SEALEY (JACK SEALEY LTD) BG 200XL/98\":129600,\"SECURALL (A&A SHEET METAL PRODUCTS) UNABLE TO ID-0733-BE35\":0,\"SEILER VAKUUMTECHNIK GMBH 436-0910\":333000,\"SEMCO (PPG INDUSTRIES INC) BUS100\":43200,\"SENECA ENVIRONMENTAL PRODUCTS 154-FMTHS-100\":937740,\"SENECA ENVIRONMENTAL PRODUCTS CUSTOMER MADE-432-A-DRYER MILL DC SCREW 1\":523200,\"SENECA ENVIRONMENTAL PRODUCTS CUSTOMER MADE-432-B-KETTLE DC SCREW CONV\":1073400,\"SENTRY AIR SYSTEMS INC SS-100-FS-ST\":21600,\"SHEPARD NILES (KONECRANES) UNABLE TO ID-423-CRANE\":72000,\"SHERMAN TOOL INC 6X12 LAB MILL\":0,\"SHIZUOKA MACHINE TOOL COMPANY LTD MILLMASTER B-10V\":0,\"SHOP FOX (WOODSTOCK INTERNATIONAL INC) M1008\":63360,\"SIEMENS CORP 6AV6643-0CD01-1AX1\":268200,\"SILVAN IND (SAMUEL PRESSURE VESSEL GROUP) 789968\":33000,\"SLOAN VALVE CO CUSTOMER MADE-0624-MHS1\":9000,\"SMITH ENGINEERING INC UNABLE TO ID-0706-WS-0375\":0,\"SO-LOW ENVIRONMENTAL EQUIPMENT CO CH40-13\":0,\"SOLER & PALAU VENTILATION GROUP (S&P) UNABLE TO ID-0017-E20106\":221760,\"SOLITECH KF120W112\":0,\"SOUTHWORTH PRODUCTS CORP UTB4-45\":288000,\"SPANCO INC BEH5016\":0,\"SROKA INC PR DD\":77760,\"SS MANUFACTURING CO UNABLE TO ID-624-461\":0,\"SSI (SHREDDING SYSTEMS INC) 600-E\":27900,\"STAHLI USA DLM 705\":2019960,\"STANDARD XCHANGE (XYLEM) P41 5-431-23-085-012\":57600,\"STIEBEL 4082.01.02099.95-\":7200,\"STRATOFLEX PRODUCTS DIV (PARKER HANNIFIN CORP) CUSTOMER MADE-636-TFL-053\":61200,\"STRUERS INC PRONTOPRESS-20\":0,\"STURTEVANT RICHMONT UNABLE TO ID-004-TWH-EH-479\":0,\"SUGINO CORP CUSTOMER MADE-595-2634\":0,\"SULLAIR LS160-75L/A\":43200,\"SULLAIR SR-2400\":14400,\"SULLAIR TS32-300/350\":3364260,\"SVERDRUP TECHNOLOGY INC (JACOBS ENGINEERING GROUP INC) 98-3955-SVD\":2655000,\"SYNCRO MACHINE CO (NEXTROM HOLDING AG) CAPSTAN\":19800,\"SYSTEMATIX INC CUSTOMER MADE-468-7444\":75600,\"TBCOMFORT (SCHENCK ROTEC GMBH) TBC D-64273 DARMSTAD\":205200,\"TBS ENGINEERING LTD APP2\":82800,\"THERMAL DYNAMICS (ESAB) PAK5XR\":2700,\"THERMALL (WT LAROSE & ASSOCIATES INC) EO-1\":7200,\"THERMOTRON INC SM-5.5C\":0,\"THERN INC 4WP2TC-2000-8\":163080,\"TITAN CONVEYORS (TITAN INDUSTRIES INC) UNABLE TO ID-0035-DEW08080\":12600,\"TOOL & HOIST SPECIALTIES UNABLE TO ID-0565-ATS-200-306\":158400,\"TOOLCRAFT COMPANY INC CUSTOMER MADE-200-3876C\":82800,\"TOSH SRL PLATFORM S\":0,\"TRANE 5-414-23-108-001-P43\":57600,\"TRANE CCAD0204CKOOAT100F000U\":0,\"TRANE CVHF077GA2W0ACU2797W7B8TFA00000000LA10040LS00003A100A\":40500,\"TRANE S-023115422\":32400,\"TRANE TCD300B400BC\":7200,\"TRANE TCD360A40A0A1CB1\":3200400,\"TRANE YCC042F3MOAA\":7200,\"TRANE YSC060E3ELA000014\":39600,\"TRANE YSC92F4RHA09\":63900,\"TRANE YSD300F4RLA01\":742500,\"TRAVELEX UK LTD CLM044\":0,\"TRIAD INDUSTRIAL CORP TR-24-8K-15\":21600,\"TRINITYRAIL (TRINITY INDUSTRIES INC) C-POWER TRUNNION\":239400,\"TRINITYRAIL (TRINITY INDUSTRIES INC) CUSTOMER MADE-670-SWITCH 6\":93420,\"TRINITYRAIL (TRINITY INDUSTRIES INC) GATX1R\":7200,\"TRONICS AMERICA INC S3STP\":115200,\"TWIN CITY VENTCO (TWIN CITY FAN COMPANIES LTD) BCRD-160C\":16200,\"UNA-DYN (UNIVERSAL DYNAMICS INC) DHD-30\":245700,\"UNABLE TO ID 2987679\":28440,\"UNABLE TO ID HDC 360\":28800,\"UNABLE TO ID UNABLE TO ID-0013-BP-LCH\":131400,\"UNABLE TO ID UNABLE TO ID-0024-LN11FCL00043\":187200,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCT00001\":36000,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00012\":669600,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00019\":631800,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00026\":631800,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00031\":466200,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00088\":608400,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00121\":660600,\"UNABLE TO ID UNABLE TO ID-0024-LN11PCV00182\":0,\"UNABLE TO ID UNABLE TO ID-0024-LN11PGV00001\":1447200,\"UNABLE TO ID UNABLE TO ID-0035-DEW09092\":0,\"UNABLE TO ID UNABLE TO ID-0065-SB20\":14400,\"UNABLE TO ID UNABLE TO ID-0065-SB41\":10800,\"UNABLE TO ID UNABLE TO ID-020-AU-1354\":763200,\"UNABLE TO ID UNABLE TO ID-020-AU-805\":42120,\"UNABLE TO ID UNABLE TO ID-020-MANA024\":252000,\"UNABLE TO ID UNABLE TO ID-020-MANA239\":0,\"UNABLE TO ID UNABLE TO ID-020-VW034\":72000,\"UNABLE TO ID UNABLE TO ID-0213-HJ00013\":122400,\"UNABLE TO ID UNABLE TO ID-0213-MA00127\":22500,\"UNABLE TO ID UNABLE TO ID-0564-BP19WR1\":30600,\"UNABLE TO ID UNABLE TO ID-0565-ATS-017-103\":0,\"UNABLE TO ID UNABLE TO ID-0568-1130BH80\":38700,\"UNABLE TO ID UNABLE TO ID-0568-1130HX5764\":23400,\"UNABLE TO ID UNABLE TO ID-0568-1130M8313\":53100,\"UNABLE TO ID UNABLE TO ID-0568-1130M8809-5\":3600,\"UNABLE TO ID UNABLE TO ID-0568-1130M8974-2\":3600,\"UNABLE TO ID UNABLE TO ID-0568-1130M9162\":53100,\"UNABLE TO ID UNABLE TO ID-0598-FC0043\":0,\"UNABLE TO ID UNABLE TO ID-0660-J2-PAC-CNV-10\":3600,\"UNABLE TO ID UNABLE TO ID-0689-H063\":10260,\"UNABLE TO ID UNABLE TO ID-0701-J1-FSE-02\":9000,\"UNABLE TO ID UNABLE TO ID-0701-J1-LMS-04\":70200,\"UNABLE TO ID UNABLE TO ID-0706-CN-0209\":1800,\"UNABLE TO ID UNABLE TO ID-0706-TK-0862\":2700,\"UNABLE TO ID UNABLE TO ID-0707-B1-CAS-01-DC\":39600,\"UNABLE TO ID UNABLE TO ID-0707-J-DPS-001-SCR\":32400,\"UNABLE TO ID UNABLE TO ID-0707-M1-LCS-01\":19440,\"UNABLE TO ID UNABLE TO ID-0707-M1-SCS-10\":29160,\"UNABLE TO ID UNABLE TO ID-0726-GS-150-WBT-05\":99000,\"UNABLE TO ID UNABLE TO ID-0726-GS-195-CL-01\":34200,\"UNABLE TO ID UNABLE TO ID-0727-T6\":97200,\"UNABLE TO ID UNABLE TO ID-0733-BR371\":0,\"UNABLE TO ID UNABLE TO ID-0733-BR522\":0,\"UNABLE TO ID UNABLE TO ID-0733-HX121\":63000,\"UNABLE TO ID UNABLE TO ID-0733-M4155\":129600,\"UNABLE TO ID UNABLE TO ID-0734-30CB3-PO3\":10800,\"UNABLE TO ID UNABLE TO ID-0734-30CV-SPUMP2\":41400,\"UNABLE TO ID UNABLE TO ID-0734-35BU2-PO4\":0,\"UNABLE TO ID UNABLE TO ID-0734-35CB1-PO2\":0,\"UNABLE TO ID UNABLE TO ID-0734-35MW3-PO8\":0,\"UNABLE TO ID UNABLE TO ID-0744-4423\":28800,\"UNABLE TO ID UNABLE TO ID-0761-PT-L-RF-EXF-12-EEF-508\":17100,\"UNABLE TO ID UNABLE TO ID-0764-HPU03\":7200,\"UNABLE TO ID UNABLE TO ID-0811-811-266\":0,\"UNABLE TO ID UNABLE TO ID-0811-811-468\":0,\"UNABLE TO ID UNABLE TO ID-0811-811-474\":3600,\"UNABLE TO ID UNABLE TO ID-0812-240631-BOWL 2\":0,\"UNABLE TO ID UNABLE TO ID-0812-3588 ST-15\":3600,\"UNABLE TO ID UNABLE TO ID-0812-VENT 82-2\":3600,\"UNABLE TO ID UNABLE TO ID-201-MF256\":5400,\"UNABLE TO ID UNABLE TO ID-202-PANELBOARD LINES\":62100,\"UNABLE TO ID UNABLE TO ID-302-G040\":162000,\"UNABLE TO ID UNABLE TO ID-311-CTA-MIXDC\":334800,\"UNABLE TO ID UNABLE TO ID-423-TRASH COMPACTOR-01\":0,\"UNABLE TO ID UNABLE TO ID-492-6927-1\":0,\"UNABLE TO ID UNABLE TO ID-492-7192\":104400,\"UNABLE TO ID UNABLE TO ID-535-CIRCULATING PUMP 3\":0,\"UNABLE TO ID UNABLE TO ID-633-M-PFM-MCC-1A3\":18000,\"UNABLE TO ID UNABLE TO ID-649-I-3286\":347760,\"UNABLE TO ID UNABLE TO ID-649-P732-4\":54720,\"UNABLE TO ID UNABLE TO ID-649-Z AI-125\":0,\"UNABLE TO ID UNABLE TO ID-660-J5-05\":12600,\"UNABLE TO ID UNABLE TO ID-664-EF-08\":16200,\"UNABLE TO ID UNABLE TO ID-670-C18\":85800,\"UNABLE TO ID UNABLE TO ID-689-J119\":0,\"UNABLE TO ID WGH 81AR\":5400,\"UNHOLTZ-DICKIE CORP SAI60-R24C\":0,\"UNI-HYDRO INC 42-14\":0,\"UNIVERSAL INDUSTRIES INC D\":158400,\"US MOTORS (NIDEC MOTOR CORP) T593A ESP\":43200,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DAS-1303-21DB\":212400,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DBS-1709-72DR\":57600,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DBT-1811-05AC\":21600,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-DIS-1603-15M01\":50400,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-HRA-1302-07FR\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-HRA-1302-16M01\":28800,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-STK-1825-35BK02\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-SUB-2D\":82800,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-WBH-1601-05M01\":2063100,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-WBH-1601-20ZE01\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B1-WBI-1602-10M01\":7200,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-BBS-50\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-GSS-06A\":514800,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-GWS-07\":18000,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-KBS-09-BLW\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-MIX-VENT-FAN-03\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-MSS-05\":122400,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-RTS-01\":0,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-STC-13\":180000,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-VER-02\":129600,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-B3-WBC-06-02\":111600,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-M-RSH-05\":511920,\"USG (UNITED STATES GYPSUM CO) CUSTOMER MADE-633-M-WIL-05-CYC-SCNV\":7200,\"UVA (KMT GROUP) U 80 NMA33R\":192600,\"UVA (KMT GROUP) U80 GH23R\":532800,\"V-TECH ENGINEERING INC (BAKERITE SYSTEMS LLC) UNABLE TO ID-630-OVN-1206\":44700,\"VALENTE (PIERALISI GROUP) LT-08\":178560,\"VANTAGE CONTROLS (LEGRAND) GAGE INTERNAL\":0,\"VAUGHN MANUFACTURING CO CUSTOMER MADE-200-1701C\":221400,\"VERSA MACHINERY INC C-22\":151800,\"VERSA-MATIC (WARREN RUPP INC) UNABLE TO ID-0670-DP90\":16200,\"VERTEX CRANES & HOISTS B.ARM-C\":14400,\"VESTIL MANUFACTURING CORP EHLT-4272-6-44\":64800,\"VIM RECYCLERS 3400-HD LH\":0,\"WABASH MPI (ACS GROUP) 50-18-2TM\":22320,\"WABASH MPI (ACS GROUP) 5300-30-30-2CTRMX\":341760,\"WD DISTRIBUTING UNABLE TO ID-483-BT-9185\":25200,\"WELCH VACUUM (GARDNER DENVER) 1397 SMST-PDPLUS2RLI-PCT-BV-01K-05-SP3\":442800,\"WHEELABRATOR A3-44873\":61200,\"WILBANKS MCWORTH LLC WM002\":21600,\"WILTON TOOL CO (JPW INDUSTRIES INC) CUSTOMER MADE-698-C030001\":280800,\"WIRTZ MFG CO INC EFR6500\":0,\"WISCONSIN OVEN CUSTOMER MADE-436-BT-1387\":273600,\"WSF INDUSTRIES INC UNABLE TO ID-0744-3442\":1130400,\"WYSONG MANUFACTURING (DELTA PHOENIX INC) THS100-72\":0,\"YALE GLC 040\":0,\"YALE HOISTS (CM) CEW5-21BM19S4\":529200,\"YALE HOISTS (CM) KEL-1/2-20PT30S1\":106200,\"YALE MATERIALS HANDLING CORP MPB040-EN24T1848\":0,\"YAMATO CORP DKN812\":112320,\"YAMATO CORP DPI-320\":72000,\"YASKAWA ELECTRIC CORP MA1400\":0,\"YORK (JOHNSON CONTROLS INC) DM240N24A1AAA1C\":97200,\"YORK (JOHNSON CONTROLS INC) H5CE090A25A\":54000,\"YORK (JOHNSON CONTROLS INC) YCJD30S41S1A\":54000,\"YORK (JOHNSON CONTROLS INC) YCJD60S44S3A\":30600,\"YOUNG & BERTKE AIR SYSTEMS CO CUSTOMER MADE-200-M13308A\":19800,\"ZARGES GMBH UNABLE TO ID-0065-L13\":3600,\"ZEISS NORTH AMERICA ACCURA MASS\":0,\"ZEKS COMPRESSED AIR SOLUTIONS 400HSGA400\":45360}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(dfnew.where(dfnew[\"_c43\"] == \"CLOSED\").groupby(\"_c12\").sum(\"TotalTimeSecs\"))"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c19"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "_c19",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"ABRASIVE\":2308,\"AIR QUALITY\":2025,\"ASSEMBLY\":5230,\"CALIBRATE\":1514,\"CLEANING\":1740,\"COMPRESSOR\":1209,\"COMPUTER\":21,\"CONVEYOR\":1207,\"CRANES\":1910,\"CUTTING\":8087,\"E H S\":111,\"FACILITY\":454,\"FILTER\":409,\"FORMING\":1799,\"HAND TOOL\":41,\"HEAT TREATMENT\":3746,\"HVAC\":2171,\"MACHINE TOOL\":844,\"MARKING\":1311,\"MATERIAL HANDLING\":3868,\"MATERIALS\":493,\"MIX-BLEND\":215,\"MOLD\":46,\"MOTOR\":287,\"NULL\":580,\"PACKAGING\":1128,\"PAINT\":132,\"POWER\":242,\"PRESS\":2336,\"PROCESS\":7032,\"PUMP\":752,\"STORAGE\":393,\"TEST\":7920,\"TOOLING\":28,\"VEHICLE\":556,\"WASTE\":103,\"WELDING\":2287,\"WINDING\":1965,\"WORK AREA\":10195}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.where(df[\"_c43\"] == \"CLOSED\").groupby([\"_c18\", \"_c19\", \"_c20\", \"_c21\", \"_c22\", \"_c23\"]).count())"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c11"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "_c11",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"1-100387\":1,\"1-100817\":1,\"1-100992\":1,\"1-101438\":2,\"1-101623\":1,\"1-102386\":1,\"1-103324\":2,\"1-104133\":15,\"1-104197\":74,\"1-104226\":7,\"1-104232\":23,\"1-104336\":9,\"1-104635\":95,\"1-104657\":12,\"1-104668\":18,\"1-104671\":37,\"1-104759\":3,\"1-104764\":9,\"1-104915\":17,\"1-104946\":4,\"1-104947\":5,\"1-104979\":41,\"1-105008\":1,\"1-105030\":2,\"1-105035\":3,\"1-105040\":8,\"1-105091\":1,\"1-105102\":2,\"1-105165\":68,\"1-105275\":37,\"1-106254\":23,\"1-106346\":1,\"1-106416\":6,\"1-106429\":44,\"1-106484\":33,\"1-106487\":13,\"1-106510\":2,\"1-106612\":33,\"1-106636\":138,\"1-106691\":122,\"1-106783\":35,\"1-106889\":118,\"1-106948\":427,\"1-107379\":5,\"1-107383\":4,\"1-107624\":2,\"1-107675\":2,\"1-108222\":7,\"1-108260\":370,\"1-108284\":184,\"1-108294\":10,\"1-1083\":174,\"1-108319\":4,\"1-108356\":8,\"1-108372\":1,\"1-108423\":58,\"1-108443\":26,\"1-108562\":3,\"1-108595\":28,\"1-108615\":105,\"1-108665\":70,\"1-108938\":5,\"1-109119\":21,\"1-109122\":3,\"1-109197\":1,\"1-109279\":2,\"1-109343\":2,\"1-109415\":5,\"1-109601\":19,\"1-109634\":35,\"1-109787\":11,\"1-109799\":8,\"1-109812\":46,\"1-110114\":50,\"1-110273\":2,\"1-110278\":4,\"1-110316\":5,\"1-110581\":4,\"1-110593\":9,\"1-110741\":7,\"1-1111\":121,\"1-111469\":25,\"1-111510\":9,\"1-111696\":45,\"1-111932\":180,\"1-111951\":31,\"1-111961\":75,\"1-111973\":1,\"1-112006\":49,\"1-112162\":16,\"1-112236\":26,\"1-112309\":209,\"1-112405\":15,\"1-112443\":47,\"1-112539\":1,\"1-112613\":1,\"1-112908\":18,\"1-112967\":11,\"1-113240\":6,\"1-113303\":138,\"1-113375\":36,\"1-113395\":2,\"1-113452\":2,\"1-113528\":10,\"1-113887\":2,\"1-113909\":249,\"1-113936\":3,\"1-113968\":1,\"1-114057\":16,\"1-114076\":94,\"1-114197\":27,\"1-114256\":4,\"1-114312\":23,\"1-114385\":48,\"1-114488\":1,\"1-114491\":14,\"1-114507\":25,\"1-114509\":40,\"1-114514\":21,\"1-114565\":20,\"1-114583\":6,\"1-114896\":5,\"1-114911\":1,\"1-115056\":23,\"1-115128\":1,\"1-115277\":1,\"1-115280\":4,\"1-115453\":3,\"1-115506\":2,\"1-115663\":6,\"1-115700\":2,\"1-115703\":1,\"1-115765\":4,\"1-115783\":2,\"1-116006\":18,\"1-116059\":5,\"1-116252\":18,\"1-116313\":2,\"1-116330\":43,\"1-116862\":59,\"1-1174\":537,\"1-117471\":98,\"1-117499\":10,\"1-117628\":124,\"1-117686\":146,\"1-117871\":39,\"1-118022\":57,\"1-118070\":8,\"1-118128\":27,\"1-118338\":42,\"1-118409\":15,\"1-118635\":36,\"1-118636\":34,\"1-118750\":9,\"1-118885\":7,\"1-119077\":10,\"1-119094\":113,\"1-119096\":35,\"1-119110\":39,\"1-119120\":137,\"1-119175\":11,\"1-119197\":15,\"1-119221\":24,\"1-119222\":29,\"1-119352\":2,\"1-119529\":28,\"1-119686\":9,\"1-119704\":8,\"1-119785\":16,\"1-119856\":24,\"1-120062\":296,\"1-120201\":22,\"1-120300\":14,\"1-120371\":252,\"1-120407\":2,\"1-120417\":12,\"1-120573\":106,\"1-120607\":61,\"1-120618\":2,\"1-120763\":2,\"1-120903\":7,\"1-120915\":23,\"1-120922\":50,\"1-120972\":61,\"1-121095\":14,\"1-121102\":10,\"1-121127\":204,\"1-121162\":13,\"1-121284\":65,\"1-121315\":18,\"1-121476\":20,\"1-121655\":142,\"1-121704\":42,\"1-121723\":96,\"1-121807\":14,\"1-122182\":46,\"1-122234\":5,\"1-122244\":19,\"1-122358\":38,\"1-122377\":14,\"1-122415\":12,\"1-122560\":4,\"1-122662\":19,\"1-122668\":57,\"1-122851\":7,\"1-122867\":20,\"1-122929\":50,\"1-123014\":51,\"1-123131\":24,\"1-124139\":7,\"1-124156\":198,\"1-124160\":27,\"1-124166\":14,\"1-124245\":34,\"1-124291\":15,\"1-124298\":7,\"1-124312\":7,\"1-124533\":4,\"1-124574\":80,\"1-124787\":50,\"1-124824\":40,\"1-124830\":59,\"1-124986\":46,\"1-125040\":169,\"1-125151\":37,\"1-125357\":2,\"1-126631\":8,\"1-126664\":2,\"1-126711\":5,\"1-126865\":10,\"1-126888\":1,\"1-126901\":5,\"1-126973\":2,\"1-127761\":19,\"1-127770\":42,\"1-127782\":14,\"1-127801\":51,\"1-127908\":81,\"1-128587\":13,\"1-128608\":6,\"1-128616\":6,\"1-128618\":2,\"1-128726\":1,\"1-129458\":1,\"1-130301\":3,\"1-130329\":17,\"1-130342\":5,\"1-130531\":3,\"1-130550\":168,\"1-130554\":31,\"1-130630\":17,\"1-130794\":5,\"1-130880\":37,\"1-131018\":18,\"1-131191\":2,\"1-131230\":3,\"1-131466\":3,\"1-132832\":70,\"1-133294\":36,\"1-133377\":10,\"1-133425\":7,\"1-133438\":33,\"1-133488\":48,\"1-133561\":98,\"1-133655\":8,\"1-133805\":7,\"1-133871\":72,\"1-133882\":38,\"1-133932\":8,\"1-133954\":9,\"1-134135\":3,\"1-134212\":6,\"1-134232\":5,\"1-134277\":10,\"1-134300\":1,\"1-134508\":1,\"1-135498\":103,\"1-135499\":84,\"1-135706\":91,\"1-135777\":17,\"1-135812\":5,\"1-135861\":3,\"1-135982\":82,\"1-136671\":19,\"1-136695\":74,\"1-136944\":10,\"1-137015\":11,\"1-137550\":5,\"1-137687\":51,\"1-137711\":262,\"1-137872\":281,\"1-137899\":294,\"1-137931\":34,\"1-137975\":43,\"1-138023\":18,\"1-138045\":50,\"1-138104\":2,\"1-138152\":19,\"1-138690\":24,\"1-139030\":395,\"1-139085\":22,\"1-139206\":136,\"1-139245\":31,\"1-139327\":17,\"1-139388\":1,\"1-139397\":374,\"1-139519\":44,\"1-139597\":92,\"1-139627\":547,\"1-139689\":39,\"1-139746\":36,\"1-139777\":9,\"1-139818\":2,\"1-139824\":3,\"1-139840\":6,\"1-139944\":21,\"1-140028\":14,\"1-140583\":31,\"1-140617\":110,\"1-141554\":27,\"1-141838\":4,\"1-141909\":26,\"1-142016\":42,\"1-142220\":16,\"1-142239\":16,\"1-142388\":3,\"1-142948\":1,\"1-142991\":7,\"1-143052\":1216,\"1-143198\":3,\"1-143223\":5,\"1-143321\":19,\"1-143325\":58,\"1-143369\":29,\"1-143440\":44,\"1-143541\":316,\"1-143575\":347,\"1-143685\":28,\"1-143874\":13,\"1-143880\":13,\"1-144070\":28,\"1-144083\":4,\"1-144137\":6,\"1-144234\":37,\"1-144350\":7,\"1-144462\":5,\"1-144498\":273,\"1-144592\":105,\"1-144732\":83,\"1-144792\":2,\"1-144825\":95,\"1-144838\":113,\"1-144866\":4,\"1-144905\":21,\"1-144909\":25,\"1-144918\":6,\"1-145309\":13,\"1-145310\":14,\"1-145419\":22,\"1-145511\":55,\"1-145528\":5,\"1-145532\":4,\"1-145551\":3,\"1-145566\":41,\"1-145598\":9,\"1-145717\":9,\"1-145776\":22,\"1-145838\":2,\"1-145871\":10,\"1-145951\":10,\"1-146007\":11,\"1-146065\":5,\"1-146258\":22,\"1-146376\":2,\"1-146388\":2,\"1-146598\":4,\"1-146784\":12,\"1-147053\":4,\"1-147134\":23,\"1-147202\":10,\"1-147573\":1,\"1-147613\":38,\"1-147895\":7,\"1-147945\":13,\"1-147953\":11,\"1-147970\":77,\"1-148004\":123,\"1-148084\":137,\"1-148148\":1,\"1-148251\":18,\"1-148449\":166,\"1-148682\":5,\"1-148696\":3,\"1-148726\":14,\"1-148942\":30,\"1-149003\":11,\"1-149107\":1,\"1-149289\":3,\"1-149742\":13,\"1-149749\":78,\"1-149807\":94,\"1-149850\":16,\"1-149972\":2,\"1-150017\":3,\"1-150101\":12,\"1-150231\":13,\"1-150388\":15,\"1-150399\":2,\"1-150612\":7,\"1-150655\":9,\"1-150861\":132,\"1-151035\":55,\"1-151155\":24,\"1-151246\":23,\"1-151442\":27,\"1-151569\":26,\"1-151649\":11,\"1-151715\":13,\"1-151720\":18,\"1-151754\":2,\"1-152075\":44,\"1-152287\":20,\"1-152304\":27,\"1-152341\":72,\"1-152473\":8,\"1-152551\":23,\"1-152568\":36,\"1-152739\":2,\"1-152880\":20,\"1-153033\":2,\"1-153110\":20,\"1-153252\":266,\"1-153264\":162,\"1-153429\":17,\"1-153435\":11,\"1-153472\":17,\"1-153824\":24,\"1-154392\":14,\"1-154417\":11,\"1-154490\":25,\"1-154644\":406,\"1-15501\":649,\"1-155389\":33,\"1-155421\":4,\"1-155505\":10,\"1-156574\":1,\"1-156886\":16,\"1-157086\":3,\"1-157128\":4,\"1-157169\":11,\"1-157170\":10,\"1-157449\":1,\"1-157477\":52,\"1-157651\":32,\"1-15783\":372,\"1-157866\":7,\"1-158139\":8,\"1-158324\":15,\"1-158601\":3,\"1-158928\":23,\"1-158945\":239,\"1-158988\":65,\"1-159131\":27,\"1-159519\":1,\"1-159775\":33,\"1-159808\":14,\"1-159815\":1,\"1-160120\":53,\"1-160196\":8,\"1-160245\":23,\"1-160373\":2,\"1-160380\":6,\"1-160686\":20,\"1-161029\":9,\"1-161758\":2,\"1-161775\":2,\"1-161843\":3,\"1-162183\":1,\"1-162356\":37,\"1-162361\":5,\"1-162363\":1,\"1-162764\":7,\"1-162867\":5,\"1-163156\":1,\"1-163820\":8,\"1-163844\":2,\"1-163846\":5,\"1-163871\":20,\"1-164256\":6,\"1-164561\":14,\"1-164649\":13,\"1-164665\":3,\"1-164746\":5,\"1-164749\":4,\"1-164827\":5,\"1-165282\":1,\"1-165585\":13,\"1-165648\":3,\"1-165650\":3,\"1-166149\":15,\"1-166290\":5,\"1-16643\":27,\"1-166512\":1,\"1-166555\":191,\"1-166561\":152,\"1-166687\":5,\"1-166797\":21,\"1-166938\":4,\"1-167088\":4,\"1-167318\":7,\"1-167741\":9,\"1-167934\":7,\"1-168227\":3,\"1-168297\":44,\"1-168433\":2,\"1-168438\":2,\"1-168609\":12,\"1-168844\":5,\"1-168930\":1,\"1-168957\":3,\"1-168978\":10,\"1-169081\":24,\"1-169441\":6,\"1-171022\":5,\"1-171035\":1,\"1-171129\":3,\"1-171409\":1,\"1-171483\":2,\"1-171850\":3,\"1-171922\":2,\"1-172017\":1,\"1-172286\":1,\"1-17247\":38,\"1-172787\":2,\"1-173962\":1,\"1-173989\":5,\"1-17417\":23,\"1-17467\":18,\"1-174867\":1,\"1-17498\":3,\"1-17508\":327,\"1-175107\":4,\"1-175531\":3,\"1-175535\":8,\"1-175605\":26,\"1-176257\":7,\"1-17672\":1,\"1-177076\":1,\"1-177168\":8,\"1-177181\":9,\"1-177211\":2,\"1-177418\":1,\"1-177509\":3,\"1-177625\":1,\"1-177739\":7,\"1-177751\":2,\"1-177761\":2,\"1-177917\":1,\"1-177922\":4,\"1-17805\":686,\"1-178102\":1,\"1-179210\":2,\"1-179292\":4,\"1-179457\":1,\"1-179708\":1,\"1-18001\":1,\"1-18061\":1,\"1-181421\":1,\"1-182114\":42,\"1-18506\":7,\"1-18630\":38,\"1-1895\":1,\"1-1965\":11,\"1-20055\":8,\"1-20157\":46,\"1-20258\":15,\"1-20286\":17,\"1-20389\":14,\"1-20447\":55,\"1-20525\":6,\"1-20546\":94,\"1-20580\":1,\"1-20589\":1,\"1-20607\":3,\"1-20833\":328,\"1-21059\":14,\"1-21070\":2,\"1-21091\":27,\"1-21171\":50,\"1-21178\":73,\"1-21359\":9,\"1-21405\":72,\"1-21443\":39,\"1-21506\":20,\"1-21513\":20,\"1-21626\":47,\"1-21641\":46,\"1-21660\":10,\"1-21775\":87,\"1-2369\":19,\"1-2418\":10,\"1-2490\":77,\"1-2522\":7,\"1-2523\":10,\"1-2586\":3,\"1-2644\":7,\"1-2673\":13,\"1-2710\":1,\"1-2755\":22,\"1-2847\":2,\"1-3125\":21,\"1-3137\":3,\"1-3173\":5,\"1-34159\":9,\"1-34209\":1,\"1-34235\":3,\"1-34245\":9,\"1-34373\":11,\"1-34423\":5,\"1-34467\":38,\"1-34497\":1,\"1-41885\":699,\"1-41902\":7,\"1-41915\":2,\"1-42449\":12,\"1-43600\":559,\"1-43674\":80,\"1-43716\":356,\"1-43789\":57,\"1-43843\":2437,\"1-43846\":1,\"1-43858\":8,\"1-43880\":74,\"1-43911\":28,\"1-43919\":57,\"1-44033\":212,\"1-4423\":1,\"1-44289\":3,\"1-44347\":45,\"1-44378\":4,\"1-44499\":4,\"1-44524\":49,\"1-44704\":40,\"1-44959\":31,\"1-4501\":1,\"1-45032\":25,\"1-45095\":52,\"1-45110\":1,\"1-45156\":3,\"1-45180\":7,\"1-45329\":30,\"1-45379\":40,\"1-45442\":257,\"1-45501\":5,\"1-45953\":502,\"1-46257\":3,\"1-46454\":156,\"1-46498\":121,\"1-46560\":74,\"1-4681\":7,\"1-4729\":1,\"1-48247\":22,\"1-48373\":16,\"1-4856\":1,\"1-49064\":182,\"1-49117\":10,\"1-49141\":313,\"1-49171\":8,\"1-49185\":37,\"1-49258\":9,\"1-49307\":68,\"1-49316\":40,\"1-49335\":33,\"1-49478\":118,\"1-49507\":21,\"1-49537\":1,\"1-49567\":22,\"1-49805\":3,\"1-49812\":3,\"1-50034\":1,\"1-50156\":16,\"1-5041\":486,\"1-50675\":10,\"1-50707\":9,\"1-50840\":146,\"1-50914\":13,\"1-50928\":14,\"1-51029\":1,\"1-51202\":96,\"1-51511\":2,\"1-51577\":6,\"1-51645\":1,\"1-51723\":56,\"1-51929\":15,\"1-52048\":2,\"1-53295\":23,\"1-53463\":20,\"1-53556\":24,\"1-53574\":445,\"1-53644\":56,\"1-53702\":5,\"1-53739\":11,\"1-53784\":9,\"1-53934\":33,\"1-53993\":21,\"1-53995\":25,\"1-54013\":7,\"1-54034\":26,\"1-54042\":24,\"1-54054\":18,\"1-54066\":13,\"1-54087\":2,\"1-54160\":7,\"1-54181\":17,\"1-54234\":84,\"1-54238\":254,\"1-54256\":21,\"1-54275\":45,\"1-54467\":205,\"1-54707\":4,\"1-54748\":9,\"1-55106\":21,\"1-55113\":46,\"1-55134\":51,\"1-55567\":2,\"1-56023\":18,\"1-56073\":9,\"1-56220\":3,\"1-56425\":17,\"1-56697\":32,\"1-56699\":2,\"1-56814\":23,\"1-56936\":86,\"1-56970\":13,\"1-57110\":63,\"1-57137\":5,\"1-5717\":29,\"1-57237\":150,\"1-57242\":35,\"1-5725\":12,\"1-57375\":22,\"1-57419\":5,\"1-57435\":37,\"1-5747\":1,\"1-57493\":2,\"1-57537\":1,\"1-57651\":87,\"1-5775\":2,\"1-57881\":2,\"1-58080\":98,\"1-58092\":93,\"1-58204\":3,\"1-58348\":5,\"1-58502\":49,\"1-5861\":50,\"1-58649\":3,\"1-58680\":10,\"1-58725\":20,\"1-5882\":1,\"1-59080\":34,\"1-59365\":20,\"1-5964\":9,\"1-59877\":6,\"1-59887\":1,\"1-59906\":48,\"1-59921\":1,\"1-60015\":2,\"1-60025\":33,\"1-60058\":144,\"1-6014\":10,\"1-60253\":27,\"1-60333\":376,\"1-60437\":181,\"1-60447\":104,\"1-60495\":1,\"1-6161\":56,\"1-6178\":7,\"1-6220\":1,\"1-6297\":4,\"1-6361\":31,\"1-63835\":17,\"1-63863\":170,\"1-63869\":1,\"1-64010\":1,\"1-6416\":5,\"1-64218\":9,\"1-64248\":6,\"1-64344\":2,\"1-64349\":1,\"1-64464\":63,\"1-64583\":18,\"1-64660\":242,\"1-64756\":56,\"1-6487\":43,\"1-6548\":7,\"1-67177\":1,\"1-6828\":3,\"1-68811\":61,\"1-68814\":81,\"1-68910\":80,\"1-68965\":655,\"1-68981\":490,\"1-69017\":6,\"1-69050\":44,\"1-69140\":184,\"1-6935\":3,\"1-69610\":2,\"1-69838\":13,\"1-6990\":10,\"1-70046\":3,\"1-70048\":5,\"1-70655\":48,\"1-70833\":54,\"1-70894\":39,\"1-70949\":35,\"1-70951\":52,\"1-71033\":18,\"1-71082\":328,\"1-7157\":58,\"1-71605\":1,\"1-72188\":1,\"1-72345\":5,\"1-72374\":34,\"1-72449\":5,\"1-72458\":4,\"1-72541\":4,\"1-72549\":4,\"1-73085\":17,\"1-73200\":16,\"1-73406\":8,\"1-73492\":9,\"1-73875\":142,\"1-73890\":99,\"1-74156\":8,\"1-78164\":22,\"1-78171\":27,\"1-78185\":640,\"1-78526\":59,\"1-78557\":21,\"1-78736\":14,\"1-78759\":49,\"1-78783\":1,\"1-78792\":4,\"1-78818\":84,\"1-78833\":45,\"1-78853\":3,\"1-78893\":13,\"1-78975\":73,\"1-79197\":95,\"1-79253\":3,\"1-7965\":33,\"1-7966\":42,\"1-7976\":49,\"1-80603\":145,\"1-80676\":50,\"1-80720\":37,\"1-80760\":5,\"1-80823\":6,\"1-80850\":75,\"1-80912\":5,\"1-8095\":3,\"1-81002\":57,\"1-81040\":18,\"1-8114\":2,\"1-81159\":58,\"1-81241\":17,\"1-81295\":4,\"1-81351\":1,\"1-81384\":185,\"1-8147\":9,\"1-81615\":49,\"1-81646\":6,\"1-81720\":16,\"1-8214\":11,\"1-83018\":32,\"1-83029\":27,\"1-83035\":27,\"1-83087\":49,\"1-83184\":22,\"1-83215\":119,\"1-83426\":21,\"1-83456\":74,\"1-83486\":2,\"1-83545\":113,\"1-83563\":37,\"1-83568\":21,\"1-83726\":3,\"1-8381\":118,\"1-83925\":1,\"1-83931\":12,\"1-84075\":15,\"1-84114\":224,\"1-84216\":2,\"1-84433\":8,\"1-84557\":1,\"1-84589\":2,\"1-84650\":2,\"1-84722\":34,\"1-84762\":22,\"1-84776\":42,\"1-8486\":234,\"1-84879\":4,\"1-85177\":9,\"1-86626\":7,\"1-86677\":13,\"1-88247\":20,\"1-88257\":5,\"1-88965\":17,\"1-88968\":26,\"1-88983\":27,\"1-89082\":360,\"1-89145\":22,\"1-8925\":760,\"1-89603\":3,\"1-89718\":3,\"1-90099\":2,\"1-90204\":6,\"1-90211\":69,\"1-90225\":24,\"1-90239\":14,\"1-90448\":9,\"1-90553\":1,\"1-90779\":4,\"1-90850\":9,\"1-90851\":49,\"1-90920\":1,\"1-90962\":4,\"1-91162\":58,\"1-91204\":215,\"1-91309\":63,\"1-91373\":22,\"1-91409\":3,\"1-91450\":12,\"1-91570\":142,\"1-91652\":56,\"1-91708\":140,\"1-91718\":58,\"1-91741\":49,\"1-91781\":25,\"1-92228\":100,\"1-92282\":12,\"1-92438\":3,\"1-92493\":2,\"1-92556\":1,\"1-92624\":29,\"1-92626\":111,\"1-92912\":27,\"1-92930\":6,\"1-93043\":29,\"1-93044\":16,\"1-93080\":232,\"1-93096\":240,\"1-93116\":14,\"1-93120\":1,\"1-93364\":31,\"1-93419\":1,\"1-93462\":49,\"1-93469\":313,\"1-93554\":11,\"1-93574\":8,\"1-93594\":65,\"1-93714\":22,\"1-93767\":3,\"1-93769\":1,\"1-93805\":2,\"1-93923\":86,\"1-93931\":82,\"1-93948\":210,\"1-93963\":64,\"1-93997\":126,\"1-94090\":204,\"1-94189\":86,\"1-94190\":151,\"1-94194\":160,\"1-94266\":2,\"1-94297\":25,\"1-95211\":1,\"1-95268\":2,\"1-95549\":2,\"1-95571\":1,\"1-97156\":5,\"1-97201\":2,\"1-97233\":8,\"1-97420\":1,\"1-97427\":5,\"1-97575\":1,\"1-97603\":1,\"1-97678\":1,\"1-97691\":4,\"1-97755\":65,\"1-97758\":47,\"1-97772\":8,\"1-98073\":34,\"1-98168\":19,\"1-98485\":25,\"1-98504\":1,\"1-98694\":34,\"1-98711\":25,\"1-99230\":1,\"1-99697\":58,\"1-99703\":12}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.where(df[\"_c43\"] == \"CLOSED\").groupby([\"_c11\", \"_c12\"]).count())"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.types import DateType"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"1-ST0000104090\":1,\"1-ST90000436\":1000}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.withColumn(\"TaskDate\",df['_c76'].cast(DateType())))"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"source": [
							"dfnew1 = df.withColumn(\"TaskDate\",df['_c76'].cast(DateType()))"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import * \n",
							"from pyspark.sql import *"
						],
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"year"
									],
									"yLabel": "year",
									"xLabel": "_c0",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"year\":{\"1-ST0000104090\":2016,\"1-ST90000436\":2015101}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"dfnew2 = dfnew1.withColumn(\"year\", year(col(\"TaskDate\"))).withColumn(\"month\", month(col(\"TaskDate\"))).withColumn(\"day\", dayofmonth(col(\"TaskDate\"))) \n",
							"display(dfnew2)"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"TotalTimeSecs"
									],
									"yLabel": "TotalTimeSecs",
									"xLabel": "_c0",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"TotalTimeSecs\":{\"1-ST0000104090\":1800,\"1-ST90000436\":3129240}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(dfnew2.where(dfnew2[\"_c43\"] == \"CLOSED\"))"
						],
						"outputs": [],
						"execution_count": 31
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"month"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "month",
									"aggregation": "SUM",
									"aggByBackend": false,
									"isValid": true,
									"inValidMsg": null,
									"stacked": true
								},
								"aggData": "{\"count\":{\"1\":180,\"2\":120,\"3\":27,\"4\":121,\"5\":99,\"6\":13,\"7\":149,\"8\":242,\"9\":115,\"10\":43,\"11\":49,\"12\":75}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(dfnew2.where(dfnew2[\"_c43\"] == \"CLOSED\").groupby([\"year\", \"month\", \"day\", \"_c11\", \"_c12\"]).count())"
						],
						"outputs": [],
						"execution_count": 29
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"month"
									],
									"values": [
										"year"
									],
									"yLabel": "year",
									"xLabel": "month",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"year\":{\"2\":74667,\"3\":223998,\"4\":36319,\"5\":268313,\"6\":340961,\"7\":82730,\"8\":203817,\"9\":147313,\"10\":155315,\"11\":330866,\"12\":155365}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(dfnew2.where(dfnew2[\"_c43\"] == \"CLOSED\").groupby([\"year\", \"month\", \"day\", \"_c11\", \"_c12\"]).sum(\"TotalTimeSecs\"))"
						],
						"outputs": [],
						"execution_count": 30
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/blobread')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('blobread_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql import SparkSession"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"blob_sas_token = mssparkutils.credentials.getSecret(\"accvault1\",\"accbbstore\",\"accvault1\")\r\n",
							"blob_acc_name = mssparkutils.credentials.getSecret(\"accvault1\",\"accstorageaccname\",\"accvault1\")"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.conf.set(\"fs.azure.account.key.%s.dfs.core.windows.net\" % blob_acc_name, blob_sas_token)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"blob_account_name = blob_acc_name\r\n",
							"blob_container_name = 'coviddata19'\r\n",
							"blob_relative_path = ''\r\n",
							"linked_service_name = 'accvault1'"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"wasb_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(wasb_path)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dfread = spark.read.parquet(wasb_path).load()\r\n",
							"display(dfread)"
						],
						"outputs": [],
						"execution_count": 8
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/coviddatasave')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('coviddatasave_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.sql import SparkSession"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"blob_sas_token = mssparkutils.credentials.getSecret(\"accvault1\",\"accbbstore\",\"accvault1\")\r\n",
							"blob_acc_name = mssparkutils.credentials.getSecret(\"accvault1\",\"accstorageaccname\",\"accvault1\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(blob_acc_name)\r\n",
							"print(blob_sas_token)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.conf.set(\"fs.azure.account.key.%s.dfs.core.windows.net\" % blob_acc_name, blob_sas_token)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"blob_account_name = \"pandemicdatalake\"\r\n",
							"blob_container_name = \"public\"\r\n",
							"blob_relative_path = \"curated/covid-19/covid_tracking/latest/covid_tracking.parquet\"\r\n",
							"blob_sas_token = r\"\"\r\n",
							"# Allow SPARK to read from Blob remotely\r\n",
							"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\r\n",
							"\r\n",
							"spark.conf.set(\r\n",
							"    'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\r\n",
							"    blob_sas_token)\r\n",
							"df = spark.read.parquet(wasbs_path)\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.conf.set(\"fs.azure.account.key.%s.dfs.core.windows.net\" % blob_acc_name, blob_sas_token)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"blob_account_name = blob_acc_name\r\n",
							"blob_container_name = 'coviddata19'\r\n",
							"blob_relative_path = ''\r\n",
							"linked_service_name = 'accvault1'"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"wasb_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(wasb_path)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dfread = spark.read.parquet(wasb_path).load()\r\n",
							"display(dfread)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.repartition(1).write.option(\"mode\",\"overwrite\").parquet(\"/coviddata19/\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.repartition(1).write.option(\"mode\",\"overwrite\").parquet(\"wasbs://coviddata19@accsynapsestorage.blob.core.windows.net/coviddata19/\")"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/csharpdeltalake')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('csharpdeltalake_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "csharp"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Hitchhiker's Guide to Delta Lake (.NET for Spark C#)\n",
							"\n",
							"This tutorial has been adapted for more clarity from its original counterpart [here](https://docs.delta.io/latest/quick-start.html). This notebook helps you quickly explore the main features of [Delta Lake](https://github.com/delta-io/delta). It provides code snippets that show how to read from and write to Delta Lake tables from interactive, batch, and streaming queries.\n",
							"\n",
							"Here's what we will cover:\n",
							"* Create a table\n",
							"* Understanding meta-data\n",
							"* Read data\n",
							"* Update table data\n",
							"* Overwrite table data\n",
							"* Conditional update without overwrite\n",
							"* Read older versions of data using Time Travel\n",
							"* Write a stream of data to a table\n",
							"* Read a stream of changes from a table"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Configuration\n",
							"Make sure you modify this as appropriate."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var sessionId = (new Random()).Next(10000000);\n",
							"var deltaTablePath = $\"/delta/delta-table-{sessionId}\";\n",
							"\n",
							"deltaTablePath"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Create a table\n",
							"To create a Delta Lake table, write a DataFrame out in the **delta** format. You can use existing Spark SQL code and change the format from parquet, csv, json, and so on, to delta.\n",
							"\n",
							"These operations create a new Delta Lake table using the schema that was inferred from your DataFrame. For the full set of options available when you create a new Delta Lake table, see Create a table and Write to a table (subsequent cells in this notebook)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var data = spark.Range(0,5);\n",
							"data.Show();\n",
							"data.Write().Format(\"delta\").Save(deltaTablePath);"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Understanding Meta-data\n",
							"\n",
							"In Delta Lake, meta-data is no different from data i.e., it is stored next to the data. Therefore, an interesting side-effect here is that you can peek into meta-data using regular Spark APIs. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"using System.Linq;\n",
							"spark.Read().Text($\"{deltaTablePath}/_delta_log/\").Collect().ToList().ForEach(x => Console.WriteLine(x.GetAs<string>(\"value\")));"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read data\n",
							"\n",
							"You read data in your Delta Lake table by specifying the path to the files."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var df = spark.Read().Format(\"delta\").Load(deltaTablePath);\n",
							"df.Show()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Update table data\n",
							"\n",
							"Delta Lake supports several operations to modify tables using standard DataFrame APIs. This example runs a batch job to overwrite the data in the table.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var data = spark.Range(5,10);\n",
							"data.Write().Format(\"delta\").Mode(\"overwrite\").Save(deltaTablePath);\n",
							"df.Show();"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"When you now inspect the meta-data, what you will notice is that the original data is over-written. Well, not in a true sense but appropriate entries are added to Delta's transaction log so it can provide an \"illusion\" that the original data was deleted. We can verify this by re-inspecting the meta-data. You will see several entries indicating reference removal to the original data."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.Read().Text($\"{deltaTablePath}/_delta_log/\").Collect().ToList().ForEach(x => Console.WriteLine(x.GetAs<string>(\"value\")));"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Save as catalog tables\n",
							"\n",
							"Delta Lake can write to managed or external catalog tables.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Write data to a new managed catalog table.\n",
							"data.Write().Format(\"delta\").SaveAsTable(\"ManagedDeltaTable\");"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"// Define an external catalog table that points to the existing Delta Lake data in storage.\n",
							"spark.Sql($\"CREATE TABLE ExternalDeltaTable USING DELTA LOCATION '{deltaTablePath}'\");"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"// List the 2 new tables.\n",
							"spark.Sql(\"SHOW TABLES\").Show();\n",
							"\n",
							"// Explore their properties.\n",
							"spark.Sql(\"DESCRIBE EXTENDED ManagedDeltaTable\").Show(truncate: 0);\n",
							"spark.Sql(\"DESCRIBE EXTENDED ExternalDeltaTable\").Show(truncate: 0);"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Conditional update without overwrite\n",
							"\n",
							"Delta Lake provides programmatic APIs to conditional update, delete, and merge (upsert) data into tables. For more information on these operations, see [Table Deletes, Updates, and Merges](https://docs.delta.io/latest/delta-update.html)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"using Microsoft.Spark.Extensions.Delta;\n",
							"using Microsoft.Spark.Extensions.Delta.Tables;\n",
							"using Microsoft.Spark.Sql;\n",
							"using static Microsoft.Spark.Sql.Functions;\n",
							"\n",
							"var deltaTable = DeltaTable.ForPath(deltaTablePath);"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"// Update every even value by adding 100 to it\n",
							"deltaTable.Update(\n",
							"  condition: Expr(\"id % 2 == 0\"),\n",
							"  set: new Dictionary<string, Column>(){{ \"id\", Expr(\"id + 100\") }});\n",
							"deltaTable.ToDF().Show();"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							"// Delete every even value\n",
							"deltaTable.Delete(condition: Expr(\"id % 2 == 0\"));\n",
							"deltaTable.ToDF().Show();"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [
							"// Upsert (merge) new data\n",
							"var newData = spark.Range(20).As(\"newData\");\n",
							"\n",
							"deltaTable\n",
							"    .As(\"oldData\")\n",
							"    .Merge(newData, \"oldData.id = newData.id\")\n",
							"    .WhenMatched()\n",
							"        .Update(new Dictionary<string, Column>() {{\"id\", Lit(\"-1\")}})\n",
							"    .WhenNotMatched()\n",
							"        .Insert(new Dictionary<string, Column>() {{\"id\", Col(\"newData.id\")}})\n",
							"    .Execute();\n",
							"\n",
							"deltaTable.ToDF().Show(100);"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "markdown",
						"source": [
							"## History\n",
							"Delta's most powerful feature is the ability to allow looking into history i.e., the changes that were made to the underlying Delta Table. The cell below shows how simple it is to inspect the history."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.History().Show(20, 1000, false);"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read older versions of data using Time Travel\n",
							"\n",
							"You can query previous snapshots of your Delta Lake table by using a feature called Time Travel. If you want to access the data that you overwrote, you can query a snapshot of the table before you overwrote the first set of data using the versionAsOf option.\n",
							"\n",
							"Once you run the cell below, you should see the first set of data, from before you overwrote it. Time Travel is an extremely powerful feature that takes advantage of the power of the Delta Lake transaction log to access data that is no longer in the table. Removing the version 0 option (or specifying version 1) would let you see the newer data again. For more information, see [Query an older snapshot of a table (time travel)](https://docs.delta.io/latest/delta-batch.html#deltatimetravel)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var df = spark.Read().Format(\"delta\").Option(\"versionAsOf\", 0).Load(deltaTablePath);\n",
							"df.Show();"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Write a stream of data to a table\n",
							"\n",
							"You can also write to a Delta Lake table using Spark's Structured Streaming. The Delta Lake transaction log guarantees exactly-once processing, even when there are other streams or batch queries running concurrently against the table. By default, streams run in append mode, which adds new records to the table.\n",
							"\n",
							"For more information about Delta Lake integration with Structured Streaming, see [Table Streaming Reads and Writes](https://docs.delta.io/latest/delta-streaming.html).\n",
							"\n",
							"In the cells below, here's what we are doing:\n",
							"\n",
							"1. *Cell 28* Setup a simple Spark Structured Streaming job to generate a sequence and make the job write into our Delta Table\n",
							"2. *Cell 30* Show the newly appended data\n",
							"3. *Cell 31* Inspect history\n",
							"4. *Cell 32* Stop the structured streaming job\n",
							"5. *Cell 33* Inspect history <-- You'll notice appends have stopped"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var streamingDf = spark.ReadStream().Format(\"rate\").Load();\n",
							"var stream = streamingDf.SelectExpr(\"value as id\").WriteStream().Format(\"delta\").Option(\"checkpointLocation\", $\"/tmp/checkpoint-{sessionId}\").Start(deltaTablePath);"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read a stream of changes from a table\n",
							"\n",
							"While the stream is writing to the Delta Lake table, you can also read from that table as streaming source. For example, you can start another streaming query that prints all the changes made to the Delta Lake table."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.ToDF().Sort(Col(\"id\").Desc()).Show(100);"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.History().Drop(\"userId\", \"userName\", \"job\", \"notebook\", \"clusterId\", \"isolationLevel\", \"isBlindAppend\").Show(20, 1000, false);"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"source": [
							"stream.Stop();"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.History().Drop(\"userId\", \"userName\", \"job\", \"notebook\", \"clusterId\", \"isolationLevel\", \"isBlindAppend\").Show(100, 1000, false);"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Convert Parquet to Delta\n",
							"You can do an in-place conversion from the Parquet format to Delta."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"var parquetPath = $\"/parquet/parquet-table-{sessionId}\";\n",
							"\n",
							"var data = spark.Range(0,5);\n",
							"data.Write().Parquet(parquetPath);\n",
							"\n",
							"// Confirm that the data isn't in the Delta format\n",
							"DeltaTable.IsDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"source": [
							"DeltaTable.ConvertToDelta(spark, $\"parquet.`{parquetPath}`\");\n",
							"\n",
							"//Confirm that the converted data is now in the Delta format\n",
							"DeltaTable.IsDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"source": [
							"## SQL Support\n",
							"Delta supports table utility commands through SQL.  You can use SQL to:\n",
							"* Get a DeltaTable's history\n",
							"* Vacuum a DeltaTable\n",
							"* Convert a Parquet file to Delta\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.Sql($\"DESCRIBE HISTORY delta.`{deltaTablePath}`\").Show();"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"source": [
							"spark.Sql($\"VACUUM delta.`{deltaTablePath}`\").Show();"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"source": [
							"var parquetId =  (new Random()).Next(10000000);\n",
							"var parquetPath = $\"/parquet/parquet-table-{sessionId}-{parquetId}\";\n",
							"\n",
							"var data = spark.Range(0,5);\n",
							"data.Write().Parquet(parquetPath);\n",
							"\n",
							"// Confirm that the data isn't in the Delta format\n",
							"DeltaTable.IsDeltaTable(parquetPath);\n",
							"\n",
							"// Use SQL to convert the parquet table to Delta\n",
							"spark.Sql($\"CONVERT TO DELTA parquet.`{parquetPath}`\");\n",
							"\n",
							"DeltaTable.IsDeltaTable(parquetPath);"
						],
						"outputs": [],
						"execution_count": 27
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/diabetessample')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('diabetessample_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\n",
							"blob_account_name = \"azureopendatastorage\"\n",
							"blob_container_name = \"mlsamples\"\n",
							"blob_relative_path = \"diabetes\"\n",
							"blob_sas_token = r\"\"\n",
							"# Allow SPARK to read from Blob remotely\n",
							"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
							"\n",
							"spark.conf.set(\n",
							"    'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
							"    blob_sas_token)\n",
							"df = spark.read.parquet(wasbs_path)\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.cache()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df = df.dropna() # drop rows with missing values\r\n",
							"#exprs = [col(column).alias(column.replace(' ', '_')) for column in df.columns]"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(\"The dataset has %d rows.\" % df.count())"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"train, test = df.randomSplit([0.7, 0.3], seed = 0)\r\n",
							"print(\"There are %d training examples and %d test examples.\" % (train.count(), test.count()))"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml.feature import VectorAssembler, VectorIndexer\r\n",
							" \r\n",
							"# Remove the target column from the input feature set.\r\n",
							"featuresCols = df.columns\r\n",
							"featuresCols.remove('Y')\r\n",
							" \r\n",
							"# vectorAssembler combines all feature columns into a single feature vector column, \"rawFeatures\".\r\n",
							"vectorAssembler = VectorAssembler(inputCols=featuresCols, outputCol=\"rawFeatures\")\r\n",
							" \r\n",
							"# vectorIndexer identifies categorical features and indexes them, and creates a new column \"features\". \r\n",
							"vectorIndexer = VectorIndexer(inputCol=\"rawFeatures\", outputCol=\"features\", maxCategories=4)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml.regression import GBTRegressor\r\n",
							" \r\n",
							"# The next step is to define the model training stage of the pipeline. \r\n",
							"# The following command defines a GBTRegressor model that takes an input column \"features\" by default and learns to predict the labels in the \"cnt\" column. \r\n",
							"gbt = GBTRegressor(labelCol=\"Y\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml.tuning import CrossValidator, ParamGridBuilder\r\n",
							"from pyspark.ml.evaluation import RegressionEvaluator\r\n",
							" \r\n",
							"# Define a grid of hyperparameters to test:\r\n",
							"#  - maxDepth: maximum depth of each decision tree \r\n",
							"#  - maxIter: iterations, or the total number of trees \r\n",
							"paramGrid = ParamGridBuilder()\\\r\n",
							"  .addGrid(gbt.maxDepth, [2, 5])\\\r\n",
							"  .addGrid(gbt.maxIter, [10, 100])\\\r\n",
							"  .build()\r\n",
							" \r\n",
							"# Define an evaluation metric.  The CrossValidator compares the true labels with predicted values for each combination of parameters, and calculates this value to determine the best model.\r\n",
							"evaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=gbt.getLabelCol(), predictionCol=gbt.getPredictionCol())\r\n",
							" \r\n",
							"# Declare the CrossValidator, which performs the model tuning.\r\n",
							"cv = CrossValidator(estimator=gbt, evaluator=evaluator, estimatorParamMaps=paramGrid)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml import Pipeline\r\n",
							"pipeline = Pipeline(stages=[vectorAssembler, vectorIndexer, cv])"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"pipelineModel = pipeline.fit(train)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"predictions = pipelineModel.transform(test)"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(predictions.select(\"Y\", \"prediction\", *featuresCols))"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"rmse = evaluator.evaluate(predictions)\r\n",
							"print(\"RMSE on our test set: %g\" % rmse)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(predictions.select(\"Y\", \"prediction\"))"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"import pyspark.sql.functions as F\r\n",
							"predictions_with_residuals = predictions.withColumn(\"residual\", (F.col(\"Y\") - F.col(\"prediction\")))\r\n",
							"display(predictions_with_residuals.agg({'residual': 'mean'}))"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(predictions_with_residuals.select(\"Y\", \"residual\"))"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/eventhubtest')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('eventhubtest_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import org.apache.spark.eventhubs._\r\n",
							"import org.apache.spark.sql.SparkSession"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/eventhubwrite')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('eventhubwrite_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"keyVaultName = \"accvault1\";\n",
							"secretName = \"synapseeventhub\";"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"secret = mssparkutils.credentials.getSecret(keyVaultName, secretName)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"connectionString = secret\n",
							"ehConf = {\n",
							"  'eventhubs.connectionString' : sc._jvm.org.apache.spark.eventhubs.EventHubsUtils.encrypt(connectionString)\n",
							"}"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"def write2table(df2, epoch_id):\n",
							"    df2.write.mode(\"append\").saveAsTable(\"default.eventhubdata\")"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark \\\n",
							"    .readStream \\\n",
							"    .format(\"eventhubs\") \\\n",
							"    .options(**ehConf) \\\n",
							"  .load()\n",
							""
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"df1 = df.withColumn(\"body\", df[\"body\"].cast(\"string\"))"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"df1.writeStream \\\n",
							"    .outputMode(\"update\") \\\n",
							"    .trigger(processingTime='5 seconds') \\\n",
							"    .option(\"checkpointLocation\",\"abfss://eventhubdata@accsynapsestorage.dfs.core.windows.net/evetcheckpoint/\") \\\n",
							"    .foreachBatch(write2table) \\\n",
							"    .start() \\\n",
							"    .awaitTermination()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"df1.stop()"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kafkaread5')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('kafkaread5_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"// Import login module\r\n",
							"import org.apache.kafka.common.security.plain.PlainLoginModule"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val keyVaultName = \"accvault1\";\r\n",
							"val secretName = \"eventhubconnstring\";"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val eventhubconnstring = mssparkutils.credentials.getSecret(keyVaultName, secretName)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"// Update values as needed\r\n",
							"val TOPIC = \"kafkaincoming5\"\r\n",
							"val BOOTSTRAP_SERVERS = \"accevents1.servicebus.windows.net:9093\"\r\n",
							"val EH_SASL = \"kafkashaded.org.apache.kafka.common.security.plain.PlainLoginModule required username=\\\"$ConnectionString\\\" password=\\\"\" + eventhubconnstring + \"\\\";\""
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val df = spark.readStream.format(\"kafka\").option(\"subscribe\", TOPIC).option(\"kafka.bootstrap.servers\", BOOTSTRAP_SERVERS).option(\"kafka.sasl.mechanism\", \"PLAIN\").option(\"kafka.security.protocol\", \"SASL_SSL\").option(\"kafka.sasl.jaas.config\", EH_SASL).option(\"kafka.request.timeout.ms\", \"60000\").option(\"kafka.session.timeout.ms\", \"60000\").option(\"failOnDataLoss\", \"false\").option(\"startingOffsets\", \"earliest\").load()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(sc.version)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import org.apache.spark.eventhubs._\r\n",
							"import com.microsoft.azure.eventhubs._"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import org.apache.spark.eventhubs.ConnectionStringBuilder"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import org.apache.spark.eventhubs._\r\n",
							"import org.apache.spark.sql.SparkSession"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/navistartproductcatalog')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('navistartproductcatalog_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"FR6042301\":20,\"FR6042306\":2,\"FR6042801\":3,\"FR6043701\":20,\"FR6043706\":2,\"FR6043904\":2,\"FR6043909\":2,\"FR6044101\":2,\"FR6044601\":5,\"FR6045001\":7,\"FR6045501\":1,\"FR6045704\":2,\"FR6045902\":16,\"FR6046005\":2,\"FR6046203\":2,\"FR6046401\":4,\"FR6046703\":2,\"FR6046901\":6}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\n",
							"df = spark.read.load('abfss://navistaros@accbbstore.dfs.core.windows.net/000000_0.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							"##, header=True\n",
							")\n",
							"display(df.limit(100))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"FR5757101\":18,\"FR5757601\":3,\"FR5758001\":2,\"FR5758501\":3,\"FR5758902\":9,\"FR5758907\":2,\"FR5759401\":3,\"FR5759604\":1,\"FR5759901\":3,\"FR5760201\":9,\"FR5760503\":4,\"FR5760701\":9,\"FR5760904\":2,\"FR5761101\":4,\"FR5761304\":28}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df.limit(100))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"df.columns"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"source": [
							"columns = [ \"sh_ship_no\",\"sh_ship_typ_cd\",\"sh_ord_pnt_cd\",\"sh_ship_whs_cd\",\"sh_bill_whs_cd\",\"sh_ship_cust_no\",\"sh_bill_cust_no\",\"sh_cust_key\",\"sh_cust_typ_cd\",\"sh_ship_to_nam\",\"sh_ship_1_addr\",\"sh_ship_2_addr\",\"sh_ship_3_addr\",\"sh_ship_to_city\",\"sh_ship_to_st_cd\",\"sh_ship_to_zip\",\"sh_ship_ctry_cd\",\"sh_prce_cls_cd\",\"sh_invce_md\",\"sh_mop_cd\",\"sh_trm_cd\",\"sh_sta_cd\",\"sh_trg_vat_cd\",\"sh_lng_cd\",\"sh_sls_rep_cd\",\"sh_bko_flg\",\"sh_opr_cd\",\"sh_org_cd\",\"sh_cust_po\",\"sh_ship_cd\",\"sh_fob_cd\",\"sh_opr_md\",\"sh_tot_wght\",\"sh_ord_dte\",\"sh_tck_dte\",\"sh_ship_dte\",\"sh_invce_dte\",\"sh_rqst_dlvry_dte\",\"sh_proms_dte\",\"sh_ord_typ_cd\",\"sh_cncl_rsn_cd\",\"sh_geo_loc_cd\",\"sh_bol_no\",\"sh_recmd_carr\",\"sh_load_no\",\"sh_carr_refr\",\"sh_cust_prty\",\"sh_vol_prty\",\"sh_pick_prty\",\"sh_pack_zone\",\"sh_pack_loc\",\"sh_pick_flg\",\"sh_pack_flg\",\"sh_dcrpcy_flg\",\"sh_pack_id\",\"sh_pick_dte\",\"sh_pack_dte\",\"sh_rcpt_zone\",\"sh_pick_fmly\",\"sh_dlvry_instr\",\"sh_frst_pack_no\",\"sh_lst_pack_no\",\"sh_days_wait\",\"sh_est_pack\",\"sh_est_pallet\",\"sh_tot_est_wght\",\"sh_tot_est_vol\",\"sh_lst_prcs_flg\",\"sh_geo_cd\",\"sh_ord_typ_prty\",\"sh_hzd_flg\",\"sh_dm_cust\",\"sh_dm_campgn\",\"sh_dm_source\",\"sh_dm_typ_cd\",\"sh_ord_tim\",\"sh_ups_insur\",\"sh_pp_insur\",\"sh_emrg_24_flg\",\"sh_exp_ord_flg\",\"sh_cid_cd\",\"sh_com_cd\",\"sh_cust_loc_cd\",\"sh_trlr_id\",\"sh_small_pack_cd\",\"sh_carr_consol\",\"sh_dcn_cd\",\"sh_prc_lvl\",\"sh_blnk_po_no\",\"sh_man_blnk_flg\",\"sh_wms_pack_notif\",\"sh_reg_specl_stat\",\"sh_sub_flg\",\"sh_cust_itm_flg\",\"sh_tar_cd\",\"sh_min_val_flg\",\"sh_dia_cust_flg\",\"sh_dia_ord_flg\",\"sh_dia_dlr_lvl\",\"sh_dia_4_flg\",\"sh_cross_dock\",\"sh_prg_pre_flg\",\"sh_specl_addr\",\"sh_cty_lim_flg\",\"sh_us_ship_cd\",\"sh_hzd_source\",\"sh_edi_supl_key\",\"sh_pro_bill_no\",\"sh_after_hrs_ship\",\"sh_exps_frght_00\",\"sh_exps_frght_01\",\"sh_creat_ts\",\"sd_add_lot_flg\",\"sd_add_pack_id\",\"sd_alloc_po\",\"sd_back_load_qty\",\"sd_back_ord_qty\",\"sd_bill_lad\",\"sd_bin_loc\",\"sd_bko_flg\",\"sd_blk_no\",\"sd_carr_consol\",\"sd_cnl_rsn_cd\",\"sd_cor_00_flg\",\"sd_cor_01_flg\",\"sd_cor_02_flg\",\"sd_creat_ts\",\"sd_crncy_cd\",\"sd_crty_of_org\",\"sd_cty_lim_flg\",\"sd_cust_dtl_no\",\"sd_cust_po\",\"sd_cust_prod_id\",\"sd_dest_bin_loc\",\"sd_det_00_flg\",\"sd_det_00_typ\",\"sd_det_01_flg\",\"sd_det_01_typ\",\"sd_det_02_flg\",\"sd_det_02_typ\",\"sd_det_03_flg\",\"sd_det_03_typ\",\"sd_det_04_flg\",\"sd_det_04_typ\",\"sd_det_05_flg\",\"sd_det_05_typ\",\"sd_det_06_flg\",\"sd_det_06_typ\",\"sd_det_07_flg\",\"sd_det_07_typ\",\"sd_det_08_flg\",\"sd_det_08_typ\",\"sd_det_09_flg\",\"sd_det_09_typ\",\"sd_det_10_flg\",\"sd_det_11_flg\",\"sd_det_12_flg\",\"sd_det_13_flg\",\"sd_det_14_flg\",\"sd_det_15_flg\",\"sd_dia_3_flg\",\"sd_dia_4_flg\",\"sd_dia_cust_flg\",\"sd_dia_ord_flg\",\"sd_dsc_00_schd_cd\",\"sd_dsc_01_schd_cd\",\"sd_dsc_ca_sh_cd\",\"sd_dtl_no\",\"sd_dtl_sufx_no\",\"sd_est_pack\",\"sd_est_pallet\",\"sd_exc_00_flg\",\"sd_exc_01_flg\",\"sd_exc_02_flg\",\"sd_exc_03_flg\",\"sd_exc_04_flg\",\"sd_exc_05_flg\",\"sd_exc_06_flg\",\"sd_exc_07_flg\",\"sd_exc_08_flg\",\"sd_exc_09_flg\",\"sd_exc_10_flg\",\"sd_exc_11_flg\",\"sd_exc_12_flg\",\"sd_exc_13_flg\",\"sd_exc_14_flg\",\"sd_exc_15_flg\",\"sd_exc_16_flg\",\"sd_exc_17_flg\",\"sd_exc_18_flg\",\"sd_exc_19_flg\",\"sd_exc_20_flg\",\"sd_exc_21_flg\",\"sd_exc_22_flg\",\"sd_exc_23_flg\",\"sd_exc_24_flg\",\"sd_exc_25_flg\",\"sd_exc_26_flg\",\"sd_extn_desc\",\"sd_fob_cd\",\"sd_geo_cd\",\"sd_in_prgrs_qty\",\"sd_in_prgrs_qty2\",\"sd_invce_no\",\"sd_jrn_sum\",\"sd_lne_type\",\"sd_lot_no\",\"sd_lot_qty\",\"sd_mrtx_seq\",\"sd_msg_text\",\"sd_ord_qty\",\"sd_pack_dmensn\",\"sd_pack_id\",\"sd_part_ownr\",\"sd_pkge_qty\",\"sd_prm_dlvry_dte\",\"sd_prm_ship_dte\",\"sd_pro_consol\",\"sd_prod_desc\",\"sd_prod_id\",\"sd_prod_serial_no\",\"sd_pst_empl_id\",\"sd_pwr_plus_flg\",\"sd_rcpt_log_no\",\"sd_rqst_dlvry_dte\",\"sd_schd_ship_qty\",\"sd_ship_no\",\"sd_ship_qty\",\"sd_ship_to_dte_qty\",\"sd_ship_whs_cd\",\"sd_small_pack_cd\",\"sd_small_scac_wght\",\"sd_tar_cd\",\"sd_tax_cd\",\"sd_tax_flg\",\"sd_tck_dte\",\"sd_tot_est_vol\", \"sd_tot_est_wght\",\"sd_trak_no\",\"sd_unit_of_measure\",\"sd_unit_wght\",\"sd_uom_conv\",\"sd_vndr_buy_no\",\"sd_wpf_00_flg\",\"sd_wpf_01_flg\",\"sd_wpf_02_flg\",\"sd_wpf_03_flg\",\"sd_wpf_04_flg\",\"sd_wpf_05_flg\",\"sd_wpf_06_flg\",\"sd_wpf_07_flg\",\"sd_wpf_08_flg\",\"sd_wpf_09_flg\",\"sd_wpf_10_flg\",\"sd_wpf_11_flg\",\"sd_wpf_12_flg\",\"sd_wpf_13_flg\",\"sd_wpf_14_flg\",\"sd_wpf_15_flg\" ]"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"source": [
							"columns = [ \"sh_ship_no\",\"sh_ship_typ_cd\",\"sh_ord_pnt_cd\",\"sh_ship_whs_cd\",\"sh_bill_whs_cd\",\"sh_ship_cust_no\",\"sh_bill_cust_no\",\"sh_cust_key\",\"sh_cust_typ_cd\",\"sh_ship_to_nam\",\"sh_ship_1_addr\",\"sh_ship_2_addr\",\"sh_ship_3_addr\",\"sh_ship_to_city\",\"sh_ship_to_st_cd\",\"sh_ship_to_zip\",\"sh_ship_ctry_cd\",\"sh_prce_cls_cd\",\"sh_invce_md\",\"sh_mop_cd\",\"sh_trm_cd\",\"sh_sta_cd\",\"sh_trg_vat_cd\",\"sh_lng_cd\",\"sh_sls_rep_cd\",\"sh_bko_flg\",\"sh_opr_cd\",\"sh_org_cd\",\"sh_cust_po\",\"sh_ship_cd\",\"sh_fob_cd\",\"sh_opr_md\",\"sh_tot_wght\",\"sh_ord_dte\",\"sh_tck_dte\",\"sh_ship_dte\",\"sh_invce_dte\",\"sh_rqst_dlvry_dte\",\"sh_proms_dte\",\"sh_ord_typ_cd\",\"sh_cncl_rsn_cd\",\"sh_geo_loc_cd\",\"sh_bol_no\",\"sh_recmd_carr\",\"sh_load_no\",\"sh_carr_refr\",\"sh_cust_prty\",\"sh_vol_prty\",\"sh_pick_prty\",\"sh_pack_zone\",\"sh_pack_loc\",\"sh_pick_flg\",\"sh_pack_flg\",\"sh_dcrpcy_flg\",\"sh_pack_id\",\"sh_pick_dte\",\"sh_pack_dte\",\"sh_rcpt_zone\",\"sh_pick_fmly\",\"sh_dlvry_instr\",\"sh_frst_pack_no\",\"sh_lst_pack_no\",\"sh_days_wait\",\"sh_est_pack\",\"sh_est_pallet\",\"sh_tot_est_wght\",\"sh_tot_est_vol\",\"sh_lst_prcs_flg\",\"sh_geo_cd\",\"sh_ord_typ_prty\",\"sh_hzd_flg\",\"sh_dm_cust\",\"sh_dm_campgn\",\"sh_dm_source\",\"sh_dm_typ_cd\",\"sh_ord_tim\",\"sh_ups_insur\",\"sh_pp_insur\",\"sh_emrg_24_flg\",\"sh_exp_ord_flg\",\"sh_cid_cd\",\"sh_com_cd\",\"sh_cust_loc_cd\",\"sh_trlr_id\",\"sh_small_pack_cd\",\"sh_carr_consol\",\"sh_dcn_cd\",\"sh_prc_lvl\",\"sh_blnk_po_no\",\"sh_man_blnk_flg\",\"sh_wms_pack_notif\",\"sh_reg_specl_stat\",\"sh_sub_flg\",\"sh_cust_itm_flg\",\"sh_tar_cd\",\"sh_min_val_flg\",\"sh_dia_cust_flg\",\"sh_dia_ord_flg\",\"sh_dia_dlr_lvl\",\"sh_dia_4_flg\",\"sh_cross_dock\",\"sh_prg_pre_flg\",\"sh_specl_addr\",\"sh_cty_lim_flg\",\"sh_us_ship_cd\",\"sh_hzd_source\",\"sh_edi_supl_key\",\"sh_pro_bill_no\",\"sh_after_hrs_ship\",\"sh_exps_frght_00\",\"sh_exps_frght_01\",\"sh_creat_ts\",\"sd_add_lot_flg\",\"sd_add_pack_id\",\"sd_alloc_po\",\"sd_back_load_qty\",\"sd_back_ord_qty\",\"sd_bill_lad\",\"sd_bin_loc\",\"sd_bko_flg\",\"sd_blk_no\",\"sd_carr_consol\",\"sd_cnl_rsn_cd\",\"sd_cor_00_flg\",\"sd_cor_01_flg\",\"sd_cor_02_flg\",\"sd_creat_ts\",\"sd_crncy_cd\",\"sd_crty_of_org\",\"sd_cty_lim_flg\",\"sd_cust_dtl_no\",\"sd_cust_po\",\"sd_cust_prod_id\",\"sd_dest_bin_loc\",\"sd_det_00_flg\",\"sd_det_00_typ\",\"sd_det_01_flg\",\"sd_det_01_typ\",\"sd_det_02_flg\",\"sd_det_02_typ\",\"sd_det_03_flg\",\"sd_det_03_typ\",\"sd_det_04_flg\",\"sd_det_04_typ\",\"sd_det_05_flg\",\"sd_det_05_typ\",\"sd_det_06_flg\",\"sd_det_06_typ\",\"sd_det_07_flg\",\"sd_det_07_typ\",\"sd_det_08_flg\",\"sd_det_08_typ\",\"sd_det_09_flg\",\"sd_det_09_typ\",\"sd_det_10_flg\",\"sd_det_11_flg\",\"sd_det_12_flg\",\"sd_det_13_flg\",\"sd_det_14_flg\",\"sd_det_15_flg\",\"sd_dia_3_flg\",\"sd_dia_4_flg\",\"sd_dia_cust_flg\",\"sd_dia_ord_flg\",\"sd_dsc_00_schd_cd\",\"sd_dsc_01_schd_cd\",\"sd_dsc_cash_cd\",\"sd_dtl_no\",\"sd_dtl_sufx_no\",\"sd_est_pack\",\"sd_est_pallet\",\"sd_exc_00_flg\",\"sd_exc_01_flg\",\"sd_exc_02_flg\",\"sd_exc_03_flg\",\"sd_exc_04_flg\",\"sd_exc_05_flg\",\"sd_exc_06_flg\",\"sd_exc_07_flg\",\"sd_exc_08_flg\",\"sd_exc_09_flg\",\"sd_exc_10_flg\",\"sd_exc_11_flg\",\"sd_exc_12_flg\",\"sd_exc_13_flg\",\"sd_exc_14_flg\",\"sd_exc_15_flg\",\"sd_exc_16_flg\",\"sd_exc_17_flg\",\"sd_exc_18_flg\",\"sd_exc_19_flg\",\"sd_exc_20_flg\",\"sd_exc_21_flg\",\"sd_exc_22_flg\",\"sd_exc_23_flg\",\"sd_exc_24_flg\",\"sd_exc_25_flg\",\"sd_exc_26_flg\",\"sd_extn_desc\",\"sd_fob_cd\",\"sd_geo_cd\",\"sd_in_prgrs_qty\",\"sd_in_prgrs_qty2\",\"sd_invce_no\",\"sd_jrn_sum\",\"sd_lne_type\",\"sd_lot_no\",\"sd_lot_qty\",\"sd_mrtx_seq\",\"sd_msg_text\",\"sd_ord_qty\",\"sd_pack_dmensn\",\"sd_pack_id\",\"sd_part_ownr\",\"sd_pkge_qty\",\"sd_prm_dlvry_dte\",\"sd_prm_ship_dte\",\"sd_pro_consol\",\"sd_prod_desc\",\"sd_prod_id\",\"sd_prod_serial_no\",\"sd_pst_empl_id\",\"sd_pwr_plus_flg\",\"sd_rcpt_log_no\",\"sd_rqst_dlvry_dte\",\"sd_schd_ship_qty\",\"sd_ship_no\",\"sd_ship_qty\",\"sd_ship_to_dte_qty\",\"sd_ship_whs_cd\",\"sd_small_pack_cd\",\"sd_small_scac_wght\",\"sd_tar_cd\",\"sd_tax_cd\",\"sd_tax_flg\",\"sd_tck_dte\",\"sd_tot_est_vol\", \"sd_tot_est_wght\",\"sd_trak_no\",\"sd_unit_of_measure\",\"sd_unit_wght\",\"sd_uom_conv\",\"sd_vndr_buy_no\",\"sd_wpf_00_flg\",\"sd_wpf_01_flg\",\"sd_wpf_02_flg\",\"sd_wpf_03_flg\",\"sd_wpf_04_flg\",\"sd_wpf_05_flg\",\"sd_wpf_06_flg\",\"sd_wpf_07_flg\",\"sd_wpf_08_flg\",\"sd_wpf_09_flg\",\"sd_wpf_10_flg\",\"sd_wpf_11_flg\",\"sd_wpf_12_flg\",\"sd_wpf_13_flg\",\"sd_wpf_14_flg\",\"sd_wpf_15_flg\" ]"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"df.columns = columns"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"_c0"
									],
									"values": [
										"_c0"
									],
									"yLabel": "_c0",
									"xLabel": "_c0",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"_c0\":{\"FR5757101\":18,\"FR5757601\":3,\"FR5758001\":2,\"FR5758501\":3,\"FR5758902\":9,\"FR5758907\":2,\"FR5759401\":3,\"FR5759604\":1,\"FR5759901\":3,\"FR5760201\":9,\"FR5760503\":4,\"FR5760701\":9,\"FR5760904\":2,\"FR5761101\":4,\"FR5761304\":40,\"FR5761403\":2,\"FR5761502\":5,\"FR5761601\":3,\"FR5761606\":2,\"FR5761804\":2,\"FR5761903\":30,\"FR5762001\":14,\"FR5762204\":2,\"FR5762303\":2,\"FR5762501\":3,\"FR5762704\":2,\"FR5762902\":2,\"FR5763401\":5,\"FR5763703\":8,\"FR5763901\":2,\"FR5764202\":3,\"FR5764301\":22,\"FR5764702\":4,\"FR5764801\":6,\"FR5765102\":5,\"FR5765201\":6,\"FR5765404\":2,\"FR5765602\":2,\"FR5765701\":5,\"FR5765805\":2,\"FR5766101\":16,\"FR5766304\":2,\"FR5766601\":12,\"FR5767001\":6,\"FR5767006\":3,\"FR5767501\":3,\"FR5767902\":2,\"FR5768703\":2,\"FR5768901\":19,\"FR5769603\":2,\"FR5769702\":3,\"FR5770101\":10,\"FR5770502\":7,\"FR5770601\":10,\"FR5771001\":3,\"FR5771402\":2,\"FR5771501\":6,\"FR5771803\":3,\"FR5772401\":23,\"FR5772901\":10,\"FR5773301\":22,\"FR5773702\":3,\"FR5773801\":4,\"FR5773806\":3,\"FR5774201\":21,\"FR5774404\":14,\"FR5774602\":26,\"FR5774701\":20,\"FR5775002\":2,\"FR5775101\":6,\"FR5775502\":2,\"FR5775601\":12,\"FR5775903\":2,\"FR5776001\":4,\"FR5776303\":2,\"FR5776402\":5,\"FR5776501\":24,\"FR5776803\":2,\"FR5777401\":19,\"FR5777703\":21,\"FR5777901\":6,\"FR5778202\":2,\"FR5778301\":11,\"FR5778801\":7,\"FR5779201\":3,\"FR5779503\":2,\"FR5779602\":8,\"FR5779701\":8,\"FR5780001\":7,\"FR5780501\":5,\"FR5780506\":2,\"FR5781302\":16,\"FR5781401\":10,\"FR5781703\":2,\"FR5781802\":3,\"FR5782103\":4,\"FR5782202\":37,\"FR5782301\":3,\"FR5782702\":3,\"FR5782801\":6,\"FR5783102\":2,\"FR5783201\":4,\"FR5783602\":3,\"FR5783701\":6,\"FR5783904\":2,\"FR5784101\":15,\"FR5784502\":9,\"FR5784601\":23,\"FR5785001\":3,\"FR5785501\":24,\"FR5785803\":2,\"FR5785902\":2,\"FR5786401\":12,\"FR5786802\":6,\"FR5786901\":2,\"FR5787202\":5,\"FR5787301\":4,\"FR5787702\":2,\"FR5787801\":23,\"FR5788102\":12,\"FR5788201\":21,\"FR5788503\":2,\"FR5788701\":13,\"FR5789101\":3,\"FR5789601\":10,\"FR5790302\":2,\"FR5790401\":3,\"FR5790604\":2,\"FR5790703\":7,\"FR5790901\":2,\"FR5791301\":12,\"FR5791801\":7}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(df)"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "code",
						"source": [
							"df1 = df.toDF(columns)"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"source": [
							"df1.columns"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nycyellow')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('nycyellow_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tpepPickupDateTime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"from azureml.opendatasets import NycTlcYellow\n",
							"\n",
							"data = NycTlcYellow()\n",
							"data_df = data.to_spark_dataframe()\n",
							"# Display 10 rows\n",
							"display(data_df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"sc.version"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tpepPickupDateTime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"#display(data_df)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"#import org.apache.spark.sql.SaveMode\n",
							"#from pyspark.sql._ import *\n",
							"from pyspark.sql.functions import *\n",
							"from pyspark.sql import *\n",
							"#import org.apache.spark.sql._ \n",
							"#import org.apache.spark.sql.functions._"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tpepPickupDateTime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"df1 = data_df.withColumn(\"Date\", (col(\"tpepPickupDateTime\").cast(\"date\"))) \n",
							"display(df1)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"#df1.dropDuplicates([\"key\",\"pickup_datetime\",\"pickup_longitude\",\"pickup_latitude\"])"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"df1.printSchema"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"df2 = df1.withColumn(\"year\", year(col(\"date\"))) .withColumn(\"month\", month(col(\"date\"))) .withColumn(\"day\", dayofmonth(col(\"date\"))) .withColumn(\"hour\", hour(col(\"date\")))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tpepPickupDateTime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"#display(df2)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"#df2.groupBy(\"year\",\"month\").agg(sum(\"fareAmount\").alias(\"Total\"),count(\"vendorID\").alias(\"Count\")).sort(asc(\"year\"), asc(\"month\")).show()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"dfgrouped = df2.groupBy(\"year\",\"month\").agg(sum(\"fareAmount\").alias(\"Total\"),count(\"vendorID\").alias(\"Count\")).sort(asc(\"year\"), asc(\"month\"))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"month"
									],
									"values": [
										"year"
									],
									"yLabel": "year",
									"xLabel": "month",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"year\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":12105,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":12105,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"6\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"7\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"8\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":12105,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"9\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"10\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"11\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":10085}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"#display(dfgrouped)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"dfgrouped.repartition(1).write.mode('overwrite').parquet(\"/dailyaggr/parquet/dailyaggr.parquet\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"dfgrouped.repartition(1).write.mode('overwrite').option(\"header\",\"true\").csv(\"/dailyaggrcsv/csv/dailyaggr.csv\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"df2.createOrReplaceTempView(\"nycyellow\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "sparksql"
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"passengerCount"
									],
									"yLabel": "passengerCount",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"passengerCount\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":73,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":125}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"%%sql\n",
							"select * from nycyellow limit 100"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "sparksql"
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"tsHour"
									],
									"values": [
										"tsDay"
									],
									"yLabel": "tsDay",
									"xLabel": "tsHour",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tsDay\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"%%sql\n",
							"select  year(cast(tpepPickupDateTime  as timestamp)) as tsYear,\n",
							"        month(cast(tpepPickupDateTime  as timestamp)) as tsmonth,\n",
							"        day(cast(tpepPickupDateTime  as timestamp)) as tsDay, \n",
							"        hour(cast(tpepPickupDateTime  as timestamp)) as tsHour,\n",
							"        avg(totalAmount) as avgTotal, avg(fareAmount) as avgFare\n",
							"from nycyellow\n",
							"group by  tsYear, tsmonth,tsDay, tsHour\n",
							"order by  tsYear, tsmonth,tsDay, tsHour"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "sparksql"
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"%%sql\n",
							"DROP TABLE dailyaggr"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "sparksql"
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE dailyaggr\n",
							"  COMMENT 'This table is created with existing data'\n",
							"  AS select  year(cast(tpepPickupDateTime  as timestamp)) as tsYear,\n",
							"        month(cast(tpepPickupDateTime  as timestamp)) as tsmonth,\n",
							"        day(cast(tpepPickupDateTime  as timestamp)) as tsDay, \n",
							"        hour(cast(tpepPickupDateTime  as timestamp)) as tsHour,\n",
							"        avg(totalAmount) as avgTotal, avg(fareAmount) as avgFare\n",
							"from nycyellow\n",
							"group by  tsYear, tsmonth,tsDay, tsHour\n",
							"order by  tsYear, tsmonth,tsDay, tsHour"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "sparksql"
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"tsDay"
									],
									"values": [
										"tsYear"
									],
									"yLabel": "tsYear",
									"xLabel": "tsDay",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tsYear\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"6\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"7\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"8\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"9\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"10\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"11\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":80600,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"13\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"14\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"15\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"17\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"18\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"19\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"20\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"21\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"22\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"23\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"25\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"26\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"27\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"28\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"29\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"30\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"31\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							},
							"collapsed": false
						},
						"source": [
							"%%sql\n",
							"select * from dailyaggr"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"dailyaggr = spark.sql(\"SELECT tsYear, tsMonth, tsDay, tsHour, avgTotal FROM dailyaggr\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"tsDay"
									],
									"values": [
										"tsYear"
									],
									"yLabel": "tsYear",
									"xLabel": "tsDay",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tsYear\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"6\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"7\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"8\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"9\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"10\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":96720,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"11\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":82615,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"13\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"14\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"15\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"17\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"18\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"19\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"20\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"21\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"22\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"23\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"25\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"26\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"27\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"28\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"29\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"30\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"31\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":48360}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"display(dailyaggr)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "scala"
							},
							"collapsed": true
						},
						"source": [
							"%%spark\r\n",
							"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"#dailyaggr.write.synapsesql(\"accsynapsepools.wwi.dailyaggr\", Constants.INTERNAL)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.ml.regression import LinearRegression"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark \n",
							"import pyspark \n",
							"print(print(pyspark.__version__))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"import org.apache.spark.ml.feature.VectorAssembler \n",
							"import org.apache.spark.ml.linalg.Vectors \n",
							"val dailyaggr = spark.sql(\"SELECT tsYear, tsMonth, tsDay, tsHour, avgTotal FROM dailyaggr\")\n",
							"val featureCols=Array(\"tsYear\",\"tsMonth\",\"tsDay\",\"tsHour\") \n",
							"val assembler: org.apache.spark.ml.feature.VectorAssembler= new VectorAssembler().setInputCols(featureCols).setOutputCol(\"features\") \n",
							"val assembledDF = assembler.setHandleInvalid(\"skip\").transform(dailyaggr) \n",
							"val assembledFinalDF = assembledDF.select(\"avgTotal\",\"features\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"import com.microsoft.spark.sqlanalytics.utils.Constants\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"dailyaggr.repartition(2).write.synapsesql(\"accsynapsepools.wwi.dailyaggr\", Constants.INTERNAL)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"import org.apache.spark.ml.feature.Normalizer \n",
							"val normalizedDF = new Normalizer().setInputCol(\"features\").setOutputCol(\"normalizedFeatures\").transform(assembledFinalDF)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"val normalizedDF1 = normalizedDF.na.drop()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"val Array(trainingDS, testDS) = normalizedDF1.randomSplit(Array(0.7, 0.3))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"import org.apache.spark.ml.regression.LinearRegression\n",
							"// Create a LinearRegression instance. This instance is an Estimator. \n",
							"val lr = new LinearRegression().setLabelCol(\"avgTotal\").setMaxIter(100)\n",
							"// Print out the parameters, documentation, and any default values. println(s\"Linear Regression parameters:\\n ${lr.explainParams()}\\n\") \n",
							"// Learn a Linear Regression model. This uses the parameters stored in lr.\n",
							"val lrModel = lr.fit(trainingDS)\n",
							"// Make predictions on test data using the Transformer.transform() method.\n",
							"// LinearRegression.transform will only use the 'features' column. \n",
							"val lrPredictions = lrModel.transform(testDS)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"import org.apache.spark.sql.functions._ \n",
							"import org.apache.spark.sql.types._ \n",
							"println(\"\\nPredictions : \" ) \n",
							"lrPredictions.select($\"avgTotal\".cast(IntegerType),$\"prediction\".cast(IntegerType)).orderBy(abs($\"prediction\"-$\"avgTotal\")).distinct.show(15)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"import org.apache.spark.ml.evaluation.RegressionEvaluator \n",
							"\n",
							"val evaluator_r2 = new RegressionEvaluator().setPredictionCol(\"prediction\").setLabelCol(\"avgTotal\").setMetricName(\"r2\") \n",
							"//As the name implies, isLargerBetter returns if a larger value is better or smaller for evaluation. \n",
							"val isLargerBetter : Boolean = evaluator_r2.isLargerBetter \n",
							"println(\"Coefficient of determination = \" + evaluator_r2.evaluate(lrPredictions))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"//Evaluate the results. Calculate Root Mean Square Error \n",
							"val evaluator_rmse = new RegressionEvaluator().setPredictionCol(\"prediction\").setLabelCol(\"avgTotal\").setMetricName(\"rmse\") \n",
							"//As the name implies, isLargerBetter returns if a larger value is better for evaluation. \n",
							"val isLargerBetter1 : Boolean = evaluator_rmse.isLargerBetter \n",
							"println(\"Root Mean Square Error = \" + evaluator_rmse.evaluate(lrPredictions))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"val dailyaggrdf = spark.read.synapsesql(\"accsynapsepools.wwi.dailyaggr\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							},
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"tsMonth"
									],
									"values": [
										"tsYear"
									],
									"yLabel": "tsYear",
									"xLabel": "tsMonth",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"tsYear\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"8\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":474230,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"9\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":726480,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"10\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":548896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"11\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":199782,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":70630}}\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							},
							"collapsed": false
						},
						"source": [
							"%%spark\n",
							"display(dailyaggrdf)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"dailyaggrdf.count()"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nydatacopy')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('nydatacopy_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"#https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"outputCollapsed": true
						},
						"source": [
							"yellowdDF = spark.read.option(\"mergeSchema\", \"true\").parquet(\"https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"blob_account_name = \"azureopendatastorage\"\n",
							"blob_container_name = \"nyctlc\"\n",
							"blob_relative_path = \"yellow\"\n",
							"blob_sas_token = r\"\"\n",
							"\n",
							"# Allow Spark to read from Blob remotely\n",
							"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
							"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),blob_sas_token)\n",
							"\n",
							"# Spark read parquet, note that it won't load any data yet by now\n",
							"yellowdf = spark.read.parquet(wasbs_path)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"vendorID"
									],
									"values": [
										"tpepPickupDateTime"
									],
									"yLabel": "tpepPickupDateTime",
									"xLabel": "vendorID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"tpepPickupDateTime\":{\"CMT\":0,\"VTS\":0}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(yellowdf)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"blob_account_name = \"azureopendatastorage\"\n",
							"blob_container_name = \"nyctlc\"\n",
							"blob_relative_path = \"green\"\n",
							"blob_sas_token = r\"\"\n",
							"\n",
							"# Allow Spark to read from Blob remotely\n",
							"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
							"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),blob_sas_token)\n",
							"\n",
							"# Spark read parquet, note that it won't load any data yet by now\n",
							"greendf = spark.read.parquet(wasbs_path)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"lpepPickupDatetime"
									],
									"values": [
										"vendorID"
									],
									"yLabel": "vendorID",
									"xLabel": "lpepPickupDatetime",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"vendorID\":{\"2015-05-01T20:00:23.000Z\":2,\"2015-05-01T20:00:29.000Z\":2,\"2015-05-01T20:00:32.000Z\":2,\"2015-05-01T20:00:34.000Z\":2,\"2015-05-01T20:00:53.000Z\":2,\"2015-05-01T20:01:14.000Z\":2,\"2015-05-01T20:02:03.000Z\":4,\"2015-05-01T20:02:05.000Z\":2,\"2015-05-01T20:02:14.000Z\":2,\"2015-05-01T20:02:20.000Z\":2,\"2015-05-01T20:02:24.000Z\":2,\"2015-05-01T20:02:28.000Z\":2,\"2015-05-01T20:02:30.000Z\":2,\"2015-05-01T20:02:34.000Z\":2,\"2015-05-01T20:02:35.000Z\":2,\"2015-05-01T20:02:40.000Z\":2,\"2015-05-01T20:03:05.000Z\":2,\"2015-05-01T20:03:06.000Z\":2,\"2015-05-01T20:03:35.000Z\":2,\"2015-05-01T20:04:00.000Z\":2,\"2015-05-01T20:04:03.000Z\":2,\"2015-05-01T20:04:08.000Z\":2,\"2015-05-01T20:04:17.000Z\":2,\"2015-05-01T20:04:23.000Z\":2,\"2015-05-01T20:04:36.000Z\":2,\"2015-05-01T20:04:39.000Z\":2,\"2015-05-01T20:04:42.000Z\":2,\"2015-05-01T20:04:47.000Z\":2,\"2015-05-01T20:04:59.000Z\":2,\"2015-05-01T20:05:09.000Z\":2,\"2015-05-01T20:05:11.000Z\":2,\"2015-05-01T20:05:20.000Z\":2,\"2015-05-01T20:05:22.000Z\":2,\"2015-05-01T20:05:27.000Z\":2,\"2015-05-01T20:05:32.000Z\":2,\"2015-05-01T20:05:38.000Z\":2,\"2015-05-01T20:05:44.000Z\":2,\"2015-05-01T20:05:47.000Z\":2,\"2015-05-01T20:05:53.000Z\":2,\"2015-05-01T20:06:03.000Z\":2,\"2015-05-01T20:06:37.000Z\":2,\"2015-05-01T20:06:40.000Z\":2,\"2015-05-01T20:06:54.000Z\":2,\"2015-05-01T20:06:57.000Z\":2,\"2015-05-01T20:07:01.000Z\":2,\"2015-05-01T20:07:24.000Z\":2,\"2015-05-01T20:07:28.000Z\":2,\"2015-05-01T20:07:32.000Z\":2,\"2015-05-01T20:07:35.000Z\":2,\"2015-05-01T20:07:39.000Z\":2,\"2015-05-01T20:07:42.000Z\":2,\"2015-05-01T20:07:43.000Z\":2,\"2015-05-01T20:07:48.000Z\":2,\"2015-05-01T20:07:49.000Z\":2,\"2015-05-01T20:08:02.000Z\":2,\"2015-05-01T20:08:08.000Z\":2,\"2015-05-01T20:08:14.000Z\":2,\"2015-05-01T20:08:20.000Z\":2,\"2015-05-01T20:08:23.000Z\":2,\"2015-05-01T20:08:27.000Z\":2,\"2015-05-01T20:08:30.000Z\":2,\"2015-05-01T20:08:33.000Z\":2,\"2015-05-01T20:08:37.000Z\":2,\"2015-05-01T20:08:45.000Z\":2,\"2015-05-01T20:08:53.000Z\":2,\"2015-05-01T20:08:55.000Z\":2,\"2015-05-01T20:08:58.000Z\":2,\"2015-05-01T20:09:02.000Z\":2,\"2015-05-01T20:09:05.000Z\":2,\"2015-05-01T20:09:12.000Z\":2,\"2015-05-01T20:09:18.000Z\":2,\"2015-05-01T20:09:24.000Z\":2,\"2015-05-01T20:09:26.000Z\":2,\"2015-05-01T20:09:35.000Z\":2,\"2015-05-01T20:09:43.000Z\":2,\"2015-05-01T20:09:50.000Z\":2,\"2015-05-01T20:09:57.000Z\":2,\"2015-05-01T20:10:01.000Z\":2,\"2015-05-01T20:10:05.000Z\":2,\"2015-05-01T20:10:08.000Z\":2,\"2015-05-01T20:10:12.000Z\":2,\"2015-05-01T20:10:23.000Z\":2,\"2015-05-01T20:10:26.000Z\":2,\"2015-05-01T20:10:41.000Z\":2,\"2015-05-01T20:10:45.000Z\":2,\"2015-05-01T20:10:49.000Z\":2,\"2015-05-01T20:10:53.000Z\":2,\"2015-05-01T20:10:55.000Z\":2,\"2015-05-01T20:10:59.000Z\":2,\"2015-05-01T20:11:10.000Z\":2,\"2015-05-01T20:11:15.000Z\":2,\"2015-05-01T20:11:17.000Z\":2,\"2015-05-01T20:11:21.000Z\":2,\"2015-05-01T20:11:27.000Z\":2,\"2015-05-01T20:11:31.000Z\":2,\"2015-05-01T20:11:34.000Z\":2,\"2015-05-01T20:11:42.000Z\":2,\"2015-05-01T20:11:46.000Z\":2,\"2015-05-01T20:11:49.000Z\":2,\"2015-05-01T20:11:52.000Z\":2,\"2015-05-01T20:11:55.000Z\":2,\"2015-05-01T20:11:57.000Z\":2,\"2015-05-01T20:11:59.000Z\":2,\"2015-05-01T20:12:05.000Z\":2,\"2015-05-01T20:12:07.000Z\":2,\"2015-05-01T20:12:11.000Z\":2,\"2015-05-01T20:12:12.000Z\":2,\"2015-05-01T20:12:14.000Z\":2,\"2015-05-01T20:12:20.000Z\":2,\"2015-05-01T20:12:26.000Z\":2,\"2015-05-01T20:12:28.000Z\":2,\"2015-05-01T20:12:33.000Z\":2,\"2015-05-01T20:12:35.000Z\":2,\"2015-05-01T20:12:40.000Z\":2,\"2015-05-01T20:12:46.000Z\":2,\"2015-05-01T20:12:49.000Z\":2,\"2015-05-01T20:12:52.000Z\":2,\"2015-05-01T20:12:56.000Z\":2,\"2015-05-01T20:12:58.000Z\":2,\"2015-05-01T20:13:03.000Z\":2,\"2015-05-01T20:13:09.000Z\":2,\"2015-05-01T20:13:16.000Z\":2,\"2015-05-01T20:13:17.000Z\":2,\"2015-05-01T20:13:20.000Z\":2,\"2015-05-01T20:13:22.000Z\":2,\"2015-05-01T20:13:24.000Z\":2,\"2015-05-01T20:13:27.000Z\":2,\"2015-05-01T20:13:31.000Z\":2,\"2015-05-01T20:13:35.000Z\":2,\"2015-05-01T20:13:39.000Z\":2,\"2015-05-01T20:13:45.000Z\":2,\"2015-05-01T20:13:47.000Z\":2,\"2015-05-01T20:13:55.000Z\":2,\"2015-05-01T20:14:00.000Z\":2,\"2015-05-01T20:14:04.000Z\":2,\"2015-05-01T20:14:08.000Z\":2,\"2015-05-01T20:14:11.000Z\":2,\"2015-05-01T20:14:17.000Z\":2,\"2015-05-01T20:14:22.000Z\":2,\"2015-05-01T20:14:26.000Z\":2,\"2015-05-01T20:14:30.000Z\":2,\"2015-05-01T20:14:33.000Z\":2,\"2015-05-01T20:14:36.000Z\":2,\"2015-05-01T20:14:39.000Z\":2,\"2015-05-01T20:14:43.000Z\":2,\"2015-05-01T20:14:46.000Z\":2,\"2015-05-01T20:14:48.000Z\":2,\"2015-05-01T20:14:54.000Z\":2,\"2015-05-01T20:14:56.000Z\":2,\"2015-05-01T20:14:59.000Z\":2,\"2015-05-01T20:15:04.000Z\":2,\"2015-05-01T20:15:05.000Z\":2,\"2015-05-01T20:15:11.000Z\":2,\"2015-05-01T20:15:14.000Z\":2,\"2015-05-01T20:15:17.000Z\":2,\"2015-05-01T20:15:21.000Z\":2,\"2015-05-01T20:15:22.000Z\":2,\"2015-05-01T20:15:25.000Z\":2,\"2015-05-01T20:15:29.000Z\":2,\"2015-05-01T20:15:32.000Z\":2,\"2015-05-01T20:15:39.000Z\":2,\"2015-05-01T20:15:42.000Z\":2,\"2015-05-01T20:15:46.000Z\":2,\"2015-05-01T20:15:51.000Z\":2,\"2015-05-01T20:15:54.000Z\":2,\"2015-05-01T20:15:57.000Z\":2,\"2015-05-01T20:16:01.000Z\":2,\"2015-05-01T20:16:08.000Z\":2,\"2015-05-01T20:16:17.000Z\":2,\"2015-05-01T20:16:21.000Z\":2,\"2015-05-01T20:16:28.000Z\":2,\"2015-05-01T20:16:33.000Z\":2,\"2015-05-01T20:16:37.000Z\":2,\"2015-05-01T20:16:40.000Z\":2,\"2015-05-01T20:16:43.000Z\":2,\"2015-05-01T20:16:46.000Z\":2,\"2015-05-01T20:16:49.000Z\":2,\"2015-05-01T20:16:53.000Z\":2,\"2015-05-01T20:16:56.000Z\":2,\"2015-05-01T20:16:57.000Z\":2,\"2015-05-01T20:16:59.000Z\":2,\"2015-05-01T20:17:02.000Z\":2,\"2015-05-01T20:17:08.000Z\":2,\"2015-05-01T20:17:12.000Z\":2,\"2015-05-01T20:17:13.000Z\":2,\"2015-05-01T20:17:14.000Z\":2,\"2015-05-01T20:17:16.000Z\":2,\"2015-05-01T20:17:19.000Z\":2,\"2015-05-01T20:17:24.000Z\":2,\"2015-05-01T20:17:37.000Z\":2,\"2015-05-01T20:17:42.000Z\":2,\"2015-05-01T20:17:50.000Z\":2,\"2015-05-01T20:17:53.000Z\":2,\"2015-05-01T20:17:56.000Z\":2,\"2015-05-01T20:17:58.000Z\":2,\"2015-05-01T20:18:01.000Z\":2,\"2015-05-01T20:18:03.000Z\":2,\"2015-05-01T20:18:05.000Z\":2,\"2015-05-01T20:18:07.000Z\":2,\"2015-05-01T20:18:09.000Z\":2,\"2015-05-01T20:18:11.000Z\":2,\"2015-05-01T20:18:15.000Z\":2,\"2015-05-01T20:18:16.000Z\":2,\"2015-05-01T20:18:22.000Z\":2,\"2015-05-01T20:18:26.000Z\":2,\"2015-05-01T20:18:27.000Z\":2,\"2015-05-01T20:18:31.000Z\":2,\"2015-05-01T20:18:38.000Z\":2,\"2015-05-01T20:18:45.000Z\":2,\"2015-05-01T20:18:51.000Z\":2,\"2015-05-01T20:18:55.000Z\":2,\"2015-05-01T20:19:00.000Z\":1,\"2015-05-01T20:19:02.000Z\":2,\"2015-05-01T20:19:04.000Z\":2,\"2015-05-01T20:19:06.000Z\":2,\"2015-05-01T20:19:09.000Z\":1,\"2015-05-01T20:19:10.000Z\":2,\"2015-05-01T20:19:13.000Z\":2,\"2015-05-01T20:19:16.000Z\":2,\"2015-05-01T20:19:18.000Z\":2,\"2015-05-01T20:19:23.000Z\":2,\"2015-05-01T20:19:26.000Z\":2,\"2015-05-01T20:19:29.000Z\":2,\"2015-05-01T20:19:30.000Z\":2,\"2015-05-01T20:19:32.000Z\":1,\"2015-05-01T20:19:34.000Z\":1,\"2015-05-01T20:19:36.000Z\":2,\"2015-05-01T20:19:39.000Z\":2,\"2015-05-01T20:19:41.000Z\":2,\"2015-05-01T20:19:46.000Z\":2,\"2015-05-01T20:19:48.000Z\":2,\"2015-05-01T20:19:51.000Z\":2,\"2015-05-01T20:19:57.000Z\":2,\"2015-05-01T20:20:02.000Z\":2,\"2015-05-01T20:20:05.000Z\":2,\"2015-05-01T20:20:07.000Z\":2,\"2015-05-01T20:20:09.000Z\":2,\"2015-05-01T20:20:14.000Z\":2,\"2015-05-01T20:20:16.000Z\":2,\"2015-05-01T20:20:21.000Z\":1,\"2015-05-01T20:20:25.000Z\":2,\"2015-05-01T20:20:30.000Z\":2,\"2015-05-01T20:20:31.000Z\":1,\"2015-05-01T20:20:33.000Z\":2,\"2015-05-01T20:20:37.000Z\":2,\"2015-05-01T20:20:40.000Z\":2,\"2015-05-01T20:20:42.000Z\":2,\"2015-05-01T20:20:47.000Z\":2,\"2015-05-01T20:20:49.000Z\":2,\"2015-05-01T20:20:51.000Z\":2,\"2015-05-01T20:20:53.000Z\":1,\"2015-05-01T20:20:58.000Z\":2,\"2015-05-01T20:21:01.000Z\":2,\"2015-05-01T20:21:04.000Z\":2,\"2015-05-01T20:21:05.000Z\":2,\"2015-05-01T20:21:11.000Z\":2,\"2015-05-01T20:21:14.000Z\":2,\"2015-05-01T20:21:16.000Z\":2,\"2015-05-01T20:21:18.000Z\":2,\"2015-05-01T20:21:22.000Z\":2,\"2015-05-01T20:21:23.000Z\":2,\"2015-05-01T20:21:25.000Z\":1,\"2015-05-01T20:21:26.000Z\":2,\"2015-05-01T20:21:27.000Z\":1,\"2015-05-01T20:21:30.000Z\":2,\"2015-05-01T20:21:35.000Z\":1,\"2015-05-01T20:21:38.000Z\":1,\"2015-05-01T20:21:41.000Z\":2,\"2015-05-01T20:21:44.000Z\":2,\"2015-05-01T20:21:52.000Z\":2,\"2015-05-01T20:21:55.000Z\":2,\"2015-05-01T20:21:57.000Z\":2,\"2015-05-01T20:22:00.000Z\":2,\"2015-05-01T20:22:01.000Z\":2,\"2015-05-01T20:22:03.000Z\":2,\"2015-05-01T20:22:06.000Z\":1,\"2015-05-01T20:22:10.000Z\":1,\"2015-05-01T20:22:14.000Z\":2,\"2015-05-01T20:22:18.000Z\":2,\"2015-05-01T20:22:24.000Z\":2,\"2015-05-01T20:22:28.000Z\":2,\"2015-05-01T20:22:33.000Z\":1,\"2015-05-01T20:22:34.000Z\":2,\"2015-05-01T20:22:38.000Z\":2,\"2015-05-01T20:22:42.000Z\":2,\"2015-05-01T20:22:45.000Z\":2,\"2015-05-01T20:22:51.000Z\":1,\"2015-05-01T20:22:53.000Z\":2,\"2015-05-01T20:22:56.000Z\":2,\"2015-05-01T20:23:00.000Z\":2,\"2015-05-01T20:23:04.000Z\":1,\"2015-05-01T20:23:05.000Z\":2,\"2015-05-01T20:23:07.000Z\":2,\"2015-05-01T20:23:10.000Z\":4,\"2015-05-01T20:23:13.000Z\":2,\"2015-05-01T20:23:15.000Z\":2,\"2015-05-01T20:23:19.000Z\":2,\"2015-05-01T20:23:23.000Z\":2,\"2015-05-01T20:23:25.000Z\":2,\"2015-05-01T20:23:28.000Z\":1,\"2015-05-01T20:23:31.000Z\":2,\"2015-05-01T20:23:33.000Z\":2,\"2015-05-01T20:23:36.000Z\":2,\"2015-05-01T20:23:38.000Z\":2,\"2015-05-01T20:23:42.000Z\":2,\"2015-05-01T20:23:43.000Z\":2,\"2015-05-01T20:23:46.000Z\":2,\"2015-05-01T20:23:50.000Z\":1,\"2015-05-01T20:23:54.000Z\":2,\"2015-05-01T20:24:00.000Z\":2,\"2015-05-01T20:24:03.000Z\":1,\"2015-05-01T20:24:04.000Z\":1,\"2015-05-01T20:24:07.000Z\":2,\"2015-05-01T20:24:14.000Z\":2,\"2015-05-01T20:24:16.000Z\":2,\"2015-05-01T20:24:21.000Z\":2,\"2015-05-01T20:24:24.000Z\":1,\"2015-05-01T20:24:28.000Z\":2,\"2015-05-01T20:24:29.000Z\":2,\"2015-05-01T20:24:33.000Z\":2,\"2015-05-01T20:24:34.000Z\":2,\"2015-05-01T20:24:39.000Z\":2,\"2015-05-01T20:24:44.000Z\":2,\"2015-05-01T20:24:48.000Z\":1,\"2015-05-01T20:24:54.000Z\":4,\"2015-05-01T20:24:59.000Z\":2,\"2015-05-01T20:25:02.000Z\":2,\"2015-05-01T20:25:04.000Z\":2,\"2015-05-01T20:25:07.000Z\":2,\"2015-05-01T20:25:10.000Z\":1,\"2015-05-01T20:25:14.000Z\":1,\"2015-05-01T20:25:16.000Z\":1,\"2015-05-01T20:25:21.000Z\":2,\"2015-05-01T20:25:23.000Z\":2,\"2015-05-01T20:25:27.000Z\":2,\"2015-05-01T20:25:29.000Z\":2,\"2015-05-01T20:25:30.000Z\":2,\"2015-05-01T20:25:37.000Z\":2,\"2015-05-01T20:25:39.000Z\":2,\"2015-05-01T20:25:44.000Z\":2,\"2015-05-01T20:25:48.000Z\":2,\"2015-05-01T20:25:53.000Z\":2,\"2015-05-01T20:25:55.000Z\":2,\"2015-05-01T20:26:02.000Z\":2,\"2015-05-01T20:26:03.000Z\":1,\"2015-05-01T20:26:05.000Z\":2,\"2015-05-01T20:26:07.000Z\":1,\"2015-05-01T20:26:10.000Z\":2,\"2015-05-01T20:26:13.000Z\":2,\"2015-05-01T20:26:17.000Z\":2,\"2015-05-01T20:26:19.000Z\":2,\"2015-05-01T20:26:22.000Z\":2,\"2015-05-01T20:26:23.000Z\":2,\"2015-05-01T20:26:27.000Z\":2,\"2015-05-01T20:26:31.000Z\":2,\"2015-05-01T20:26:33.000Z\":1,\"2015-05-01T20:26:40.000Z\":2,\"2015-05-01T20:26:42.000Z\":2,\"2015-05-01T20:26:47.000Z\":2,\"2015-05-01T20:26:48.000Z\":1,\"2015-05-01T20:26:55.000Z\":1,\"2015-05-01T20:26:59.000Z\":2,\"2015-05-01T20:27:02.000Z\":2,\"2015-05-01T20:27:05.000Z\":2,\"2015-05-01T20:27:10.000Z\":2,\"2015-05-01T20:27:14.000Z\":2,\"2015-05-01T20:27:19.000Z\":2,\"2015-05-01T20:27:21.000Z\":1,\"2015-05-01T20:27:24.000Z\":2,\"2015-05-01T20:27:27.000Z\":2,\"2015-05-01T20:27:28.000Z\":2,\"2015-05-01T20:27:31.000Z\":2,\"2015-05-01T20:27:37.000Z\":2,\"2015-05-01T20:27:40.000Z\":3,\"2015-05-01T20:27:46.000Z\":1,\"2015-05-01T20:27:47.000Z\":1,\"2015-05-01T20:27:50.000Z\":1,\"2015-05-01T20:27:53.000Z\":2,\"2015-05-01T20:28:00.000Z\":2,\"2015-05-01T20:28:02.000Z\":1,\"2015-05-01T20:28:05.000Z\":2,\"2015-05-01T20:28:09.000Z\":2,\"2015-05-01T20:28:11.000Z\":2,\"2015-05-01T20:28:12.000Z\":2,\"2015-05-01T20:28:17.000Z\":1,\"2015-05-01T20:28:21.000Z\":2,\"2015-05-01T20:28:24.000Z\":1,\"2015-05-01T20:28:25.000Z\":2,\"2015-05-01T20:28:26.000Z\":1,\"2015-05-01T20:28:29.000Z\":2,\"2015-05-01T20:28:31.000Z\":2,\"2015-05-01T20:28:36.000Z\":2,\"2015-05-01T20:28:37.000Z\":2,\"2015-05-01T20:28:44.000Z\":4,\"2015-05-01T20:28:47.000Z\":2,\"2015-05-01T20:28:52.000Z\":2,\"2015-05-01T20:28:53.000Z\":1,\"2015-05-01T20:28:55.000Z\":2,\"2015-05-01T20:28:57.000Z\":1,\"2015-05-01T20:29:00.000Z\":2,\"2015-05-01T20:29:03.000Z\":2,\"2015-05-01T20:29:05.000Z\":2,\"2015-05-01T20:29:10.000Z\":2,\"2015-05-01T20:29:13.000Z\":2,\"2015-05-01T20:29:16.000Z\":2,\"2015-05-01T20:29:20.000Z\":1,\"2015-05-01T20:29:26.000Z\":2,\"2015-05-01T20:29:27.000Z\":1,\"2015-05-01T20:29:28.000Z\":2,\"2015-05-01T20:29:30.000Z\":2,\"2015-05-01T20:29:32.000Z\":2,\"2015-05-01T20:29:33.000Z\":2,\"2015-05-01T20:29:34.000Z\":2,\"2015-05-01T20:29:38.000Z\":2,\"2015-05-01T20:29:40.000Z\":2,\"2015-05-01T20:29:43.000Z\":2,\"2015-05-01T20:29:45.000Z\":2,\"2015-05-01T20:29:49.000Z\":2,\"2015-05-01T20:29:50.000Z\":2,\"2015-05-01T20:29:53.000Z\":2,\"2015-05-01T20:29:55.000Z\":2,\"2015-05-01T20:30:00.000Z\":2,\"2015-05-01T20:30:04.000Z\":1,\"2015-05-01T20:30:05.000Z\":1,\"2015-05-01T20:30:08.000Z\":2,\"2015-05-01T20:30:17.000Z\":1,\"2015-05-01T20:30:18.000Z\":1,\"2015-05-01T20:30:23.000Z\":2,\"2015-05-01T20:30:26.000Z\":2,\"2015-05-01T20:30:27.000Z\":2,\"2015-05-01T20:30:30.000Z\":2,\"2015-05-01T20:30:34.000Z\":2,\"2015-05-01T20:30:37.000Z\":2,\"2015-05-01T20:30:40.000Z\":1,\"2015-05-01T20:30:44.000Z\":1,\"2015-05-01T20:30:47.000Z\":1,\"2015-05-01T20:30:49.000Z\":2,\"2015-05-01T20:30:51.000Z\":1,\"2015-05-01T20:30:54.000Z\":2,\"2015-05-01T20:30:58.000Z\":2,\"2015-05-01T20:31:02.000Z\":2,\"2015-05-01T20:31:08.000Z\":2,\"2015-05-01T20:31:09.000Z\":2,\"2015-05-01T20:31:10.000Z\":1,\"2015-05-01T20:31:12.000Z\":2,\"2015-05-01T20:31:18.000Z\":2,\"2015-05-01T20:31:22.000Z\":2,\"2015-05-01T20:31:25.000Z\":2,\"2015-05-01T20:31:28.000Z\":2,\"2015-05-01T20:31:31.000Z\":2,\"2015-05-01T20:31:33.000Z\":2,\"2015-05-01T20:31:37.000Z\":2,\"2015-05-01T20:31:39.000Z\":2,\"2015-05-01T20:31:44.000Z\":2,\"2015-05-01T20:31:48.000Z\":2,\"2015-05-01T20:31:53.000Z\":2,\"2015-05-01T20:31:58.000Z\":2,\"2015-05-01T20:31:59.000Z\":1,\"2015-05-01T20:32:03.000Z\":1,\"2015-05-01T20:32:04.000Z\":2,\"2015-05-01T20:32:07.000Z\":2,\"2015-05-01T20:32:09.000Z\":2,\"2015-05-01T20:32:13.000Z\":1,\"2015-05-01T20:32:17.000Z\":1,\"2015-05-01T20:32:19.000Z\":2,\"2015-05-01T20:32:21.000Z\":2,\"2015-05-01T20:32:25.000Z\":2,\"2015-05-01T20:32:27.000Z\":2,\"2015-05-01T20:32:28.000Z\":2,\"2015-05-01T20:32:31.000Z\":2,\"2015-05-01T20:32:36.000Z\":2,\"2015-05-01T20:32:37.000Z\":2,\"2015-05-01T20:32:40.000Z\":1,\"2015-05-01T20:32:44.000Z\":2,\"2015-05-01T20:32:45.000Z\":2,\"2015-05-01T20:32:49.000Z\":2,\"2015-05-01T20:32:53.000Z\":1,\"2015-05-01T20:32:55.000Z\":2,\"2015-05-01T20:32:57.000Z\":2,\"2015-05-01T20:32:58.000Z\":2,\"2015-05-01T20:33:01.000Z\":1,\"2015-05-01T20:33:03.000Z\":2,\"2015-05-01T20:33:07.000Z\":2,\"2015-05-01T20:33:14.000Z\":2,\"2015-05-01T20:33:15.000Z\":1,\"2015-05-01T20:33:18.000Z\":2,\"2015-05-01T20:33:23.000Z\":2,\"2015-05-01T20:33:25.000Z\":1,\"2015-05-01T20:33:27.000Z\":2,\"2015-05-01T20:33:32.000Z\":2,\"2015-05-01T20:33:33.000Z\":2,\"2015-05-01T20:33:37.000Z\":2,\"2015-05-01T20:33:38.000Z\":2,\"2015-05-01T20:33:46.000Z\":2,\"2015-05-01T20:33:53.000Z\":2,\"2015-05-01T20:33:57.000Z\":1,\"2015-05-01T20:34:00.000Z\":1,\"2015-05-01T20:34:03.000Z\":2,\"2015-05-01T20:34:04.000Z\":2,\"2015-05-01T20:34:09.000Z\":2,\"2015-05-01T20:34:13.000Z\":1,\"2015-05-01T20:34:16.000Z\":2,\"2015-05-01T20:34:17.000Z\":2,\"2015-05-01T20:34:21.000Z\":2,\"2015-05-01T20:34:24.000Z\":2,\"2015-05-01T20:34:25.000Z\":2,\"2015-05-01T20:34:28.000Z\":1,\"2015-05-01T20:34:30.000Z\":2,\"2015-05-01T20:34:33.000Z\":2,\"2015-05-01T20:34:34.000Z\":2,\"2015-05-01T20:34:38.000Z\":2,\"2015-05-01T20:34:43.000Z\":2,\"2015-05-01T20:34:45.000Z\":2,\"2015-05-01T20:34:52.000Z\":2,\"2015-05-01T20:34:54.000Z\":2,\"2015-05-01T20:34:57.000Z\":2,\"2015-05-01T20:35:01.000Z\":2,\"2015-05-01T20:35:04.000Z\":2,\"2015-05-01T20:35:06.000Z\":2,\"2015-05-01T20:35:07.000Z\":2,\"2015-05-01T20:35:10.000Z\":2,\"2015-05-01T20:35:14.000Z\":1,\"2015-05-01T20:35:15.000Z\":2,\"2015-05-01T20:35:18.000Z\":2,\"2015-05-01T20:35:22.000Z\":2,\"2015-05-01T20:35:23.000Z\":1,\"2015-05-01T20:35:27.000Z\":1,\"2015-05-01T20:35:29.000Z\":1,\"2015-05-01T20:35:32.000Z\":2,\"2015-05-01T20:35:34.000Z\":2,\"2015-05-01T20:35:38.000Z\":2,\"2015-05-01T20:35:41.000Z\":1,\"2015-05-01T20:35:44.000Z\":2,\"2015-05-01T20:35:48.000Z\":1,\"2015-05-01T20:35:51.000Z\":2,\"2015-05-01T20:35:56.000Z\":2,\"2015-05-01T20:36:04.000Z\":2,\"2015-05-01T20:36:07.000Z\":2,\"2015-05-01T20:36:08.000Z\":2,\"2015-05-01T20:36:15.000Z\":2,\"2015-05-01T20:36:17.000Z\":2,\"2015-05-01T20:36:21.000Z\":1,\"2015-05-01T20:36:25.000Z\":2,\"2015-05-01T20:36:31.000Z\":2,\"2015-05-01T20:36:38.000Z\":2,\"2015-05-01T20:36:39.000Z\":2,\"2015-05-01T20:36:40.000Z\":2,\"2015-05-01T20:36:45.000Z\":2,\"2015-05-01T20:36:51.000Z\":2,\"2015-05-01T20:36:54.000Z\":2,\"2015-05-01T20:36:56.000Z\":1,\"2015-05-01T20:36:58.000Z\":2,\"2015-05-01T20:37:02.000Z\":2,\"2015-05-01T20:37:05.000Z\":2,\"2015-05-01T20:37:09.000Z\":1,\"2015-05-01T20:37:15.000Z\":2,\"2015-05-01T20:37:17.000Z\":1,\"2015-05-01T20:37:19.000Z\":2,\"2015-05-01T20:37:21.000Z\":2,\"2015-05-01T20:37:24.000Z\":2,\"2015-05-01T20:37:26.000Z\":2,\"2015-05-01T20:37:29.000Z\":2,\"2015-05-01T20:37:32.000Z\":2,\"2015-05-01T20:37:34.000Z\":2,\"2015-05-01T20:37:38.000Z\":2,\"2015-05-01T20:37:42.000Z\":1,\"2015-05-01T20:37:51.000Z\":2,\"2015-05-01T20:37:55.000Z\":2,\"2015-05-01T20:37:58.000Z\":2,\"2015-05-01T20:38:00.000Z\":1,\"2015-05-01T20:38:04.000Z\":2,\"2015-05-01T20:38:06.000Z\":2,\"2015-05-01T20:38:08.000Z\":2,\"2015-05-01T20:38:10.000Z\":2,\"2015-05-01T20:38:14.000Z\":2,\"2015-05-01T20:38:15.000Z\":2,\"2015-05-01T20:38:19.000Z\":1,\"2015-05-01T20:38:20.000Z\":2,\"2015-05-01T20:38:23.000Z\":2,\"2015-05-01T20:38:27.000Z\":2,\"2015-05-01T20:38:28.000Z\":2,\"2015-05-01T20:38:30.000Z\":2,\"2015-05-01T20:38:33.000Z\":1,\"2015-05-01T20:38:36.000Z\":2,\"2015-05-01T20:38:37.000Z\":2,\"2015-05-01T20:38:40.000Z\":2,\"2015-05-01T20:38:42.000Z\":2,\"2015-05-01T20:38:44.000Z\":2,\"2015-05-01T20:38:49.000Z\":2,\"2015-05-01T20:38:51.000Z\":2,\"2015-05-01T20:38:55.000Z\":2,\"2015-05-01T20:38:57.000Z\":2,\"2015-05-01T20:38:58.000Z\":1,\"2015-05-01T20:39:03.000Z\":1,\"2015-05-01T20:39:05.000Z\":2,\"2015-05-01T20:39:06.000Z\":2,\"2015-05-01T20:39:09.000Z\":2,\"2015-05-01T20:39:12.000Z\":2,\"2015-05-01T20:39:15.000Z\":2,\"2015-05-01T20:39:17.000Z\":2,\"2015-05-01T20:39:19.000Z\":2,\"2015-05-01T20:39:21.000Z\":2,\"2015-05-01T20:39:25.000Z\":2,\"2015-05-01T20:39:28.000Z\":2,\"2015-05-01T20:39:33.000Z\":2,\"2015-05-01T20:39:37.000Z\":2,\"2015-05-01T20:39:39.000Z\":1,\"2015-05-01T20:39:41.000Z\":2,\"2015-05-01T20:39:44.000Z\":2,\"2015-05-01T20:39:46.000Z\":1,\"2015-05-01T20:39:49.000Z\":1,\"2015-05-01T20:39:52.000Z\":2,\"2015-05-01T20:39:55.000Z\":1,\"2015-05-01T20:39:58.000Z\":1,\"2015-05-01T20:40:00.000Z\":2,\"2015-05-01T20:40:03.000Z\":2,\"2015-05-01T20:40:08.000Z\":2,\"2015-05-01T20:40:13.000Z\":2,\"2015-05-01T20:40:18.000Z\":1,\"2015-05-01T20:40:20.000Z\":2,\"2015-05-01T20:40:25.000Z\":2,\"2015-05-01T20:40:27.000Z\":2,\"2015-05-01T20:40:30.000Z\":2,\"2015-05-01T20:40:33.000Z\":2,\"2015-05-01T20:40:36.000Z\":2,\"2015-05-01T20:40:41.000Z\":2,\"2015-05-01T20:40:47.000Z\":2,\"2015-05-01T20:40:50.000Z\":2,\"2015-05-01T20:40:53.000Z\":1,\"2015-05-01T20:40:58.000Z\":2,\"2015-05-01T20:41:02.000Z\":2,\"2015-05-01T20:41:06.000Z\":2,\"2015-05-01T20:41:12.000Z\":2,\"2015-05-01T20:41:16.000Z\":2,\"2015-05-01T20:41:18.000Z\":2,\"2015-05-01T20:41:24.000Z\":2,\"2015-05-01T20:41:25.000Z\":1,\"2015-05-01T20:41:28.000Z\":2,\"2015-05-01T20:41:30.000Z\":2,\"2015-05-01T20:41:31.000Z\":2,\"2015-05-01T20:41:35.000Z\":2,\"2015-05-01T20:41:36.000Z\":2,\"2015-05-01T20:41:39.000Z\":1,\"2015-05-01T20:41:44.000Z\":2,\"2015-05-01T20:41:47.000Z\":2,\"2015-05-01T20:41:49.000Z\":2,\"2015-05-01T20:41:51.000Z\":2,\"2015-05-01T20:41:59.000Z\":2,\"2015-05-01T20:42:03.000Z\":1,\"2015-05-01T20:42:08.000Z\":1,\"2015-05-01T20:42:11.000Z\":2,\"2015-05-01T20:42:14.000Z\":1,\"2015-05-01T20:42:15.000Z\":2,\"2015-05-01T20:42:16.000Z\":1,\"2015-05-01T20:42:19.000Z\":2,\"2015-05-01T20:42:22.000Z\":2,\"2015-05-01T20:42:27.000Z\":2,\"2015-05-01T20:42:28.000Z\":1,\"2015-05-01T20:42:30.000Z\":2,\"2015-05-01T20:42:34.000Z\":2,\"2015-05-01T20:42:37.000Z\":2,\"2015-05-01T20:42:42.000Z\":2,\"2015-05-01T20:42:43.000Z\":2,\"2015-05-01T20:42:44.000Z\":1,\"2015-05-01T20:42:45.000Z\":1,\"2015-05-01T20:42:47.000Z\":2,\"2015-05-01T20:42:50.000Z\":2,\"2015-05-01T20:42:52.000Z\":1,\"2015-05-01T20:42:55.000Z\":2,\"2015-05-01T20:43:00.000Z\":2,\"2015-05-01T20:43:05.000Z\":2,\"2015-05-01T20:43:06.000Z\":2,\"2015-05-01T20:43:09.000Z\":2,\"2015-05-01T20:43:10.000Z\":2,\"2015-05-01T20:43:13.000Z\":2,\"2015-05-01T20:43:14.000Z\":2,\"2015-05-01T20:43:22.000Z\":2,\"2015-05-01T20:43:24.000Z\":2,\"2015-05-01T20:43:27.000Z\":2,\"2015-05-01T20:43:30.000Z\":2,\"2015-05-01T20:43:31.000Z\":2,\"2015-05-01T20:43:35.000Z\":2,\"2015-05-01T20:43:38.000Z\":2,\"2015-05-01T20:43:40.000Z\":2,\"2015-05-01T20:43:43.000Z\":2,\"2015-05-01T20:43:45.000Z\":2,\"2015-05-01T20:43:49.000Z\":2,\"2015-05-01T20:43:54.000Z\":2,\"2015-05-01T20:44:00.000Z\":2,\"2015-05-01T20:44:02.000Z\":2,\"2015-05-01T20:44:05.000Z\":2,\"2015-05-01T20:44:06.000Z\":1,\"2015-05-01T20:44:14.000Z\":2,\"2015-05-01T20:44:16.000Z\":2,\"2015-05-01T20:44:18.000Z\":2,\"2015-05-01T20:44:21.000Z\":2,\"2015-05-01T20:44:25.000Z\":3,\"2015-05-01T20:44:27.000Z\":2,\"2015-05-01T20:44:30.000Z\":2,\"2015-05-01T20:44:36.000Z\":2,\"2015-05-01T20:44:41.000Z\":2,\"2015-05-01T20:44:42.000Z\":1,\"2015-05-01T20:44:48.000Z\":2,\"2015-05-01T20:44:54.000Z\":2,\"2015-05-01T20:44:59.000Z\":2,\"2015-05-01T20:45:01.000Z\":2,\"2015-05-01T20:45:04.000Z\":2,\"2015-05-01T20:45:08.000Z\":1,\"2015-05-01T20:45:10.000Z\":1,\"2015-05-01T20:45:11.000Z\":2,\"2015-05-01T20:45:16.000Z\":2,\"2015-05-01T20:45:19.000Z\":2,\"2015-05-01T20:45:21.000Z\":2,\"2015-05-01T20:45:26.000Z\":2,\"2015-05-01T20:45:29.000Z\":2,\"2015-05-01T20:45:33.000Z\":2,\"2015-05-01T20:45:35.000Z\":2,\"2015-05-01T20:45:36.000Z\":1,\"2015-05-01T20:45:40.000Z\":1,\"2015-05-01T20:45:43.000Z\":2,\"2015-05-01T20:45:46.000Z\":1,\"2015-05-01T20:45:49.000Z\":2,\"2015-05-01T20:45:53.000Z\":1,\"2015-05-01T20:45:55.000Z\":2,\"2015-05-01T20:46:02.000Z\":2,\"2015-05-01T20:46:04.000Z\":2,\"2015-05-01T20:46:07.000Z\":1,\"2015-05-01T20:46:09.000Z\":2,\"2015-05-01T20:46:14.000Z\":2,\"2015-05-01T20:46:16.000Z\":2,\"2015-05-01T20:46:19.000Z\":2,\"2015-05-01T20:46:23.000Z\":2,\"2015-05-01T20:46:26.000Z\":1,\"2015-05-01T20:46:28.000Z\":2,\"2015-05-01T20:46:30.000Z\":1,\"2015-05-01T20:46:32.000Z\":2,\"2015-05-01T20:46:34.000Z\":1,\"2015-05-01T20:46:36.000Z\":2,\"2015-05-01T20:46:38.000Z\":2,\"2015-05-01T20:46:43.000Z\":2,\"2015-05-01T20:46:47.000Z\":1,\"2015-05-01T20:46:51.000Z\":2,\"2015-05-01T20:46:53.000Z\":2,\"2015-05-01T20:46:57.000Z\":2,\"2015-05-01T20:46:59.000Z\":2,\"2015-05-01T20:47:01.000Z\":2,\"2015-05-01T20:47:03.000Z\":1,\"2015-05-01T20:47:08.000Z\":1,\"2015-05-01T20:47:10.000Z\":2,\"2015-05-01T20:47:11.000Z\":2,\"2015-05-01T20:47:15.000Z\":1,\"2015-05-01T20:47:18.000Z\":2,\"2015-05-01T20:47:19.000Z\":1,\"2015-05-01T20:47:23.000Z\":2,\"2015-05-01T20:47:28.000Z\":2,\"2015-05-01T20:47:31.000Z\":2,\"2015-05-01T20:47:33.000Z\":2,\"2015-05-01T20:47:35.000Z\":2,\"2015-05-01T20:47:36.000Z\":2,\"2015-05-01T20:47:39.000Z\":2,\"2015-05-01T20:47:41.000Z\":2,\"2015-05-01T20:47:46.000Z\":2,\"2015-05-01T20:47:48.000Z\":2,\"2015-05-01T20:47:50.000Z\":2,\"2015-05-01T20:47:52.000Z\":2,\"2015-05-01T20:47:55.000Z\":2,\"2015-05-01T20:47:59.000Z\":1,\"2015-05-01T20:48:04.000Z\":2,\"2015-05-01T20:48:09.000Z\":2,\"2015-05-01T20:48:14.000Z\":3,\"2015-05-01T20:48:16.000Z\":2,\"2015-05-01T20:48:19.000Z\":2,\"2015-05-01T20:48:22.000Z\":2,\"2015-05-01T20:48:25.000Z\":2,\"2015-05-01T20:48:29.000Z\":2,\"2015-05-01T20:48:33.000Z\":1,\"2015-05-01T20:48:35.000Z\":2,\"2015-05-01T20:48:36.000Z\":2,\"2015-05-01T20:48:42.000Z\":2,\"2015-05-01T20:48:44.000Z\":2,\"2015-05-01T20:48:45.000Z\":1,\"2015-05-01T20:48:48.000Z\":2,\"2015-05-01T20:48:51.000Z\":2,\"2015-05-01T20:48:55.000Z\":2,\"2015-05-01T20:48:59.000Z\":2,\"2015-05-01T20:49:02.000Z\":2,\"2015-05-01T20:49:06.000Z\":2,\"2015-05-01T20:49:11.000Z\":1,\"2015-05-01T20:49:13.000Z\":2,\"2015-05-01T20:49:18.000Z\":1,\"2015-05-01T20:49:23.000Z\":2,\"2015-05-01T20:49:25.000Z\":2,\"2015-05-01T20:49:29.000Z\":2,\"2015-05-01T20:49:32.000Z\":2,\"2015-05-01T20:49:35.000Z\":2,\"2015-05-01T20:49:38.000Z\":2,\"2015-05-01T20:49:41.000Z\":1,\"2015-05-01T20:49:45.000Z\":1,\"2015-05-01T20:49:47.000Z\":2,\"2015-05-01T20:49:50.000Z\":1,\"2015-05-01T20:49:54.000Z\":2,\"2015-05-01T20:49:58.000Z\":2,\"2015-05-01T20:50:00.000Z\":2,\"2015-05-01T20:50:02.000Z\":1,\"2015-05-01T20:50:05.000Z\":1,\"2015-05-01T20:50:09.000Z\":1,\"2015-05-01T20:50:14.000Z\":1,\"2015-05-01T20:50:17.000Z\":2,\"2015-05-01T20:50:20.000Z\":2,\"2015-05-01T20:50:22.000Z\":2,\"2015-05-01T20:50:26.000Z\":2,\"2015-05-01T20:50:27.000Z\":2,\"2015-05-01T20:50:29.000Z\":2,\"2015-05-01T20:50:31.000Z\":1,\"2015-05-01T20:50:37.000Z\":2,\"2015-05-01T20:50:39.000Z\":2,\"2015-05-01T20:50:42.000Z\":2,\"2015-05-01T20:50:45.000Z\":2,\"2015-05-01T20:50:46.000Z\":2,\"2015-05-01T20:50:49.000Z\":2,\"2015-05-01T20:50:51.000Z\":2,\"2015-05-01T20:50:56.000Z\":2,\"2015-05-01T20:51:00.000Z\":2,\"2015-05-01T20:51:03.000Z\":1,\"2015-05-01T20:51:05.000Z\":2,\"2015-05-01T20:51:09.000Z\":2,\"2015-05-01T20:51:15.000Z\":2,\"2015-05-01T20:51:17.000Z\":1,\"2015-05-01T20:51:19.000Z\":2,\"2015-05-01T20:51:22.000Z\":2,\"2015-05-01T20:51:24.000Z\":2,\"2015-05-01T20:51:27.000Z\":1,\"2015-05-01T20:51:32.000Z\":2,\"2015-05-01T20:51:36.000Z\":2,\"2015-05-01T20:51:41.000Z\":2,\"2015-05-01T20:51:43.000Z\":1,\"2015-05-01T20:51:45.000Z\":2,\"2015-05-01T20:51:49.000Z\":1,\"2015-05-01T20:51:50.000Z\":1,\"2015-05-01T20:51:52.000Z\":2,\"2015-05-01T20:51:54.000Z\":2,\"2015-05-01T20:51:56.000Z\":2,\"2015-05-01T20:52:00.000Z\":2,\"2015-05-01T20:52:02.000Z\":2,\"2015-05-01T20:52:06.000Z\":2,\"2015-05-01T20:52:09.000Z\":2,\"2015-05-01T20:52:12.000Z\":2,\"2015-05-01T20:52:14.000Z\":2,\"2015-05-01T20:52:17.000Z\":2,\"2015-05-01T20:52:24.000Z\":1,\"2015-05-01T20:52:26.000Z\":1,\"2015-05-01T20:52:29.000Z\":1,\"2015-05-01T20:52:32.000Z\":2,\"2015-05-01T20:52:34.000Z\":1,\"2015-05-01T20:52:37.000Z\":1,\"2015-05-01T20:52:44.000Z\":1,\"2015-05-01T20:52:45.000Z\":2,\"2015-05-01T20:52:49.000Z\":2,\"2015-05-01T20:52:54.000Z\":2,\"2015-05-01T20:52:55.000Z\":1,\"2015-05-01T20:52:58.000Z\":1,\"2015-05-01T20:53:02.000Z\":1,\"2015-05-01T20:53:05.000Z\":2,\"2015-05-01T20:53:10.000Z\":2,\"2015-05-01T20:53:15.000Z\":2,\"2015-05-01T20:53:19.000Z\":2,\"2015-05-01T20:53:24.000Z\":2,\"2015-05-01T20:53:27.000Z\":2,\"2015-05-01T20:53:32.000Z\":2,\"2015-05-01T20:53:34.000Z\":2,\"2015-05-01T20:53:37.000Z\":1,\"2015-05-01T20:53:43.000Z\":1,\"2015-05-01T20:53:45.000Z\":2,\"2015-05-01T20:53:49.000Z\":3,\"2015-05-01T20:53:50.000Z\":2,\"2015-05-01T20:53:54.000Z\":2,\"2015-05-01T20:53:57.000Z\":2,\"2015-05-01T20:53:59.000Z\":1,\"2015-05-01T20:54:01.000Z\":2,\"2015-05-01T20:54:04.000Z\":2,\"2015-05-01T20:54:07.000Z\":1,\"2015-05-01T20:54:13.000Z\":2,\"2015-05-01T20:54:14.000Z\":2,\"2015-05-01T20:54:17.000Z\":1,\"2015-05-01T20:54:19.000Z\":2,\"2015-05-01T20:54:23.000Z\":1,\"2015-05-01T20:54:28.000Z\":2,\"2015-05-01T20:54:32.000Z\":2,\"2015-05-01T20:54:36.000Z\":2,\"2015-05-01T20:54:40.000Z\":2,\"2015-05-01T20:54:44.000Z\":1,\"2015-05-01T20:54:45.000Z\":2,\"2015-05-01T20:54:48.000Z\":2,\"2015-05-01T20:54:55.000Z\":1,\"2015-05-01T20:54:57.000Z\":2,\"2015-05-01T20:55:00.000Z\":2,\"2015-05-01T20:55:02.000Z\":2,\"2015-05-01T20:55:06.000Z\":1,\"2015-05-01T20:55:07.000Z\":2,\"2015-05-01T20:55:08.000Z\":2,\"2015-05-01T20:55:13.000Z\":2,\"2015-05-01T20:55:17.000Z\":2,\"2015-05-01T20:55:19.000Z\":2,\"2015-05-01T20:55:22.000Z\":1,\"2015-05-01T20:55:23.000Z\":2,\"2015-05-01T20:55:25.000Z\":2,\"2015-05-01T20:55:27.000Z\":1,\"2015-05-01T20:55:32.000Z\":2,\"2015-05-01T20:55:36.000Z\":1,\"2015-05-01T20:55:40.000Z\":2,\"2015-05-01T20:55:41.000Z\":2,\"2015-05-01T20:55:43.000Z\":2,\"2015-05-01T20:55:44.000Z\":2,\"2015-05-01T20:55:48.000Z\":2,\"2015-05-01T20:55:50.000Z\":1,\"2015-05-01T20:55:51.000Z\":1,\"2015-05-01T20:55:57.000Z\":2,\"2015-05-01T20:56:04.000Z\":2,\"2015-05-01T20:56:07.000Z\":2,\"2015-05-01T20:56:12.000Z\":2,\"2015-05-01T20:56:15.000Z\":2,\"2015-05-01T20:56:18.000Z\":2,\"2015-05-01T20:56:23.000Z\":2,\"2015-05-01T20:56:25.000Z\":2,\"2015-05-01T20:56:28.000Z\":1,\"2015-05-01T20:56:34.000Z\":2,\"2015-05-01T20:56:39.000Z\":2,\"2015-05-01T20:56:41.000Z\":1,\"2015-05-01T20:56:46.000Z\":2,\"2015-05-01T20:56:50.000Z\":2,\"2015-05-01T20:56:52.000Z\":2,\"2015-05-01T20:56:56.000Z\":2,\"2015-05-01T20:56:58.000Z\":2,\"2015-05-01T20:56:59.000Z\":2,\"2015-05-01T20:57:01.000Z\":2,\"2015-05-01T20:57:03.000Z\":2,\"2015-05-01T20:57:08.000Z\":1,\"2015-05-01T20:57:11.000Z\":2,\"2015-05-01T20:57:15.000Z\":2,\"2015-05-01T20:57:18.000Z\":1,\"2015-05-01T20:57:21.000Z\":2,\"2015-05-01T20:57:27.000Z\":2,\"2015-05-01T20:57:30.000Z\":2,\"2015-05-01T20:57:32.000Z\":1,\"2015-05-01T20:57:36.000Z\":2,\"2015-05-01T20:57:39.000Z\":1,\"2015-05-01T20:57:41.000Z\":2,\"2015-05-01T20:57:44.000Z\":1,\"2015-05-01T20:57:47.000Z\":2,\"2015-05-01T20:57:52.000Z\":2,\"2015-05-01T20:57:54.000Z\":2,\"2015-05-01T20:58:01.000Z\":2,\"2015-05-01T20:58:03.000Z\":1,\"2015-05-01T20:58:05.000Z\":2,\"2015-05-01T20:58:09.000Z\":2,\"2015-05-01T20:58:10.000Z\":2,\"2015-05-01T20:58:12.000Z\":2,\"2015-05-01T20:58:16.000Z\":2,\"2015-05-01T20:58:19.000Z\":2,\"2015-05-01T20:58:21.000Z\":2,\"2015-05-01T20:58:25.000Z\":2,\"2015-05-01T20:58:28.000Z\":2,\"2015-05-01T20:58:30.000Z\":2,\"2015-05-01T20:58:32.000Z\":2,\"2015-05-01T20:58:33.000Z\":2,\"2015-05-01T20:58:39.000Z\":2,\"2015-05-01T20:58:46.000Z\":2,\"2015-05-01T20:58:48.000Z\":2,\"2015-05-01T20:58:53.000Z\":2,\"2015-05-01T20:58:58.000Z\":2,\"2015-05-01T20:59:00.000Z\":2,\"2015-05-01T20:59:05.000Z\":2,\"2015-05-01T20:59:07.000Z\":2,\"2015-05-01T20:59:11.000Z\":2,\"2015-05-01T20:59:15.000Z\":2,\"2015-05-01T20:59:18.000Z\":2,\"2015-05-01T20:59:21.000Z\":2,\"2015-05-01T20:59:24.000Z\":2,\"2015-05-01T20:59:29.000Z\":2,\"2015-05-01T20:59:31.000Z\":2,\"2015-05-01T20:59:32.000Z\":2,\"2015-05-01T20:59:35.000Z\":2,\"2015-05-01T20:59:36.000Z\":2,\"2015-05-01T20:59:37.000Z\":2,\"2015-05-01T20:59:39.000Z\":2,\"2015-05-01T20:59:42.000Z\":2,\"2015-05-01T20:59:45.000Z\":2,\"2015-05-01T20:59:47.000Z\":1,\"2015-05-01T20:59:50.000Z\":1,\"2015-05-01T20:59:51.000Z\":2,\"2015-05-01T20:59:52.000Z\":2,\"2015-05-01T20:59:54.000Z\":2,\"2015-05-01T20:59:59.000Z\":2}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(greendf)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"import org.apache.spark.sql"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"source": [
							"yellowdf.write.mode('overwrite').parquet(\"/nyctaxiyellow\")"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"source": [
							"greendf.write.mode('overwrite').parquet(\"/nyctaxigreen\")"
						],
						"outputs": [],
						"execution_count": 21
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/oriondataengg')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('oriondataengg_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import os\n",
							"import uuid\n",
							"import shutil\n",
							"import pandas as pd\n",
							"\n",
							"from mlflow.tracking import MlflowClient"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"import sys\n",
							"from pyspark.sql import SparkSession\n",
							"\n",
							"sc = SparkSession.builder.getOrCreate()\n",
							"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\n",
							"\n",
							"oriondskey = token_library.getSecret(\"accvault1\", \"oriondskey\", \"accvault1\")\n",
							"print(oriondskey)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"spark.conf.set(\n",
							"  \"fs.azure.account.key.orionstoreds.blob.core.windows.net\",\n",
							"  oriondskey)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"webeventsdf = spark.read.option(\"header\",\"true\").option(\"inferSchema\", \"true\").csv(\"wasbs://dsppsample@orionstoreds.blob.core.windows.net/DSPP/webevent.csv\")"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"WebEventRequestKey"
									],
									"values": [
										"WebEventKey"
									],
									"yLabel": "WebEventKey",
									"xLabel": "WebEventRequestKey",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"WebEventKey\":{\"-9223372036820178000\":-9223372036822151000,\"-9223372036824223000\":-774763251093409800000,\"-9223372036824224000\":-239807672957485060000,\"-9223372036824292000\":-322818021288911040000,\"-9223372036824293000\":-239807672957483060000,\"-9223372036824408000\":-461168601841316500000,\"-9223372036824543000\":-83010348331434820000,\"-9223372036824799000\":-1.5679732462605133e+21,\"-9223372036824821000\":-64563604257785260000,\"-9223372036824822000\":-2.213609288838356e+21,\"-9223372036824984000\":-654859414614690100000,\"-9223372036825097000\":-92233720368266660000,\"-9223372036825290000\":-83010348331442320000,\"-9223372036825296000\":-1.3835058055240478e+21,\"-9223372036825381000\":-267477789067983000000,\"-9223372036825491000\":-36893488147308230000,\"-9223372036825538000\":-83010348331445850000,\"-9223372036825795000\":-55340232220964930000,\"-9223372036825796000\":-599519182393786500000}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(webeventsdf)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"AUMAccountsRepsdf = spark.read.option(\"header\",\"true\").option(\"inferSchema\", \"true\").csv(\"wasbs://dsppsample@orionstoreds.blob.core.windows.net/DSPP/AUMAccountsReps.csv\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"DateValue"
									],
									"values": [
										"DataSourceKey"
									],
									"yLabel": "DataSourceKey",
									"xLabel": "DateValue",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"DataSourceKey\":{\"2015-01-31 00:00:00.0000000\":1830,\"2015-02-28 00:00:00.0000000\":1830,\"2015-03-31 00:00:00.0000000\":1830,\"2015-04-30 00:00:00.0000000\":1830,\"2015-05-31 00:00:00.0000000\":1830,\"2015-06-30 00:00:00.0000000\":1830,\"2015-07-31 00:00:00.0000000\":1830,\"2015-08-31 00:00:00.0000000\":1830,\"2015-09-30 00:00:00.0000000\":1830,\"2015-10-31 00:00:00.0000000\":1830,\"2015-11-30 00:00:00.0000000\":1830,\"2015-12-31 00:00:00.0000000\":2732,\"2016-01-31 00:00:00.0000000\":2732,\"2016-02-29 00:00:00.0000000\":2732,\"2016-03-31 00:00:00.0000000\":2732,\"2016-04-30 00:00:00.0000000\":2732,\"2016-05-31 00:00:00.0000000\":3740,\"2016-06-30 00:00:00.0000000\":3740,\"2016-07-31 00:00:00.0000000\":3740,\"2016-08-31 00:00:00.0000000\":3740,\"2016-09-30 00:00:00.0000000\":3740,\"2016-10-31 00:00:00.0000000\":3740,\"2016-11-30 00:00:00.0000000\":3740,\"2016-12-31 00:00:00.0000000\":3740,\"2017-01-31 00:00:00.0000000\":3740,\"2017-02-28 00:00:00.0000000\":3740,\"2017-03-31 00:00:00.0000000\":3740,\"2017-04-30 00:00:00.0000000\":3740,\"2017-05-31 00:00:00.0000000\":5056,\"2017-06-30 00:00:00.0000000\":5056,\"2017-07-31 00:00:00.0000000\":5056,\"2017-08-31 00:00:00.0000000\":6587,\"2017-09-30 00:00:00.0000000\":6587,\"2017-10-31 00:00:00.0000000\":6587,\"2017-11-30 00:00:00.0000000\":6587,\"2017-12-31 00:00:00.0000000\":8177,\"2018-01-31 00:00:00.0000000\":8177,\"2018-02-28 00:00:00.0000000\":8177,\"2018-03-31 00:00:00.0000000\":8177,\"2018-04-30 00:00:00.0000000\":8177,\"2018-05-31 00:00:00.0000000\":8177,\"2018-06-30 00:00:00.0000000\":8177,\"2018-07-31 00:00:00.0000000\":8177,\"2018-08-31 00:00:00.0000000\":8177,\"2018-09-30 00:00:00.0000000\":8177,\"2018-10-31 00:00:00.0000000\":8177,\"2018-11-30 00:00:00.0000000\":8177,\"2018-12-31 00:00:00.0000000\":10148,\"2019-01-31 00:00:00.0000000\":10148,\"2019-02-28 00:00:00.0000000\":10148,\"2019-03-31 00:00:00.0000000\":10148,\"2019-04-30 00:00:00.0000000\":9953,\"2019-05-31 00:00:00.0000000\":9953,\"2019-06-30 00:00:00.0000000\":9953,\"2019-07-31 00:00:00.0000000\":9953,\"2019-08-31 00:00:00.0000000\":9953,\"2019-09-30 00:00:00.0000000\":9953,\"2019-10-31 00:00:00.0000000\":9953,\"2019-11-30 00:00:00.0000000\":9953,\"2019-12-31 00:00:00.0000000\":9953,\"2020-01-31 00:00:00.0000000\":9953,\"2020-02-29 00:00:00.0000000\":9953,\"2020-03-31 00:00:00.0000000\":9953,\"2020-04-30 00:00:00.0000000\":9953,\"2020-05-31 00:00:00.0000000\":9953,\"2020-06-30 00:00:00.0000000\":9953,\"2020-07-31 00:00:00.0000000\":9953,\"2020-08-31 00:00:00.0000000\":9953,\"2020-09-30 00:00:00.0000000\":9633,\"2020-10-31 00:00:00.0000000\":9633,\"2020-11-30 00:00:00.0000000\":8317,\"2020-12-31 00:00:00.0000000\":8317,\"2021-01-31 00:00:00.0000000\":8317,\"2021-02-28 00:00:00.0000000\":6719,\"2021-03-31 00:00:00.0000000\":6621,\"2021-04-30 00:00:00.0000000\":5719,\"2021-05-31 00:00:00.0000000\":5719}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(AUMAccountsRepsdf)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"FeeRatiossdf = spark.read.option(\"header\",\"true\").option(\"inferSchema\", \"true\").csv(\"wasbs://dsppsample@orionstoreds.blob.core.windows.net/DSPP/FeeRatios.csv\")"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"DataSourceKey"
									],
									"values": [
										"FeeSummaryKey"
									],
									"yLabel": "FeeSummaryKey",
									"xLabel": "DataSourceKey",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"FeeSummaryKey\":{\"98\":30869661433}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(FeeRatiossdf)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							"OptimizationMetricsdf = spark.read.option(\"header\",\"true\").option(\"inferSchema\", \"true\").csv(\"wasbs://dsppsample@orionstoreds.blob.core.windows.net/DSPP/OptimizationMetrics.csv\")"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"MetricID"
									],
									"values": [
										"MetricTypeKey"
									],
									"yLabel": "MetricTypeKey",
									"xLabel": "MetricID",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"MetricTypeKey\":{\"0\":91667,\"1\":63,\"2\":684,\"3\":260,\"6\":560,\"7\":21,\"8\":93,\"9\":608,\"12\":750,\"13\":741,\"15\":23,\"22\":910,\"25\":52,\"229\":458,\"1051\":2700,\"1052\":4313,\"1053\":5016,\"1071\":8170,\"1072\":4085,\"-1\":792}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(OptimizationMetricsdf)"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"source": [
							"QuaterlyDetailAccountingdf = spark.read.option(\"header\",\"true\").option(\"inferSchema\", \"true\").csv(\"wasbs://dsppsample@orionstoreds.blob.core.windows.net/DSPP/QuaterlyDetailAccounting\")"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"DataSourceKey"
									],
									"values": [
										"AccountTWRPerformanceKey"
									],
									"yLabel": "AccountTWRPerformanceKey",
									"xLabel": "DataSourceKey",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"AccountTWRPerformanceKey\":{\"195\":-147573952589637900000,\"320\":-2.951479051792793e+21,\"424\":-4.1044005563993786e+21,\"590\":-2.0291418481075445e+21}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(QuaterlyDetailAccountingdf)"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"source": [
							"TWRPerformancedf = spark.read.option(\"header\",\"true\").option(\"inferSchema\", \"true\").csv(\"wasbs://dsppsample@orionstoreds.blob.core.windows.net/DSPP/TWRPerformance.csv\")"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"DataSourceKey"
									],
									"values": [
										"AccountTWRPerformanceKey"
									],
									"yLabel": "AccountTWRPerformanceKey",
									"xLabel": "DataSourceKey",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"AccountTWRPerformanceKey\":{\"195\":-249031044995014100000,\"320\":-2.5640974262449807e+21,\"424\":-4.03983695214141e+21,\"590\":-2.3796299855079366e+21}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(TWRPerformancedf)"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"LoginLevel"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "LoginLevel",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"Administrator\":705157,\"Advisor\":9201010,\"Broker/Dealer\":9574,\"Client\":415725,\"Representative\":305360}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(webeventsdf.groupBy(\"LoginLevel\").count())"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"count"
									],
									"values": [
										"DataSourceKey"
									],
									"yLabel": "DataSourceKey",
									"xLabel": "count",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"DataSourceKey\":{\"470\":195,\"10571\":98,\"14725\":424,\"25820\":320,\"529538\":1531,\"740370\":590,\"949211\":1590,\"984998\":1008,\"1319738\":1316,\"1511440\":1971,\"1527647\":902,\"3022298\":203}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(webeventsdf.groupBy(\"DataSourceKey\").count())"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"count"
									],
									"values": [
										"RequestDateKey"
									],
									"yLabel": "RequestDateKey",
									"xLabel": "count",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"RequestDateKey\":{\"801\":20201128,\"827\":20200531,\"853\":20201025,\"910\":20210207,\"995\":20210314,\"1045\":20210313,\"1107\":20210523,\"1132\":20210327,\"1133\":20210509,\"1276\":20210124,\"1287\":20201115,\"1305\":20201220,\"1307\":20201226,\"1310\":20210516,\"1331\":20210307,\"1358\":20201108,\"1394\":20210418,\"1406\":20201011,\"1470\":20210321,\"1490\":20201227,\"1495\":40411733,\"1497\":20210228,\"1500\":20201122,\"1523\":20210501,\"1526\":20210214,\"1577\":20210404,\"1592\":20210328,\"1597\":20210110,\"1623\":20210425,\"1648\":20201126,\"1651\":20210131,\"1655\":20210109,\"1681\":20210221,\"1708\":20210403,\"1713\":20201212,\"1784\":20201031,\"1806\":20210515,\"1817\":20201114,\"1823\":20210116,\"1826\":20210522,\"1831\":20201206,\"1844\":20210306,\"1863\":20201129,\"1872\":20210206,\"1887\":20201205,\"1889\":20200927,\"1972\":20210213,\"2015\":20210320,\"2033\":20210102,\"2059\":20210502,\"2068\":20201017,\"2085\":20200920,\"2087\":20200426,\"2106\":20200913,\"2151\":20201101,\"2168\":20201010,\"2200\":20200809,\"2223\":20201024,\"2227\":20200906,\"2239\":20200510,\"2241\":20200104,\"2246\":20210103,\"2257\":20210130,\"2284\":20210417,\"2341\":20201121,\"2366\":20200503,\"2381\":20210424,\"2389\":20200524,\"2396\":20200726,\"2415\":20200830,\"2417\":20200823,\"2423\":20200907,\"2470\":20200628,\"2512\":20210118,\"2517\":20200614,\"2552\":20200517,\"2564\":20200705,\"2606\":20200802,\"2613\":20200315,\"2657\":20210117,\"2690\":20200215,\"2719\":20210227,\"2729\":20200621,\"2777\":20200816,\"2817\":20210123,\"2836\":20200712,\"2848\":20200607,\"2858\":20201219,\"2929\":20201107,\"2936\":20200105,\"2963\":20200222,\"2992\":20200412,\"3005\":20200405,\"3188\":20201018,\"3306\":20210411,\"3395\":20200718,\"3444\":20210220,\"3455\":20200808,\"3481\":20200411,\"3513\":20210101,\"3523\":20200905,\"3612\":20200912,\"3629\":20200523,\"3728\":20200509,\"3745\":20210525,\"3753\":20200627,\"3808\":40401129,\"3825\":20200704,\"3906\":20200502,\"3947\":20190811,\"3980\":20201004,\"3998\":20200216,\"4066\":20200829,\"4101\":20200516,\"4162\":20200703,\"4165\":20200801,\"4167\":20201003,\"4175\":20210410,\"4199\":20200525,\"4210\":20210215,\"4368\":20200719,\"4386\":20190825,\"4479\":20200606,\"4535\":20200425,\"4663\":20200822,\"4784\":20200208,\"4874\":20200404,\"4882\":20200328,\"4931\":20190810,\"4984\":20200926,\"5024\":20201127,\"5056\":20200815,\"5083\":20200725,\"5285\":20200419,\"5418\":20200620,\"5518\":20190818,\"5590\":20200530,\"5639\":20190901,\"5661\":20210326,\"5675\":20200223,\"5766\":20210329,\"5811\":20200919,\"5836\":20200613,\"5848\":20201123,\"6138\":20190817,\"6503\":20210422,\"6518\":20191020,\"6544\":20191208,\"6576\":20190824,\"6588\":20191027,\"6637\":20190831,\"6674\":40391027,\"6690\":20190902,\"6725\":20190929,\"6805\":20191124,\"6834\":20191006,\"6891\":20190922,\"6947\":20190804,\"6952\":20190915,\"7035\":20200329,\"7092\":20191201,\"7094\":20210412,\"7104\":20191128,\"7137\":20191130,\"7170\":20201224,\"7193\":20210420,\"7222\":20201009,\"7243\":20200120,\"7305\":20190914,\"7344\":20191103,\"7455\":20200202,\"7513\":20210428,\"7536\":20200301,\"7548\":20201223,\"7556\":20190921,\"7573\":20191005,\"7632\":20201228,\"7648\":20210423,\"7665\":20191026,\"7666\":20210518,\"7698\":20191117,\"7699\":20190928,\"7749\":20190907,\"7792\":20191116,\"7794\":20191229,\"7817\":20191215,\"7823\":20191012,\"7853\":40391139,\"7934\":20210409,\"7978\":20200229,\"7997\":20210512,\"8002\":20191207,\"8011\":20201229,\"8123\":20200209,\"8209\":20210402,\"8267\":20201124,\"8332\":20200321,\"8347\":20210426,\"8502\":20191225,\"8519\":20191222,\"8576\":20201231,\"8590\":20210421,\"8629\":20201119,\"8786\":20200201,\"8813\":20210212,\"8842\":20191019,\"8857\":20210413,\"8878\":20201211,\"9057\":20210324,\"9059\":20200322,\"9147\":20210406,\"9173\":20210504,\"9187\":20210226,\"9196\":20191123,\"9246\":20200125,\"9265\":40382323,\"9404\":20200112,\"9405\":20191228,\"9445\":20210519,\"9455\":20191102,\"9520\":20201213,\"9535\":20210225,\"9540\":20191221,\"9569\":20210115,\"9584\":20210511,\"9618\":20210219,\"9654\":20201221,\"9681\":20200308,\"9709\":20200814,\"9734\":20201013,\"9784\":20200101,\"9840\":20200307,\"10023\":20200410,\"10075\":20210430,\"10125\":20210415,\"10148\":20201117,\"10205\":20210217,\"10243\":20200314,\"10264\":20201118,\"10268\":20201204,\"10402\":20201104,\"10403\":20200118,\"10441\":20201214,\"10454\":20200111,\"10456\":20210312,\"10617\":20191110,\"10718\":20201026,\"10749\":20191129,\"10776\":20210218,\"10811\":20201201,\"10855\":20200430,\"10891\":20210301,\"10992\":20200514,\"11034\":20210505,\"11045\":20210325,\"11155\":20210330,\"11178\":20210414,\"11353\":20210517,\"11390\":20210205,\"11540\":20210322,\"11563\":20201209,\"11607\":20201012,\"11630\":20210427,\"11909\":20200217,\"11959\":20201208,\"12005\":20200828,\"12072\":20201007,\"12142\":20200831,\"12245\":20210323,\"12259\":20210401,\"12310\":20201218,\"12332\":20210331,\"12480\":20200917,\"12532\":40402237,\"12585\":20210114,\"12597\":20201215,\"12677\":20200928,\"12713\":20201103,\"12907\":20210510,\"12913\":20201116,\"13054\":20210315,\"13090\":20190803,\"13114\":20201203,\"13128\":20201207,\"13199\":20210305,\"13249\":20200512,\"13286\":20200626,\"13413\":20210405,\"13539\":20201110,\"13559\":20210506,\"13601\":20210318,\"13687\":20210416,\"13707\":20210520,\"13717\":20200812,\"13782\":20210309,\"13813\":20200824,\"13840\":20210408,\"13970\":20200511,\"13991\":20210507,\"14019\":20200730,\"14092\":20210223,\"14133\":20210407,\"14137\":20200427,\"14155\":20210303,\"14248\":20201120,\"14260\":20200722,\"14303\":20210208,\"14337\":20210317,\"14379\":20201111,\"14383\":20200901,\"14436\":20210524,\"14467\":20210319,\"14509\":20210521,\"14524\":20200715,\"14533\":20200810,\"14590\":20210308,\"14667\":20210224,\"14738\":20200424,\"14739\":20200528,\"14780\":20200724,\"14800\":20200507,\"14891\":20201102,\"14955\":20210210,\"14970\":20201125,\"14978\":20200807,\"15011\":20210111,\"15099\":20200422,\"15165\":20200923,\"15186\":20201019,\"15241\":20200728,\"15328\":20200720,\"15356\":20200904,\"15483\":20200827,\"15572\":20200714,\"15631\":20201202,\"15704\":20200721,\"15711\":20210302,\"15812\":20210125,\"15874\":20200602,\"15908\":20200821,\"15939\":20200717,\"16044\":20200805,\"16166\":20200515,\"16182\":20200420,\"16266\":20200930,\"16296\":20201006,\"16321\":20200615,\"16455\":20201023,\"16463\":20200421,\"16466\":20210120,\"16484\":20210209,\"16572\":20201030,\"16596\":20200911,\"16613\":20200508,\"16621\":20190809,\"16622\":20200529,\"16624\":20210201,\"16636\":20210202,\"16715\":20200710,\"16737\":20201016,\"16769\":20210113,\"16924\":20201230,\"16930\":20200817,\"16941\":20210503,\"17014\":40401809,\"17115\":20210216,\"17173\":20200825,\"17255\":20210121,\"17289\":20200630,\"17307\":20200731,\"17364\":20201029,\"17431\":20191231,\"17451\":20191216,\"17465\":20200429,\"17467\":20201109,\"17519\":20210304,\"17563\":20210316,\"17565\":20201008,\"17730\":20201130,\"17815\":20201105,\"17875\":20200811,\"18008\":20200918,\"18022\":20200409,\"18066\":20200806,\"18106\":20201216,\"18133\":20210513,\"18155\":20210310,\"18198\":20201222,\"18203\":20210126,\"18209\":20200916,\"18250\":20210127,\"18281\":20200819,\"18339\":20191226,\"18361\":20200513,\"18404\":20200716,\"18442\":20200413,\"18468\":20210203,\"18490\":20210129,\"18587\":20200910,\"18651\":20200501,\"18697\":20190830,\"18765\":20210108,\"18815\":20210104,\"18824\":20191127,\"18827\":20200729,\"18839\":20191121,\"18867\":20200608,\"18891\":20200617,\"18940\":20200527,\"19036\":20191104,\"19067\":20200908,\"19075\":20210204,\"19083\":20191111,\"19111\":20200727,\"19188\":20190805,\"19189\":20200701,\"19239\":20200428,\"19267\":20191115,\"19272\":20210514,\"19495\":20200625,\"19519\":20210419,\"19531\":20200415,\"19629\":20190823,\"19697\":20210211,\"19701\":20200414,\"19944\":20191028,\"19968\":20210122,\"19981\":20200803,\"20008\":20191021,\"20066\":20200423,\"20072\":20200709,\"20106\":20200902,\"20124\":20191125,\"20134\":20210128,\"20233\":20191118,\"20242\":20200909,\"20267\":20200506,\"20342\":20190913,\"20398\":20200706,\"20425\":20201113,\"20449\":20201014,\"20482\":20210106,\"20515\":20200707,\"20542\":20191008,\"20549\":20201015,\"20701\":20201028,\"20768\":20191224,\"20836\":20200124,\"20906\":20200818,\"20919\":20191212,\"20927\":20191120,\"20983\":20201020,\"21040\":20200518,\"21053\":20200826,\"21205\":20210107,\"21242\":20210105,\"21248\":20191025,\"21369\":20200723,\"21391\":20200708,\"21410\":20200522,\"21486\":20201217,\"21578\":20191218,\"21719\":20200713,\"21803\":20201001,\"21809\":20191108,\"21864\":20210112,\"21959\":20200218,\"21963\":20200226,\"21972\":20210311,\"21991\":20200526,\"22013\":20210429,\"22176\":20210119,\"22222\":20200914,\"22253\":40381724,\"22285\":20200224,\"22299\":20200406,\"22305\":20200205,\"22332\":20200922,\"22375\":20191015,\"22399\":20200330,\"22408\":20201106,\"22553\":20191018,\"22628\":20200504,\"22637\":20191105,\"22717\":20190927,\"23000\":20200212,\"23024\":20200611,\"23144\":20191014,\"23227\":20191217,\"23385\":20190906,\"23388\":20200702,\"23396\":20200604,\"23500\":20200624,\"23505\":20191223,\"23541\":20200228,\"23588\":20200609,\"23609\":20200130,\"23627\":20210222,\"23836\":20200416,\"23880\":20200929,\"23931\":20191220,\"24186\":20191011,\"24225\":20191107,\"24262\":20200616,\"24290\":20200505,\"24301\":20200521,\"24327\":20190918,\"24416\":20200304,\"24491\":20190920,\"24623\":20200210,\"24632\":20191230,\"24678\":20200618,\"24742\":20200820,\"24749\":20200219,\"24931\":20200305,\"24971\":20200915,\"25065\":20200813,\"25145\":20200519,\"25399\":20191122,\"25456\":20190925,\"25482\":20200610,\"25501\":20200204,\"25691\":20191114,\"25707\":20200127,\"25731\":20191202,\"25751\":20190919,\"25829\":20200302,\"25866\":20200129,\"25903\":20201112,\"25932\":20191206,\"25980\":20190821,\"26062\":20191022,\"26185\":20190826,\"26234\":20191016,\"26267\":20201022,\"26283\":20191030,\"26338\":20200612,\"26420\":20200327,\"26425\":20200213,\"26522\":20200206,\"26582\":20190910,\"26686\":20190917,\"26752\":20200207,\"26787\":20191024,\"26914\":20200128,\"26927\":20200605,\"27084\":20200225,\"27144\":20190924,\"27164\":20200116,\"27189\":20200601,\"27193\":20190812,\"27210\":20191203,\"27241\":20200211,\"27259\":20191211,\"27343\":20200320,\"27492\":20200417,\"27555\":20191227,\"27567\":20200629,\"27781\":20191010,\"27801\":20200114,\"27931\":20200121,\"28073\":20191219,\"28285\":20191101,\"28327\":20200221,\"28345\":20191119,\"28561\":20190916,\"28640\":20200203,\"28652\":20201002,\"28680\":20191031,\"28703\":20200603,\"28920\":20200113,\"28953\":20200623,\"29026\":20200123,\"29090\":20200131,\"29189\":20190815,\"29225\":20190807,\"29379\":20190816,\"29461\":20200326,\"29714\":20191210,\"29979\":20191023,\"29998\":20190903,\"30131\":20200407,\"30142\":20200924,\"30242\":20190822,\"30489\":20190905,\"30529\":20200220,\"30669\":20200408,\"30750\":20191004,\"30799\":20191205,\"30943\":20200921,\"31085\":20191209,\"31222\":20200925,\"31304\":20200520,\"31429\":20200903,\"31451\":20190911,\"31470\":20190828,\"31548\":20200311,\"31564\":20191106,\"31694\":20190820,\"31859\":20190813,\"31965\":20200109,\"32008\":20191112,\"32029\":20200622,\"32407\":20200214,\"32631\":20190909,\"32656\":20191113,\"32674\":20200103,\"32709\":20200313,\"32728\":20200107,\"32911\":20190808,\"33501\":20190926,\"33959\":20200115,\"33967\":20200403,\"34014\":20200319,\"34040\":20190802,\"34134\":20191003,\"34329\":20200122,\"34571\":20190904,\"34681\":20191213,\"34745\":20200227,\"34915\":20201021,\"35007\":20190819,\"35653\":20200401,\"35711\":20191002,\"35780\":20200110,\"35851\":20200117,\"35939\":20190806,\"36101\":20200102,\"36118\":20200323,\"36339\":20191029,\"36376\":20191126,\"36454\":20190912,\"36691\":20200316,\"36780\":20200306,\"37408\":20200619,\"37707\":20200303,\"37783\":20191009,\"37927\":20200106,\"38550\":20190930,\"39485\":20200317,\"39533\":20191017,\"39534\":20190827,\"39638\":20200402,\"39841\":20190829,\"40406\":20191204,\"41162\":20190814,\"41496\":20200318,\"41641\":20191007,\"42865\":20200312,\"43790\":20200309,\"46162\":20191001,\"46398\":20200325,\"47684\":20200108,\"51926\":20200331,\"52764\":20200310,\"72060\":20200324}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(webeventsdf.groupBy(\"RequestDateKey\").count())"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"summary"
									],
									"values": [
										"summary"
									],
									"yLabel": "summary",
									"xLabel": "summary",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"summary\":{\"count\":1,\"max\":1,\"mean\":1,\"min\":1,\"stddev\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(webeventsdf.describe())"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"summary"
									],
									"values": [
										"summary"
									],
									"yLabel": "summary",
									"xLabel": "summary",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"summary\":{\"25%\":1,\"50%\":1,\"75%\":1,\"count\":1,\"max\":1,\"mean\":1,\"min\":1,\"stddev\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(webeventsdf.summary())"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"source": [
							"webeventspandas = webeventsdf.toPandas()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"clientswebeventsdf = webeventsdf.where(\"LoginLevel == 'Client'\")"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"WebEventRequestKey"
									],
									"values": [
										"WebEventKey"
									],
									"yLabel": "WebEventKey",
									"xLabel": "WebEventRequestKey",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"WebEventKey\":{\"-9223372036809847000\":-239807672957103640000,\"-9223372036809848000\":-147573952588985480000,\"-9223372036810189000\":-267477789067558500000,\"-9223372036810313000\":-304371277214820700000,\"-9223372036810441000\":-387381625546117600000,\"-9223372036810916000\":-258254417030768430000,\"-9223372036810917000\":-267477789067593880000,\"-9223372036811390000\":-507285462024722600000,\"-9223372036811435000\":-857773599423634600000,\"-9223372036812023000\":-793209995166004800000,\"-9223372036812150000\":-396604997583002300000,\"-9223372036812677000\":-239807672957194600000,\"-9223372036813103000\":-313594649251703500000,\"-9223372036813104000\":-184467440736295700000,\"-9223372036813805000\":-267477789067650920000,\"-9223372036815655000\":-258254417030892300000,\"-9223372036815670000\":-221360928883618500000,\"-9223372036816686000\":-396604997583195600000,\"-9223372036817291000\":-276701161104566800000,\"-9223372036817845000\":-424275113693719760000,\"-9223372036818891000\":-156797324625945530000,\"-9223372036819162000\":-258254417030989800000,\"-9223372036819462000\":-442721857767433700000,\"-9223372036820339000\":-387381625546539600000,\"-9223372036820944000\":-498062089988441700000,\"-9223372036823905000\":-184467440736512840000,\"-9223372036824223000\":-258254417031127270000,\"-9223372036825491000\":-36893488147308230000}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(clientswebeventsdf)"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"BaseRoute"
									],
									"values": [
										"count"
									],
									"yLabel": "count",
									"xLabel": "BaseRoute",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"count\":{\"\":7,\"/reportdata/ireportdata/generatereportsimple2\":9,\"Authorization/Databases\":1,\"Authorization/User\":1342,\"Authorization/User/Gravatar\":543,\"Authorization/User/Integrations/eMoney\":8,\"Authorization/User/Privileges\":6,\"Authorization/User/Privileges/clientPortalAdmin\":663,\"Authorization/User/Verbose\":21,\"Global/ServiceTeams\":12,\"Integrations/CloudStorage/AdvisorShared/Browse/\":11,\"Integrations/CloudStorage/AdvisorShared/Browse/OrionFolder/28 - Cioffi, Krista/Shared/Taxes\":1,\"Integrations/CloudStorage/AdvisorShared/Browse/OrionFolder/325 - Reed%2C Dima%2C Jim %26 Angela/Shared/Taxes\":1,\"Integrations/CloudStorage/AdvisorShared/Browse/OrionFolder/69 - Groen%2C Doug %26 Ankur/Shared/Taxes\":1,\"Integrations/CloudStorage/AdvisorShared/Browse/OrionFolder/69 - Groen%2C Doug %26 Ankur/Shared/Taxes/UPLOAD TAX DOCUMENTS HERE\":1,\"Integrations/CloudStorage/AdvisorShared/Data/OrionFolder/120 - Schmidley%2C Campbell%2C Richard %26 Cindy/Shared/Taxes/<EntityId>/2018 W-2 - KLA-Tencor - Richard Schmidley.pdf\":1,\"Integrations/CloudStorage/AdvisorShared/Data/OrionFolder/325 - Reed%2C Dima%2C Jim %26 Angela/Shared/Taxes/<EntityId>/2018 Angela Dima W-2 - IBM.pdf\":1,\"Integrations/CloudStorage/AdvisorShared/Data/OrionFolder/325 - Reed%2C Dima%2C Jim %26 Angela/Shared/Taxes/<EntityId>/2018 Dima Reed IRS Adjusted Refund.pdf\":1,\"Integrations/CloudStorage/AdvisorShared/Data/OrionFolder/69 - Groen%2C Doug %26 Ankur/Shared/Taxes/UPLOAD TAX DOCUMENTS HERE/Gilroy Gardens.heic\":1,\"Integrations/CloudStorage/AdvisorShared/Data/OrionFolder/69 - Groen%2C Doug %26 Ankur/Shared/Taxes/UPLOAD TAX DOCUMENTS HERE/Gilroy Gardens.mov\":1,\"Integrations/CloudStorage/AdvisorShared/Data/OrionFolder/69 - Groen%2C Doug %26 Ankur/Shared/Taxes/UPLOAD TAX DOCUMENTS HERE/GivingTreeDonation.pdf\":1,\"Integrations/CloudStorage/Dropbox/Browse/\":2,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe 2018 W-2.pdf\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe Auto Policy 2019.pdf\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe Chase Mortgage Jul 2019.pdf\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe Fin Plan Docs v1 080119.xlsx\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe Homeowners Policy 2019.pdf\":3,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe Paystub.pdf\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lloe Savings Jun 2019.pdf\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Loe_2018_FINAL Tax Return.pdf\":1,\"Integrations/CloudStorage/Dropbox/Data/Lorie Loe/Lorie Loe December 2018.MP3\":3,\"Integrations/CloudStorage/List\":34,\"Integrations/Integrations/CloudStorage/CloudStorage/AdvisorShared/AdvisorShared/Data/Data/OrionFolder/OrionFolder/69 - Groen, Doug & Ankur/69 - Groen, Doug & Ankur/Shared/Shared/Taxes/Taxes/UPLOAD TAX DOCUMENTS HERE/UPLOAD TAX DOCUMENTS HERE/OhioResponse2017.PDF/OhioResponse2017.PDF\":1,\"Integrations/Integrations/CloudStorage/CloudStorage/AdvisorShared/AdvisorShared/Data/Data/OrionFolder/OrionFolder/69 - Groen, Doug & Ankur/69 - Groen, Doug & Ankur/Shared/Shared/Taxes/Taxes/UPLOAD TAX DOCUMENTS HERE/UPLOAD TAX DOCUMENTS HERE/PayneHSCDonationSept2019.pdf/PayneHSCDonationSept2019.pdf\":1,\"Integrations/MoneyGuidePro/Configuration/Client\":13,\"Integrations/MoneyGuidePro/InsurancePolicies/Client/<EntityId>\":3,\"Integrations/MoneyGuidePro/MonteCarloMeter/Client/<EntityId>\":2,\"Integrations/MoneyGuidePro/Networth/Client/<EntityId>\":2,\"Integrations/MoneyGuidePro/PlanSummary/Client/<EntityId>\":15,\"Portfolio/Accounts\":40,\"Portfolio/Accounts/<EntityId>/NetAmountInvested\":19,\"Portfolio/Accounts/RmdCalculation\":8,\"Portfolio/Assets\":41,\"Portfolio/Clients/<EntityId>\":581,\"Portfolio/Clients/<EntityId>/BalanceSheet/ByAllAccounts/Refresh\":542,\"Portfolio/Clients/<EntityId>/Calculate/InceptionDate\":546,\"Portfolio/Clients/<EntityId>/Documents\":502,\"Portfolio/Clients/<EntityId>/Documents/<EntityId>/Download\":76,\"Portfolio/Clients/<EntityId>/NetAmountInvested\":37,\"Portfolio/Clients/PortfolioTree\":6,\"Portfolio/Clients/Simple\":660,\"Portfolio/Transactions\":40,\"Reporting/Activity/Accounts/<EntityId>/Value/<Date>\":59,\"Reporting/Activity/Clients/<EntityId>/Value/<Date>\":431,\"Reporting/Activity/Holdings\":1246,\"Reporting/Activity/Holdings/Unmanaged\":535,\"Reporting/Activity/Registrations/<EntityId>/Value/<Date>\":5,\"Reporting/Calculate/Verbose\":22,\"Reporting/Notifications/SubscriptionWithDestination/NotificationSubscriptions\":21,\"Reporting/Performance/DrillDownSummary\":1232,\"Reporting/Reports\":12,\"Reporting/Reports/<EntityId>/Calculate/InceptionDate\":6,\"Reporting/Reports/<EntityId>/Generate\":23,\"Reporting/Reports/<EntityId>/Parameters\":27,\"Reporting/Reports/<EntityId>/ReportInboxes\":7,\"Reporting/Reports/<EntityId>/Run/<Guid>/False/Excel\":3,\"Reporting/Reports/<EntityId>/Run/<Guid>/False/PDF\":17,\"Reporting/StaticFiles/ClientPortalStatic\":87,\"Reporting/VideoStatements\":83,\"Security/Profiles/Search/G\":1,\"Security/Profiles/Search/Gr\":1,\"Security/Profiles/Search/Gra\":1,\"Security/Rights/ASSISTHELP\":555,\"Security/Rights/CLIENTPORTALTASKS\":22,\"Settings/CustomSettings\":663,\"Settings/CustomSettings/default-landing-page\":446,\"Settings/CustomSettings/theme-primary-bg-color\":534,\"Settings/Database/EntityOptions/Code/69EXCLUDEI\":6,\"Settings/Database/EntityOptions/Code/69HIDEEXCE\":18,\"Settings/Database/EntityOptions/Code/69INCLUDEA\":661,\"Settings/Database/EntityOptions/Code/69PRIVILEG\":6,\"Settings/Database/EntityOptions/Code/MGMTSTYLENAME\":661,\"Settings/Database/EntityOptions/Code/RISKCATEGORYNAME\":660,\"Settings/EntityOptions/Database/Code/69ENABLECL\":663,\"Settings/EntityOptions/Database/Code/69MESSAGER\":3,\"Settings/EntityOptions/Database/Code/69OCLOGO\":6,\"Settings/UserOptions/main_menu_apps\":6,\"Settings/UserOptions/notification_settings\":6,\"Settings/UserOptions/report_params_1372\":2,\"Settings/WebAcknowledgements\":661,\"Utility/Logging/PageView/app/accounts\":112,\"Utility/Logging/PageView/app/advisor\":1,\"Utility/Logging/PageView/app/commentary\":1,\"Utility/Logging/PageView/app/portfolio/activity\":9,\"Utility/Logging/PageView/app/portfolio/performance\":16,\"Utility/Logging/PageView/documents/reports\":13,\"Utility/Logging/PageView/documents/statements\":102,\"Utility/Logging/PageView/login\":48,\"Utility/Logging/PageView/planning/goals\":2,\"Utility/Logging/PageView/planning/insurance\":3,\"Utility/Logging/PageView/planning/networth\":2,\"Utility/Logging/PageView/planning/summary\":15,\"Utility/Logging/PageView/portfolio/activity\":48,\"Utility/Logging/PageView/portfolio/holdings\":44,\"Utility/Logging/PageView/portfolio/overview\":461,\"Utility/Logging/PageView/portfolio/performance\":238,\"Utility/Logging/PageView/reports/prompt/<EntityId>\":6,\"Utility/Logging/PageView/tools/rmd\":9,\"Utility/Logging/PageView/updates/commentary\":19,\"Utility/Logging/StatementDownload/2016 - 4Q Quarterly Performance Report\":1,\"Utility/Logging/StatementDownload/2018 Year End Statements\":5,\"Utility/Logging/StatementDownload/2019 - 1st Quarter Statement\":1,\"Utility/Logging/StatementDownload/2019 - 2nd Quarter Statement\":7,\"Utility/Logging/StatementDownload/2019 - First Quarter Report\":1,\"Utility/Logging/StatementDownload/2019 - July Statement\":7,\"Utility/Logging/StatementDownload/2019 - June Statement\":7,\"Utility/Logging/StatementDownload/2019 - Q2 Quarterly Custodial Statement\":5,\"Utility/Logging/StatementDownload/2019 1Q Performance Report\":3,\"Utility/Logging/StatementDownload/2019 2Q Performance Report\":5,\"Utility/Logging/StatementDownload/2019-08 August Monthly Statement\":1,\"Utility/Logging/StatementDownload/2Q2019 Quarter Report - SO West\":1,\"Utility/Logging/StatementDownload/First Quarter 2019 Report\":3,\"Utility/Logging/StatementDownload/June 2019 - Joint - 912013323\":2,\"authorization/databases\":2,\"authorization/user\":25305,\"authorization/user/gravatar\":9622,\"authorization/user/integrations/emoney\":40,\"authorization/user/privileges\":113,\"authorization/user/privileges/clientportaladmin\":11954,\"authorization/user/serviceteam\":111,\"authorization/user/verbose\":250,\"blogging/blogs/<EntityId>\":6,\"blogging/blogs/<entityid>\":162,\"blogging/blogs/simple\":505,\"blogging/newsfeed\":57,\"blogging/newsfeed/summary\":60,\"fuse/config/integrations/<entityid>/smallimage\":4,\"integrations/cloudstorage/advisorshared/browse/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here\":8,\"integrations/cloudstorage/advisorshared/browse/orionfolder/101 - mccarthy, michael/shared/taxes/upload tax documents here\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/18 - bhagat, vivek/shared/taxes\":10,\"integrations/cloudstorage/advisorshared/browse/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here\":7,\"integrations/cloudstorage/advisorshared/browse/orionfolder/18 - bhagat, vivek/shared/vb upload\":19,\"integrations/cloudstorage/advisorshared/browse/orionfolder/197 - wright, david/shared/taxes\":4,\"integrations/cloudstorage/advisorshared/browse/orionfolder/197 - wright, david/shared/taxes/<entityid>\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/197 - wright, david/shared/taxes/upload tax documents here\":4,\"integrations/cloudstorage/advisorshared/browse/orionfolder/204 - eremko, matthew/shared/taxes\":8,\"integrations/cloudstorage/advisorshared/browse/orionfolder/204 - eremko, matthew/shared/taxes/<entityid>\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/204 - eremko, matthew/shared/taxes/upload tax documents here\":7,\"integrations/cloudstorage/advisorshared/browse/orionfolder/207 - sekhon, harjit/shared/estate documents\":3,\"integrations/cloudstorage/advisorshared/browse/orionfolder/207 - sekhon, harjit/shared/taxes\":3,\"integrations/cloudstorage/advisorshared/browse/orionfolder/210 - esber, paul/shared/taxes\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/216 - mora, edgar/shared/taxes/<entityid>\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/266 - monahelis, jasmine/shared/taxes\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/266 - monahelis, jasmine/shared/taxes/<entityid>\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/266 - monahelis, jasmine/shared/taxes/upload tax documents here\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/28 - cioffi, krista/shared/taxes\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/28 - cioffi, krista/shared/taxes/upload tax documents here\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/29 - esber, laura/shared/taxes\":3,\"integrations/cloudstorage/advisorshared/browse/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here\":3,\"integrations/cloudstorage/advisorshared/browse/orionfolder/322 - hales mora, wendy/shared/taxes\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/383 - hayes, mitchell/shared/taxes\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/383 - hayes, mitchell/shared/taxes/2011-2016\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/384 - hayes, adelyn/shared/taxes\":1,\"integrations/cloudstorage/advisorshared/browse/orionfolder/72 - hall, carol/shared/taxes\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/73 - hamel, jeannette/shared/estate documents\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/73 - hamel, jeannette/shared/taxes\":4,\"integrations/cloudstorage/advisorshared/browse/orionfolder/73 - hamel, jeannette/shared/taxes/upload tax documents here\":2,\"integrations/cloudstorage/advisorshared/browse/orionfolder/96 - martin, cynthia/shared/taxes/<entityid>\":2,\"integrations/cloudstorage/advisorshared/data/1 2.jpg\":1,\"integrations/cloudstorage/advisorshared/data/1.jpg\":1,\"integrations/cloudstorage/advisorshared/data/2019 debbie payroll.pdf\":2,\"integrations/cloudstorage/advisorshared/data/2019 taxes.pdf\":1,\"integrations/cloudstorage/advisorshared/data/2020info/2020sep15adp.pdf\":1,\"integrations/cloudstorage/advisorshared/data/allisonw2s/2018w2.pdf\":2,\"integrations/cloudstorage/advisorshared/data/cindy schwab brokerage account 1099compositeandyearendsummary20190123202366.pdf\":1,\"integrations/cloudstorage/advisorshared/data/deductions medical.pdf\":1,\"integrations/cloudstorage/advisorshared/data/golden 1 mortgage.pdf\":2,\"integrations/cloudstorage/advisorshared/data/jacob utma 1099compositeandyearendsummary20190123205328.pdf\":1,\"integrations/cloudstorage/advisorshared/data/james signature page_20200326_0001.pdf\":1,\"integrations/cloudstorage/advisorshared/data/james' info form_20200324_0001.pdf\":1,\"integrations/cloudstorage/advisorshared/data/kla- deferred comp.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/1098 marriott mortgage int\":8,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/1marriott.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/2019 form ssa-1099 social security.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/3marriott.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/deductions medical.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1095-b health coverage.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1098 nfcu line of credit.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1098 nfcu tucson house.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1099-int nfcu interest income 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1099r 2019 01 03 20 9195.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1099r-yr 2019 acct-9195.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form 1099r-yr-2019 acct-1906.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/form1099r opm.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/lendkey_2019_1098e.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/tubac property tax notice.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/100 - mccarthy, john/shared/taxes/upload tax documents here/vehicle registration fees - az.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/101 - mccarthy, michael/shared/taxes/schwab gain-loss report 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/<entityid>/bhag2396_16i_cc.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/1095c employee statement - 2019.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 1095b_1.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 bofa_1.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 chase_1.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 schwab 1099composite 5392.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 schwab taxforms 5785.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 schwab taxforms 7778.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 schwab yearendgainloss 2108.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 schwab yearendgainloss 4795.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 transaction report.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 transaction report.xlsx\":2,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 w2_1.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/taxes/upload tax documents here/2019 wells fargo_1.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/vb upload/2020 refi - disclosure.zip\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/vb upload/2020-08-05 logi rsu sale.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/vb upload/equateplus -statement 2770432 2020-09-17 19_38_07.pdf\":2,\"integrations/cloudstorage/advisorshared/data/orionfolder/18 - bhagat, vivek/shared/vb upload/etrade brokerage trade confirmation - xxxx5108 - 20200609.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/1099 c.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/1099 d.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/1099compositeandyearendsummary20190207204381.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/1099r20190103201633.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/star one 2019 1099.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/statement-2019-11-30.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/197 - wright, david/shared/taxes/upload tax documents here/statement-2019-12-31.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/204 - eremko, matthew/shared/taxes/upload tax documents here/2019 itemized tax deductions.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/204 - eremko, matthew/shared/taxes/upload tax documents here/estate plan cost.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/204 - eremko, matthew/shared/taxes/upload tax documents here/trust.pdf\":4,\"integrations/cloudstorage/advisorshared/data/orionfolder/207 - sekhon, harjit/shared/estate documents/harjit and vick's living trust ( poa, healthcare, hipaa, will) - 2017 february.pdf\":2,\"integrations/cloudstorage/advisorshared/data/orionfolder/207 - sekhon, harjit/shared/estate documents/marital agreement - 2016 august.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/207 - sekhon, harjit/shared/estate documents/the vickramajit s. sandhu irrevocable trust - 2012 may.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/450 prop tax 2019.png\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/etrade - ty 2019-1099-consolidated-1391.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/gmail - ca dmv receipt.pdf\":2,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/morgan stan - de minimis.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/scc tax - dec 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/schwab - taxforms0115206575.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/210 - esber, paul/shared/taxes/upload tax documents here/starone - 10154_200128083839_4311010080137.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/<entityid>/2019 1099-sa hsa optum bank - mora edgar.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/1099 20.pdf\":7,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/citibank payee spending 2019 emh.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/cm - 12 month cash flow 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/jeep reg 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/sjc - 1099 for 2019.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/sjc 1099 int.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/sjc rental cm - 12 month cash flow 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/216 - mora, edgar/shared/taxes/upload tax documents here/statefarm rental sjc.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/266 - monahelis, jasmine/shared/taxes/upload tax documents here/clearbit w2.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/266 - monahelis, jasmine/shared/taxes/upload tax documents here/escrow statement.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/28 - cioffi, krista/shared/taxes/upload tax documents here/img_4717.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/28 - cioffi, krista/shared/taxes/upload tax documents here/img_4718.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/28 - cioffi, krista/shared/taxes/upload tax documents here/img_4719.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/28 - cioffi, krista/shared/taxes/upload tax documents here/img_4722.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/1099compositeandyearendsummary20190206205237.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/1099r20190102208905.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/2019 - 1095-c - laura esber.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/laura esber - 1099-r - 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/laura esber - w-2 - 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/omb no. 1545-1380 mortgage interest statement 2019.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/29 - esber, laura/shared/taxes/upload tax documents here/yearendgainlossreportingimclient20190117206079.pdf\":3,\"integrations/cloudstorage/advisorshared/data/orionfolder/322 - hales mora, wendy/shared/taxes/<entityid>/ca tax refund.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/322 - hales mora, wendy/shared/taxes/<entityid>/employer health insurance_1095c.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/322 - hales mora, wendy/shared/taxes/<entityid>/mortgage interest_heloc.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/322 - hales mora, wendy/shared/taxes/<entityid>/student loan interest.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/322 - hales mora, wendy/shared/taxes/<entityid>/wendy_w2.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/322 - hales mora, wendy/shared/taxes/taxes.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/73 - hamel, jeannette/shared/taxes/upload tax documents here/1098 cashcall mortgage 2019.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/73 - hamel, jeannette/shared/taxes/upload tax documents here/2018-2019 property taxes.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/73 - hamel, jeannette/shared/taxes/upload tax documents here/2019-2020 property taxes.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/73 - hamel, jeannette/shared/taxes/upload tax documents here/ssa-1099 2019.jpg\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/96 - martin, cynthia/shared/taxes/<entityid>/2019 flagstar.pdf\":1,\"integrations/cloudstorage/advisorshared/data/orionfolder/96 - martin, cynthia/shared/taxes/<entityid>/bsm w2 2019.pdf\":1,\"integrations/cloudstorage/advisorshared/data/schwab saving 1099.pdf\":1,\"integrations/cloudstorage/advisorshared/data/sst k-1 for 2019_20200316_0001.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/abstract and certification of trust.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/declaration of trust lindsley family living trust.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/durable power of attorney tim.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/exhibit b.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/letter of last instruction tim.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/will of chris.pdf\":1,\"integrations/cloudstorage/advisorshared/data/trust/will of tim.pdf\":1,\"integrations/cloudstorage/advisorshared/data/vb upload/191004 pay stub.pdf\":2,\"integrations/cloudstorage/advisorshared/data/vb upload/current statement 2770432 2019-10-14 02_48_23.pdf\":1,\"integrations/cloudstorage/box/redirect\":2,\"integrations/cloudstorage/dropbox/credentials\":1,\"integrations/cloudstorage/list\":750,\"integrations/cloudstorage/sharefile/browse/\":8,\"integrations/emoney/sso/clientportal/<entityid>\":13,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/estate documents/estate documents\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/<entityid>/<entityid>\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/17 - berry, george & jill/17 - berry, george & jill/shared/shared/taxes/taxes/<entityid>/<entityid>\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/194 - phillips, paul & linda/194 - phillips, paul & linda/shared/shared/taxes/taxes\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/194 - phillips, paul & linda/194 - phillips, paul & linda/shared/shared/taxes/taxes/<entityid>/<entityid>\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes\":7,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":8,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/patricia geniesse/patricia geniesse\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/2020info/2020info\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/family balance sheets/family balance sheets\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/taxes/taxes\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/277 - lindsley, christine & tim/277 - lindsley, christine & tim/shared/shared/commonwealth statements/commonwealth statements\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/282 - zirkel, steve & sara/282 - zirkel, steve & sara/shared/shared/taxes/taxes\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/282 - zirkel, steve & sara/282 - zirkel, steve & sara/shared/shared/taxes/taxes/<entityid>/<entityid>\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes\":10,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/<entityid>/<entityid>\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":18,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/373 - madriaga-berry, berry, edita & charles/373 - madriaga-berry, berry, edita & charles/shared/shared/estate documents/estate documents\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/<entityid>/<entityid>\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/40 - davis, don & claire/40 - davis, don & claire/shared/shared/taxes/taxes\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/40 - davis, don & claire/40 - davis, don & claire/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/405 - diamond, gelczis, mitchell & virginia/405 - diamond, gelczis, mitchell & virginia/shared/shared/account statements/account statements\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/405 - diamond, gelczis, mitchell & virginia/405 - diamond, gelczis, mitchell & virginia/shared/shared/taxes/taxes\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/estate documents/estate documents\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/<entityid>/<entityid>\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/estate documents/estate documents\":7,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes\":11,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/<entityid>/<entityid>\":9,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/estate documents/estate documents\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes\":14,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":12,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/<entityid>/<entityid>\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/69 - groen, doug & ankur/69 - groen, doug & ankur/shared/shared/taxes/taxes\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes\":12,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/browse/browse/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>\":11,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1095-a1.jpg/1095-a1.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1095-a2.jpg/1095-a2.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2018-2019propertytax.jpg/2018-2019propertytax.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2018-iracontrib-steve1.jpg/2018-iracontrib-steve1.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 ally bank form 1099-int.pdf/2019 ally bank form 1099-int.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019-2020propertytax.jpg/2019-2020propertytax.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2108-iracontrib-grace.jpg/2108-iracontrib-grace.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/carefund-1099-g.jpg/carefund-1099-g.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/chevreg.jpg/chevreg.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/mcnerney 2019 charitable contributions .doc/mcnerney 2019 charitable contributions .doc\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/quicken-1098.jpg/quicken-1098.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/102 - mcnerney, grace & steve/102 - mcnerney, grace & steve/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/toyreg.jpg/toyreg.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/<entityid>/<entityid>/2018 tax report statement - fidelity - 0797 - schmidley.pdf/2018 tax report statement - fidelity - 0797 - schmidley.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/<entityid>/<entityid>/2018 w-2 - kla-tencor - richard schmidley.pdf/2018 w-2 - kla-tencor - richard schmidley.pdf\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 donation charles schwab charitable gift acct 6527 - schmidley richard.pdf/2019 donation charles schwab charitable gift acct 6527 - schmidley richard.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 form 1095-c employer provided health insurance - schmidley richard.pdf/2019 form 1095-c employer provided health insurance - schmidley richard.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 form 3922 transfer of stock acquired - schmidley richard.pdf/2019 form 3922 transfer of stock acquired - schmidley richard.pdf\":8,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1098_(quicken_loans)-20200103065802421.pdf/1098_(quicken_loans)-20200103065802421.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1098_(quicken_loans)-20200103065914805.pdf/1098_(quicken_loans)-20200103065914805.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019-individual---tod-x83440797-consolidated-form-1099-and-supplemental-information.pdf/2019-individual---tod-x83440797-consolidated-form-1099-and-supplemental-information.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/ca 8879.pdf/ca 8879.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/donations - 2019.xls/donations - 2019.xls\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/irs 8879.pdf/irs 8879.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/new home loan closing summary.pdf/new home loan closing summary.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/2019w2 state carl.pdf/2019w2 state carl.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/1095-c_carl _2019.pdf/1095-c_carl _2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/1098.pdf/1098.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/1099-int.pdf/1099-int.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/1911 property tax.pdf/1911 property tax.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/2019_formw2.pdf/2019_formw2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/2019w2 fed carl.pdf/2019w2 fed carl.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/143 - trujillo, carl & blaine/143 - trujillo, carl & blaine/shared/shared/taxes/taxes/<entityid>/<entityid>/interest income – 1099 – int.pdf/interest income – 1099 – int.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/agfirst.pdf/agfirst.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 ally bank form 1099-int.pdf/2019 ally bank form 1099-int.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/agfirst.pdf/agfirst.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/fulton.pdf/fulton.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/id 1.pdf/id 1.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/uwl.pdf/uwl.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/150 - willett, james & beth/150 - willett, james & beth/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/vehicle tax.pdf/vehicle tax.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/17 - berry, george & jill/17 - berry, george & jill/shared/shared/taxes/taxes/<entityid>/<entityid>/berrygeorgejill_19i_cc.pdf/berrygeorgejill_19i_cc.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1095-b.pdf/1095-b.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1095-c.pdf/1095-c.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/hsa form5498-sa.pdf/hsa form5498-sa.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2-cheryl-heritagebank.pdf/w2-cheryl-heritagebank.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2-cheryl-presidio.pdf/w2-cheryl-presidio.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/web pay confirm.-ca estim tax.pdf/web pay confirm.-ca estim tax.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/192 - whiteside, michael & cheryl/192 - whiteside, michael & cheryl/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/whiteside homes k1.pdf/whiteside homes k1.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/194 - phillips, paul & linda/194 - phillips, paul & linda/shared/shared/taxes/taxes/<entityid>/<entityid>/phillips_paul_linda_19i_cc.pdf/phillips_paul_linda_19i_cc.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 01 12 acura rdx dmv registration renewal.pdf/2019 01 12 acura rdx dmv registration renewal.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 09 21 honda odyssey dmv registration renewal.pdf/2019 09 21 honda odyssey dmv registration renewal.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 10 04 paystub lchang.pdf/2019 10 04 paystub lchang.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 1095-c.pdf/2019 1095-c.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 1099-div american funds, karen.pdf/2019 1099-div american funds, karen.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 1099-div mainstay funds, celeste.pdf/2019 1099-div mainstay funds, celeste.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 1099-div mainstay funds, karen.pdf/2019 1099-div mainstay funds, karen.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 1099-int chase.pdf/2019 1099-int chase.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 california academy of sciences annual family membership.pdf/2019 california academy of sciences annual family membership.pdf\":7,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 california academy of sciences membership.pdf/2019 california academy of sciences membership.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 tax reporting fidelity, karen.pdf/2019 tax reporting fidelity, karen.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 w2 lipo chang.pdf/2019 w2 lipo chang.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/copy of bybenefittype 2019 10 12 export.xlsx/copy of bybenefittype 2019 10 12 export.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/etrade abbv -5786 getsupplementalinformation.pdf/etrade abbv -5786 getsupplementalinformation.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/etrade abbv -5786 tradesdownload.csv/etrade abbv -5786 tradesdownload.csv\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/etrade abbv -5786 ty 2019-1099 consolidated.pdf/etrade abbv -5786 ty 2019-1099 consolidated.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/receipt isabelle deposit 2019.pdf/receipt isabelle deposit 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/taxablegldownload.csv/taxablegldownload.csv\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/tradesdownload.csv/tradesdownload.csv\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/estate documents/estate documents/debra geniesse pour over will.pdf/debra geniesse pour over will.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/estate documents/estate documents/paul s. and debra k. geniesse complete estate plan.pdf/paul s. and debra k. geniesse complete estate plan.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 combined dividend 1099-div geniesse debra.pdf/2019 combined dividend 1099-div geniesse debra.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 combined dividend 1099-div geniesse paul.pdf/2019 combined dividend 1099-div geniesse paul.pdf\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 geniesse cancelled check for brown county property taxes 2018.pdf/2019 geniesse cancelled check for brown county property taxes 2018.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 geniesse real estate pymt - 1888 -associated bank.pdf/2019 geniesse real estate pymt - 1888 -associated bank.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 geniesse real estate pymt - 1890 - associated bank.pdf/2019 geniesse real estate pymt - 1890 - associated bank.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 geniesse real estate pymt - associated bank - foeller drive.pdf/2019 geniesse real estate pymt - associated bank - foeller drive.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 quicken loans 1098 geniesse paul and debra.pdf/2019 quicken loans 1098 geniesse paul and debra.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 w2 geniesse paul.pdf/2019 w2 geniesse paul.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 wisconsin retirement 1099 r geniesse debra.pdf/2019 wisconsin retirement 1099 r geniesse debra.pdf\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 wisconsin retirement 1099 r geniesse paul.pdf/2019 wisconsin retirement 1099 r geniesse paul.pdf\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/fm. 2019 tax prep fee 2018 geniesse paul and debra.pdf/fm. 2019 tax prep fee 2018 geniesse paul and debra.pdf\":9,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/geniesse paul debra_16i_cc.pdf/geniesse paul debra_16i_cc.pdf\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/geniesse paul debra_17i_cc.pdf/geniesse paul debra_17i_cc.pdf\":7,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/<entityid>/<entityid>/help paul code on taxes - 2019_03_25 allison geniesse ymca roth rollover check.pdf/help paul code on taxes - 2019_03_25 allison geniesse ymca roth rollover check.pdf\":9,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/interest document 2019 taxes.pdf/interest document 2019 taxes.pdf\":10,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/214 - geniesse, paul & debra/214 - geniesse, paul & debra/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/scan.pdf/scan.pdf\":13,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 ca franchise tax board 1099-g.pdf/2019 ca franchise tax board 1099-g.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 charles schwab 1099 form.pdf/2019 charles schwab 1099 form.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 charles schwab yearendgainlossreport.pdf/2019 charles schwab yearendgainlossreport.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 form 3922 transfer of stock.pdf/2019 form 3922 transfer of stock.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 fremont home union bank mortgage interest 1098 form.pdf/2019 fremont home union bank mortgage interest 1098 form.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 jihwan kim w2.pdf/2019 jihwan kim w2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 san ramon home wells fargo mortgage interest 1098 form.pdf/2019 san ramon home wells fargo mortgage interest 1098 form.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 tax file summary for jihwan kim.xlsx/2019 tax file summary for jihwan kim.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 ubs 1099 form.pdf/2019 ubs 1099 form.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019-20 ucsb_fin aid award.pdf/2019-20 ucsb_fin aid award.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/2020info/2020info/2020sep15adp.pdf/2020sep15adp.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/family balance sheets/family balance sheets/2018-12-balance.numbers/2018-12-balance.numbers\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/family balance sheets/family balance sheets/2019-11-balance.xlsx/2019-11-balance.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/taxes/taxes/<entityid>/<entityid>/2.pdf/2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/taxes/taxes/<entityid>/<entityid>/2019_64_james allison and l adams-allison_clientcopy_individual.pdf/2019_64_james allison and l adams-allison_clientcopy_individual.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/taxes/taxes/<entityid>/<entityid>/i-401k 2019 contribution.pdf/i-401k 2019 contribution.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/taxes/taxes/<entityid>/<entityid>/i-401k 2019 contribution:2.pdf/i-401k 2019 contribution:2.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/260 - allison, jim & laurel/260 - allison, jim & laurel/shared/shared/vmwstockvaues.xlsx/vmwstockvaues.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/277 - lindsley, christine & tim/277 - lindsley, christine & tim/shared/shared/commonwealth statements/commonwealth statements/2019-10-31 common wealth both account.pdf/2019-10-31 common wealth both account.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/277 - lindsley, christine & tim/277 - lindsley, christine & tim/shared/shared/commonwealth statements/commonwealth statements/2019-10-31 common wealth chris ira.pdf/2019-10-31 common wealth chris ira.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/277 - lindsley, christine & tim/277 - lindsley, christine & tim/shared/shared/commonwealth statements/commonwealth statements/2019-10-31 common wealth tim ira.pdf/2019-10-31 common wealth tim ira.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/1095c angela and jim.pdf/1095c angela and jim.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 tax notes.pdf/2019 tax notes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/chase 1099-int.pdf/chase 1099-int.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/el dorado property taxes 2nd supplement.pdf/el dorado property taxes 2nd supplement.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/el dorado property taxes 3rd supplement.pdf/el dorado property taxes 3rd supplement.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/el dorado property taxes 4th supplement.pdf/el dorado property taxes 4th supplement.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/finance of america 1098.pdf/finance of america 1098.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/james reed 2019 w2.pdf/james reed 2019 w2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/jim hsa statement 12312019.pdf/jim hsa statement 12312019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/prudential annuity divesture.pdf/prudential annuity divesture.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/roundpoint 2019 mortgage interest.pdf/roundpoint 2019 mortgage interest.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/santa clara county april 2019 property tax.pdf/santa clara county april 2019 property tax.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/<entityid>/<entityid>/wells fargo mortgage interest 2019.pdf/wells fargo mortgage interest 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2647482046.pdf/2647482046.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2716169303.pdf/2716169303.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/alissa reed scholarship 2019.pdf/alissa reed scholarship 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/angela 1099-div.pdf/angela 1099-div.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/angela dima drivers license.pdf/angela dima drivers license.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/james reed compushare 1099 div.pdf/james reed compushare 1099 div.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/325 - reed, dima, jim & angela/325 - reed, dima, jim & angela/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/jim 1099-div.pdf/jim 1099-div.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 ally bank form 1099-int.pdf/2019 ally bank form 1099-int.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 1099-div salvation army.pdf/stokes 2019 1099-div salvation army.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 1099-g.pdf/stokes 2019 1099-g.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 auto registrations.pdf/stokes 2019 auto registrations.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 bclp w2.pdf/stokes 2019 bclp w2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 cisco w2.pdf/stokes 2019 cisco w2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 mortgage interest.jpeg/stokes 2019 mortgage interest.jpeg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 sedgwick w2-1.pdf/stokes 2019 sedgwick w2-1.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 sedgwick w2-2.pdf/stokes 2019 sedgwick w2-2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes 2019 student loan interest.pdf/stokes 2019 student loan interest.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/334 - stokes, domenica & ryan/334 - stokes, domenica & ryan/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/stokes irs 8879.jpeg/stokes irs 8879.jpeg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 1098-e student loan int us dept of education - runfola cristin.pdf/2019 1098-e student loan int us dept of education - runfola cristin.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 expense sheet -  runfola.pdf/2019 expense sheet -  runfola.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 simplepractice sole proprietorship income and expenses - runfola cristin.pdf/2019 simplepractice sole proprietorship income and expenses - runfola cristin.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099-crossover(2019).jpeg/1099-crossover(2019).jpeg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/childcare stock farm ledger.pdf/childcare stock farm ledger.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/dl (updated).jpeg/dl (updated).jpeg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/gain-loss_coinbase(2019).pdf/gain-loss_coinbase(2019).pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/goodwill-receipts.jpg/goodwill-receipts.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/invoice_december 2019.pdf/invoice_december 2019.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/invoice_november 2019.pdf/invoice_november 2019.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/runfola 1095-c.pdf/runfola 1095-c.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/runfola fed loan servicing 1098-e.pdf/runfola fed loan servicing 1098-e.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/runfola pp expense sheet.xlsx/runfola pp expense sheet.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/runfola_private practice_2019_gross income.csv/runfola_private practice_2019_gross income.csv\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/338 - runfola, hofstra, cristin & matt/338 - runfola, hofstra, cristin & matt/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2-quivers.pdf/w2-quivers.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/403b stanford fidelity/403b stanford fidelity/fidelity investments.pdf/fidelity investments.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/403b stanford fidelity/403b stanford fidelity/portfolio positions by account: fidelity investments.pdf/portfolio positions by account: fidelity investments.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1095c.pdf/1095c.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1098 quicken mortgage.pdf/1098 quicken mortgage.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1098t.pdf/1098t.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099 schwab compositeandyearendsummary2019.pdf/1099 schwab compositeandyearendsummary2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099int.pdf/1099int.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099r kelly schwab ira.pdf/1099r kelly schwab ira.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099r kelly schwab roth.pdf/1099r kelly schwab roth.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099r stefan schwab roth.pdf/1099r stefan schwab roth.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/college applications 2019.pdf/college applications 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/donations 2019.pdf/donations 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/eitc stanford.jpg/eitc stanford.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/ucsc tuition for summer term 2019.png/ucsc tuition for summer term 2019.png\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/36 - moeller, cressio-moeller, stefan & kelly/36 - moeller, cressio-moeller, stefan & kelly/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2.pdf/w2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/<entityid>/<entityid>/2018 mukhtar tax return.pdf/2018 mukhtar tax return.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/<entityid>/<entityid>/mukhtarmy_19i_cc.pdf/mukhtarmy_19i_cc.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1095c rr abdul.pdf/1095c rr abdul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1098e student loan -z.pdf/1098e student loan -z.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099 div rr abdul.pdf/1099 div rr abdul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099-div rr yasmin.pdf/1099-div rr yasmin.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099-g ca franchise tax.pdf/1099-g ca franchise tax.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/1099g - edd abdul.pdf/1099g - edd abdul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/boa mortgage.pdf/boa mortgage.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/fidelity 1099r adul.pdf/fidelity 1099r adul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/fidelity 1099r total dist abdul.pdf/fidelity 1099r total dist abdul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/fidelity hsa abdul.pdf/fidelity hsa abdul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/fidelity hsa yasmin.pdf/fidelity hsa yasmin.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/form 3921 - yasmin ul.pdf/form 3921 - yasmin ul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/fsa optum bank- yasmin ul.pdf/fsa optum bank- yasmin ul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/patelco interest.pdf/patelco interest.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/property tax 2019.pdf/property tax 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2 - abdul crestwood.pdf/w2 - abdul crestwood.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2 - yasmin ul.pdf/w2 - yasmin ul.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2- abdul rr.pdf/w2- abdul rr.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/w2-yasmin rr.pdf/w2-yasmin rr.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/380 - mukhtar, abdul & yasmin/380 - mukhtar, abdul & yasmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/wells fargo -interest.pdf/wells fargo -interest.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/40 - davis, don & claire/40 - davis, don & claire/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/davis, donald,2019,us rtn (fed,ca,teq).pdf/davis, donald,2019,us rtn (fed,ca,teq).pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/405 - diamond, gelczis, mitchell & virginia/405 - diamond, gelczis, mitchell & virginia/shared/shared/account statements/account statements/2019_09_30 mitch diamond johnson johnson account statement.pdf/2019_09_30 mitch diamond johnson johnson account statement.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/<entityid>/<entityid>/1098 cal poly cassidy.pdf/1098 cal poly cassidy.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/<entityid>/<entityid>/k1wolles2019.pdf/k1wolles2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 charity wolles.xlsx/2019 charity wolles.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 rental wolles.xlsx/2019 rental wolles.xlsx\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 truckee rental inc:exp.xlsx/2019 truckee rental inc:exp.xlsx\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/<entityid>/<entityid>/dulketiran_17i_cc.pdf/dulketiran_17i_cc.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/<entityid>/<entityid>/dulketiran_19i_cc.pdf/dulketiran_19i_cc.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 hsa 5498 sa .pdf/2019 hsa 5498 sa .pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 tax docs cisco w2 28012020.pdf/2019 tax docs cisco w2 28012020.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 tax docs dmv  02022020.pdf/2019 tax docs dmv  02022020.pdf\":6,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 tax docs humane write off  02022020.pdf/2019 tax docs humane write off  02022020.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2019 tax docs wi income 02022020.pdf/2019 tax docs wi income 02022020.pdf\":4,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/1098_(quicken_loans)-dry creek  2.pdf/1098_(quicken_loans)-dry creek  2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/1098_(quicken_loans)-dry creek.pdf/1098_(quicken_loans)-dry creek.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 1098 loan care llc mortgage int - gill victor.pdf/2019 1098 loan care llc mortgage int - gill victor.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 dmv vehicle registration bmw - gill victor.pdf/2019 dmv vehicle registration bmw - gill victor.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 dmv vehicle registration ktm - gill victor.pdf/2019 dmv vehicle registration ktm - gill victor.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 dmv vehicle registration land rover - gill victor geniesse.pdf/2019 dmv vehicle registration land rover - gill victor geniesse.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 tahoe house property taxes - gill victor.pdf/2019 tahoe house property taxes - gill victor.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/2019 w2.pdf/2019 w2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/campbell house mortgage .pdf/campbell house mortgage .pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/dmv fees 2.pdf/dmv fees 2.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/dmv fees 3.pdf/dmv fees 3.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/dmv fees 4.pdf/dmv fees 4.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/dmv fees.pdf/dmv fees.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/donations 3.pdf/donations 3.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/donations 4 1.pdf/donations 4 1.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/donations 4.pdf/donations 4.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/gill_geniesse_18i_cc.pdf/gill_geniesse_18i_cc.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/greenbay house property taxes.pdf/greenbay house property taxes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/health care coverage.pdf/health care coverage.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/jon house mortgage 1.pdf/jon house mortgage 1.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/jons house property taxes.pdf/jons house property taxes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/tahoe house property taxes.pdf/tahoe house property taxes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/<entityid>/<entityid>/tahoe mortgage .pdf/tahoe mortgage .pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2018 tax gift and dmv fee summary.docx/2018 tax gift and dmv fee summary.docx\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/2020 defered comp.pdf/2020 defered comp.pdf\":3,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/campbell house quicken 1098 .pdf/campbell house quicken 1098 .pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/campbell refi.pdf/campbell refi.pdf\":2,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/consulting 1099 form.pdf/consulting 1099 form.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/dmv fee jag and porsche.pdf/dmv fee jag and porsche.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/kayley health care.pdf/kayley health care.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/mikini property tax.pdf/mikini property tax.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/tax signature gill 2019.pdf/tax signature gill 2019.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/state 2019.jpg/state 2019.jpg\":5,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/doj 2019.jpg/doj 2019.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/hancock 2019.jpg/hancock 2019.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/hancock.jpg/hancock.jpg\":12,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/principal 2019.jpg/principal 2019.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/taxes/taxes/upload tax documents here/upload tax documents here/principal.jpg/principal.jpg\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/69 - groen, doug & ankur/69 - groen, doug & ankur/shared/shared/taxes/taxes/irs payment response 17.pdf/irs payment response 17.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/69 - groen, doug & ankur/69 - groen, doug & ankur/shared/shared/taxes/taxes/walkstarter donation.pdf/walkstarter donation.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/10077 se river street 2019 property taxes.pdf/10077 se river street 2019 property taxes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/1099compositeandyearendsummary20190207204636.pdf/1099compositeandyearendsummary20190207204636.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/19327 la mirada 2019 property taxes.pdf/19327 la mirada 2019 property taxes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/audi q5 2019 registration.pdf/audi q5 2019 registration.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/carolyn hsa 2019 contribution.pdf/carolyn hsa 2019 contribution.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/chase bank 2019 1099034.pdf/chase bank 2019 1099034.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/cobalt boat 2019 registration.pdf/cobalt boat 2019 registration.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/donations 2019.xls/donations 2019.xls\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/ford f250 2019 registration.pdf/ford f250 2019 registration.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/fremont bank 2019 mortgage interest.pdf/fremont bank 2019 mortgage interest.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/irs 2019 interest.pdf/irs 2019 interest.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/kla 2019 deferred income.pdf/kla 2019 deferred income.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/ram 1500 2019 registration.pdf/ram 1500 2019 registration.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/receipt 18827 nighthawk  2019 property taxes.pdf/receipt 18827 nighthawk  2019 property taxes.pdf\":1,\"integrations/integrations/cloudstorage/cloudstorage/advisorshared/advisorshared/data/data/orionfolder/orionfolder/92 - kulczycki, magin, tom & carolyn/92 - kulczycki, magin, tom & carolyn/shared/shared/taxes/taxes/<entityid>/<entityid>/receipt 8573 timaru  2019 property taxes.pdf/receipt 8573 timaru  2019 property taxes.pdf\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/browse/browse/browse/orionfolder/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/shared/archive folder (09-30-2015 & prior)/archive folder (09-30-2015 & prior)/archive folder (09-30-2015 & prior)\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/browse/browse/browse/orionfolder/orionfolder/orionfolder/94 - louis, ramy & jeanette/94 - louis, ramy & jeanette/94 - louis, ramy & jeanette/shared/shared/shared/archive folder (09-30-2015 & prior)/archive folder (09-30-2015 & prior)/archive folder (09-30-2015 & prior)\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/browse/browse/browse/orionfolder/orionfolder/orionfolder/97 - mccarthy, blair & stephanie/97 - mccarthy, blair & stephanie/97 - mccarthy, blair & stephanie/shared/shared/shared/archive folder (09-30-2015 & prior)/archive folder (09-30-2015 & prior)/archive folder (09-30-2015 & prior)\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/120 - schmidley, campbell, richard & cindy/shared/shared/shared/taxes/taxes/taxes/upload tax documents here/upload tax documents here/upload tax documents here/2019-health-savings-account-215683904-form-5498-sa-&-instructions.pdf/2019-health-savings-account-215683904-form-5498-sa-&-instructions.pdf/2019-health-savings-account-215683904-form-5498-sa-&-instructions.pdf\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/199 - chang, lipo & karen/199 - chang, lipo & karen/199 - chang, lipo & karen/shared/shared/shared/taxes/taxes/taxes/upload tax documents here/upload tax documents here/upload tax documents here/g&l_expanded.xlsx/g&l_expanded.xlsx/g&l_expanded.xlsx\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/259 - kim, oh, jihwan & younsu/shared/shared/shared/taxes/taxes/taxes/upload tax documents here/upload tax documents here/upload tax documents here/2019-health-savings-account-218810537-form-1099-sa-&-instructions.pdf/2019-health-savings-account-218810537-form-1099-sa-&-instructions.pdf/2019-health-savings-account-218810537-form-1099-sa-&-instructions.pdf\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/shared/taxes/taxes/taxes/<entityid>/<entityid>/<entityid>/2019 1098 mortgage int statement fremont bank acct 0903 - wolles mark & charmin.pdf/2019 1098 mortgage int statement fremont bank acct 0903 - wolles mark & charmin.pdf/2019 1098 mortgage int statement fremont bank acct 0903 - wolles mark & charmin.pdf\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/406 - wolles, mark & charmin/406 - wolles, mark & charmin/406 - wolles, mark & charmin/shared/shared/shared/taxes/taxes/taxes/<entityid>/<entityid>/<entityid>/2019 1098 mortgage int statement fremont bank acct 0952 - wolles mark & charmin.pdf/2019 1098 mortgage int statement fremont bank acct 0952 - wolles mark & charmin.pdf/2019 1098 mortgage int statement fremont bank acct 0952 - wolles mark & charmin.pdf\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/44 - dulke, tiran, james & cesiah/shared/shared/shared/estate documents/estate documents/estate documents/2019_05_07 dulke-tiran rev trust amd & rest.pdf/2019_05_07 dulke-tiran rev trust amd & rest.pdf/2019_05_07 dulke-tiran rev trust amd & rest.pdf\":9,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/shared/taxes/taxes/taxes/<entityid>/<entityid>/<entityid>/2019 dmv vehicle registration pors & jaguar - gill victor.pdf/2019 dmv vehicle registration pors & jaguar - gill victor.pdf/2019 dmv vehicle registration pors & jaguar - gill victor.pdf\":2,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/57 - gill, geniesse, victor & jodi/shared/shared/shared/taxes/taxes/taxes/<entityid>/<entityid>/<entityid>/2019 greenbay house property taxes - gill victor & geniesse jodi.pdf/2019 greenbay house property taxes - gill victor & geniesse jodi.pdf/2019 greenbay house property taxes - gill victor & geniesse jodi.pdf\":1,\"integrations/integrations/integrations/cloudstorage/cloudstorage/cloudstorage/advisorshared/advisorshared/advisorshared/data/data/data/orionfolder/orionfolder/orionfolder/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/6 - nehring, arnaiz-nehring, brian & christine/shared/shared/shared/taxes/taxes/taxes/<entityid>/<entityid>/<entityid>/2018-19 property tax payment sacramento county - nehring brian & christine.pdf/2018-19 property tax payment sacramento county - nehring brian & christine.pdf/2018-19 property tax payment sacramento county - nehring brian & christine.pdf\":4,\"integrations/moneyguidepro/configuration/client\":228,\"integrations/moneyguidepro/household/<entityid>\":94,\"integrations/moneyguidepro/insurancepolicies/client/<entityid>\":21,\"integrations/moneyguidepro/montecarlometer/client/<entityid>\":55,\"integrations/moneyguidepro/networth/client/<entityid>\":73,\"integrations/moneyguidepro/plansummary/client/<entityid>\":284,\"integrations/moneyguidepro/sso/client/<entityid>\":21,\"integrations/pershing/pershingclientportaldocuments\":190,\"integrations/quovo/connections\":10,\"integrations/quovo/uitoken\":12,\"integrations/riskalyze/clients/<entityid>/token\":1,\"integrations/salemove/cobrowse/siteid\":10034,\"integrations/salemove/orionsiteid\":32,\"integrations/salemove/premierqueues\":38,\"oauth/default.aspx\":18,\"portfolio/accounts\":484,\"portfolio/accounts/<entityid>/netamountinvested\":912,\"portfolio/accounts/newportfolio/byall/pending\":10441,\"portfolio/accounts/rmdcalculation\":105,\"portfolio/assets\":484,\"portfolio/clients\":484,\"portfolio/clients/<entityid>\":10348,\"portfolio/clients/<entityid>/balancesheet\":21,\"portfolio/clients/<entityid>/balancesheet/category\":21,\"portfolio/clients/<entityid>/documents\":8240,\"portfolio/clients/<entityid>/documents/<entityid>/download\":1363,\"portfolio/clients/<entityid>/netamountinvested\":5243,\"portfolio/clients/portfoliotree\":63,\"portfolio/clients/simple\":11859,\"portfolio/clients/simple/search\":6,\"portfolio/registrations/<entityid>/netamountinvested\":94,\"public/requestforgotpassword/steve.zirkel@gmail.com\":1,\"reporting/activity/accounts/<entityid>/value/<date>\":411,\"reporting/activity/clients/<entityid>/value/<date>\":3012,\"reporting/activity/holdings\":9999,\"reporting/activity/registrations/<entityid>/value/<date>\":40,\"reporting/activity/verbose\":82,\"reporting/calculate/dateranges/<date>\":242,\"reporting/fuse/notifications\":112,\"reporting/gainloss/unrealized/drilldownsummary\":43,\"reporting/notifications/subscriptionwithdestination/notificationsubscriptions\":250,\"reporting/performance/drilldownsummary\":14791,\"reporting/portalprototype/allocation\":7073,\"reporting/portaltask\":481,\"reporting/reports\":336,\"reporting/reports/<entityid>/calculate/inceptiondate\":118,\"reporting/reports/<entityid>/parameters\":561,\"reporting/reports/<entityid>/run/<guid>/false/excel\":50,\"reporting/reports/<entityid>/run/<guid>/false/pdf\":477,\"reporting/staticfiles/clientportalstatic\":1520,\"reporting/videostatements\":1349,\"security/profiles\":13512,\"security/profiles/search/a\":1,\"security/profiles/search/au\":1,\"security/profiles/search/aul\":1,\"security/profiles/search/ault\":1,\"security/profiles/search/d\":1,\"security/profiles/search/da\":1,\"security/profiles/search/f\":1,\"security/profiles/search/j\":1,\"security/profiles/search/jo\":1,\"security/profiles/search/jon\":1,\"security/profiles/search/jones\":1,\"security/rights/assisthelp\":6854,\"security/rights/clientportaltasks\":480,\"security/token/checkpassword\":49,\"settings/customsettings\":11960,\"settings/customsettings/default-landing-page\":7798,\"settings/customsettings/theme-primary-bg-color\":9472,\"settings/database/entityoptions/code/69astroena\":90,\"settings/database/entityoptions/code/69clientpe\":5948,\"settings/database/entityoptions/code/69excludei\":112,\"settings/database/entityoptions/code/69experian\":8434,\"settings/database/entityoptions/code/69hideexce\":445,\"settings/database/entityoptions/code/69hidescreen\":37,\"settings/database/entityoptions/code/69includea\":11906,\"settings/database/entityoptions/code/69linkacct\":8767,\"settings/database/entityoptions/code/69redirectadvizr\":8445,\"settings/database/entityoptions/code/fidelitypid\":1990,\"settings/entityoptions/accounts/<entityid>/code/69unmanage\":39768,\"settings/entityoptions/database/code/69mgpmonte\":286,\"settings/entityoptions/database/code/69mgpnetwo\":65,\"settings/entityoptions/database/code/69oclogo\":114,\"settings/useroptions/main_menu_apps\":117,\"settings/useroptions/notification_settings\":111,\"settings/useroptions/report_params_1372\":3,\"settings/useroptions/report_params_21\":2,\"settings/useroptions/report_params_2713\":45,\"settings/useroptions/report_params_3\":53,\"settings/useroptions/report_params_4\":8,\"settings/useroptions/report_params_5\":2,\"settings/webacknowledgements\":11904,\"signalr/connect\":9,\"signalr/negotiate\":9,\"signalr/start\":9,\"trading/confirm/accounts/<entityid>/<date>/<entityid>\":1,\"trading/confirm/clients/<entityid>/<date>/<entityid>\":9,\"trading/confirm/dates\":97,\"utility/logging/pageview/app/accounts\":2277,\"utility/logging/pageview/app/activity\":1,\"utility/logging/pageview/app/commentary\":2,\"utility/logging/pageview/app/downloads\":9,\"utility/logging/pageview/app/holdings\":18,\"utility/logging/pageview/app/moneyguidepro\":27,\"utility/logging/pageview/app/moneyguidepro/goals\":8,\"utility/logging/pageview/app/moneyguidepro/networth\":5,\"utility/logging/pageview/app/performance\":4,\"utility/logging/pageview/app/portfolio/activity\":193,\"utility/logging/pageview/app/portfolio/performance\":306,\"utility/logging/pageview/app/reports\":33,\"utility/logging/pageview/app/reports/generator\":13,\"utility/logging/pageview/app/statements\":24,\"utility/logging/pageview/documents/cloudstorage\":340,\"utility/logging/pageview/documents/reports\":372,\"utility/logging/pageview/documents/statements\":1754,\"utility/logging/pageview/goals/plan\":1,\"utility/logging/pageview/loginas\":2,\"utility/logging/pageview/planning/insurance\":23,\"utility/logging/pageview/planning/networth\":65,\"utility/logging/pageview/planning/summary\":315,\"utility/logging/pageview/portfolio/activity\":883,\"utility/logging/pageview/portfolio/overview\":7999,\"utility/logging/pageview/portfolio/performance\":4436,\"utility/logging/pageview/reports/prompt/<entityid>\":106,\"utility/logging/pageview/support/cases\":1,\"utility/logging/pageview/tools/balancesheet\":33,\"utility/logging/pageview/tools/riskprofile\":7,\"utility/logging/pageview/tools/rmd\":122,\"utility/logging/pageview/tools/sfcommunity\":2,\"utility/logging/pageview/trading/allocations\":3,\"utility/logging/pageview/trading/confirms\":80,\"utility/logging/pageview/updates/commentary\":340,\"utility/logging/pageview/updates/newsfeed\":195,\"utility/logging/statementdownload/2016 - 2nd quarter statement\":6,\"utility/logging/statementdownload/2016 - q4 quarterly statement\":3,\"utility/logging/statementdownload/2017 - q2 quarterly statement\":2,\"utility/logging/statementdownload/2018 - 4th quarter statement\":2,\"utility/logging/statementdownload/2018 - q2 quarterly statement\":2,\"utility/logging/statementdownload/2018 - q4 quarterly statement\":4,\"utility/logging/statementdownload/2018 2q performance report\":2,\"utility/logging/statementdownload/2018 4q performance report\":1,\"utility/logging/statementdownload/2018 year end statements\":5,\"utility/logging/statementdownload/2018-11 november monthly statement\":1,\"utility/logging/statementdownload/2019 - 1099 - guard. - 941065253\":1,\"utility/logging/statementdownload/2019 - 1099 - guard. - 941065255\":1,\"utility/logging/statementdownload/2019 - 1099 - individual - 939501699\":1,\"utility/logging/statementdownload/2019 - 1099 - individual - 939648294\":7,\"utility/logging/statementdownload/2019 - 1099 - jnt - 939421757\":4,\"utility/logging/statementdownload/2019 - 1099 - jnt - 941853096\":3,\"utility/logging/statementdownload/2019 - 1099 - jtwros - 941242936\":2,\"utility/logging/statementdownload/2019 - 1099 - jtwros - 942716629\":2,\"utility/logging/statementdownload/2019 - 1099 - tod - 939501683\":1,\"utility/logging/statementdownload/2019 - 1099 - trust - 912025871\":1,\"utility/logging/statementdownload/2019 - 1099 - trust - 937066158\":1,\"utility/logging/statementdownload/2019 - 1099 - trust - 939099529\":1,\"utility/logging/statementdownload/2019 - 1099 - trust - 939501693\":1,\"utility/logging/statementdownload/2019 - 1099 - trust - 941333281\":1,\"utility/logging/statementdownload/2019 - 1099r - bene ira - 939257235\":1,\"utility/logging/statementdownload/2019 - 1099r - bene ira - 939257237\":1,\"utility/logging/statementdownload/2019 - 1099r - bene ira - 939648309\":4,\"utility/logging/statementdownload/2019 - 1099r - bene ira - 942034398\":3,\"utility/logging/statementdownload/2019 - 1099r - ira - 941065154\":5,\"utility/logging/statementdownload/2019 - 1099r - ira - 941111764\":1,\"utility/logging/statementdownload/2019 - 1st quarter statement\":3,\"utility/logging/statementdownload/2019 - 4th quarter statement\":22,\"utility/logging/statementdownload/2019 - 5498 - simple - 915991112\":1,\"utility/logging/statementdownload/2019 - august statement\":4,\"utility/logging/statementdownload/2019 - december statement\":10,\"utility/logging/statementdownload/2019 - fourth quarter report\":8,\"utility/logging/statementdownload/2019 - june statement\":2,\"utility/logging/statementdownload/2019 - november statement\":6,\"utility/logging/statementdownload/2019 - october monthly custodian statement\":1,\"utility/logging/statementdownload/2019 - october statement\":7,\"utility/logging/statementdownload/2019 - q1 quarterly custodial statement\":1,\"utility/logging/statementdownload/2019 - q1 quarterly statement\":10,\"utility/logging/statementdownload/2019 - q2 quarterly custodial statement\":2,\"utility/logging/statementdownload/2019 - q3 quarterly custodial statement\":8,\"utility/logging/statementdownload/2019 - second quarter report\":6,\"utility/logging/statementdownload/2019 - third quarter report\":1,\"utility/logging/statementdownload/2019 1099 div int b - ind - d068000017\":4,\"utility/logging/statementdownload/2019 1099 div int b - ind - d068000515\":1,\"utility/logging/statementdownload/2019 1099 div int b - ind - d068000614\":3,\"utility/logging/statementdownload/2019 1099 div int b - jtwros - d068000550\":2,\"utility/logging/statementdownload/2019 1099r - bira - d068000518\":1,\"utility/logging/statementdownload/2019 1099r - ira - d068000018\":3,\"utility/logging/statementdownload/2019 1099r - ira - d068000412\":2,\"utility/logging/statementdownload/2019 1099r - ira - d068000443\":1,\"utility/logging/statementdownload/2019 1099r - roth - d068000003\":2,\"utility/logging/statementdownload/2019 1099r - roth - d068000549\":3,\"utility/logging/statementdownload/2019 1099r - sep - d068000453\":1,\"utility/logging/statementdownload/2019 1q performance report - donhoff\":2,\"utility/logging/statementdownload/2019 1q performance report - redo\":1,\"utility/logging/statementdownload/2019 2q performance report\":14,\"utility/logging/statementdownload/2019 3q performance report\":7,\"utility/logging/statementdownload/2019 3q performance report check pay\":2,\"utility/logging/statementdownload/2019 4q performance report\":23,\"utility/logging/statementdownload/2019 4q performance report check pay\":2,\"utility/logging/statementdownload/2019 5498 report - roth - d068000003\":3,\"utility/logging/statementdownload/2019 5498 report - roth - d068000535\":2,\"utility/logging/statementdownload/2019 5498 report - roth - d068000538\":1,\"utility/logging/statementdownload/2019 5498 report - sep - d068000453\":2,\"utility/logging/statementdownload/2019-01 january monthly statement\":8,\"utility/logging/statementdownload/2019-02 february monthly statement\":1,\"utility/logging/statementdownload/2019-05 may monthly statement\":3,\"utility/logging/statementdownload/2019-08 august monthly statement\":7,\"utility/logging/statementdownload/2019-09 q3 quarterly statement\":10,\"utility/logging/statementdownload/2019-10 october monthly statement\":2,\"utility/logging/statementdownload/2019-11 november monthly statement\":4,\"utility/logging/statementdownload/2020 - 1099 - ind - 942730578\":1,\"utility/logging/statementdownload/2020 - 1099 - ind - 943231253\":1,\"utility/logging/statementdownload/2020 - 1099 - individual - 944626990\":1,\"utility/logging/statementdownload/2020 - 1099 - jnt - 943231246\":1,\"utility/logging/statementdownload/2020 - 1099 - jnt - 944601346\":2,\"utility/logging/statementdownload/2020 - 1099 - jtwros - 240230874\":1,\"utility/logging/statementdownload/2020 - 1099 - jtwros - 939389899\":3,\"utility/logging/statementdownload/2020 - 1099 - trust - 240256032\":1,\"utility/logging/statementdownload/2020 - 1099 - trust - 912013217\":2,\"utility/logging/statementdownload/2020 - 1099r - bene ira - 942034398\":1,\"utility/logging/statementdownload/2020 - 1099r - bene ira - 944172177\":1,\"utility/logging/statementdownload/2020 - 1099r - ira - 943583440\":1,\"utility/logging/statementdownload/2020 - april monthly custodial statement\":5,\"utility/logging/statementdownload/2020 - april statement\":12,\"utility/logging/statementdownload/2020 - august monthly custodian statement\":1,\"utility/logging/statementdownload/2020 - august statement\":6,\"utility/logging/statementdownload/2020 - february monthly custodian statement\":1,\"utility/logging/statementdownload/2020 - july statement\":6,\"utility/logging/statementdownload/2020 - june statement\":7,\"utility/logging/statementdownload/2020 - may monthly custodial statement\":1,\"utility/logging/statementdownload/2020 - november monthly custodian statement\":2,\"utility/logging/statementdownload/2020 - second quarter statement\":4,\"utility/logging/statementdownload/2020 - september statement\":7,\"utility/logging/statementdownload/2020 - third quarter report\":1,\"utility/logging/statementdownload/2020 1099 - ira - d068000432\":2,\"utility/logging/statementdownload/2020 1099 - ira - d068000469\":4,\"utility/logging/statementdownload/2020 1099 div int b correction - jtwros - d068000550\":3,\"utility/logging/statementdownload/2020 1099 div int b summary - ind - d068000004\":1,\"utility/logging/statementdownload/2020 1099 div int b summary - ind - d068000468\":1,\"utility/logging/statementdownload/2020 1099 div int b summary - ind - d068000515\":2,\"utility/logging/statementdownload/2020 1099 div int b summary - jtwros - d068000440\":1,\"utility/logging/statementdownload/2020 1099 div int b summary - jtwros - d068000550\":1,\"utility/logging/statementdownload/2020 1099 div int b summary - jtwros - d068000642\":3,\"utility/logging/statementdownload/2020 1q performance report\":14,\"utility/logging/statementdownload/2020 1q performance report check pay\":2,\"utility/logging/statementdownload/2020 2q performance report\":15,\"utility/logging/statementdownload/2020 2q performance report check pay\":1,\"utility/logging/statementdownload/2020 3q performance report\":19,\"utility/logging/statementdownload/2020 4q performance report\":20,\"utility/logging/statementdownload/2020-05 may monthly statement\":1,\"utility/logging/statementdownload/2020-06 q2 quarterly statement\":7,\"utility/logging/statementdownload/2021 - 1st quarter statement\":1,\"utility/logging/statementdownload/2021 - february monthly statement\":14,\"utility/logging/statementdownload/2021 - march monthly custodian statement\":2,\"utility/logging/statementdownload/2021 1q performance report check pay\":2,\"utility/logging/statementdownload/2021 1qperformance report\":9,\"utility/logging/statementdownload/2q 2018 quarter-end reports\":1,\"utility/logging/statementdownload/2q2019 quarter report - so west\":9,\"utility/logging/statementdownload/4q2019 quarter report - so west\":17,\"utility/logging/statementdownload/april 2020 - 401(k) - 240263990\":1,\"utility/logging/statementdownload/april 2020 - bene ira - 944172177\":1,\"utility/logging/statementdownload/april 2020 - individual - 240294979\":1,\"utility/logging/statementdownload/april 2020 - individual - 939739418\":1,\"utility/logging/statementdownload/april 2020 - jtwros - 942716629\":2,\"utility/logging/statementdownload/april 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/april 2021 - sep - 944627030\":3,\"utility/logging/statementdownload/august 2019 - bene ira - 941509234\":1,\"utility/logging/statementdownload/august 2019 - ira - 941065220\":2,\"utility/logging/statementdownload/august 2019 - ira - 941333270\":1,\"utility/logging/statementdownload/august 2019 - ira - 941665813\":1,\"utility/logging/statementdownload/august 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/august 2020 - roll - 939099573\":2,\"utility/logging/statementdownload/august 2020 - sep - 915960846\":2,\"utility/logging/statementdownload/august 2020 - sep - 941333283\":1,\"utility/logging/statementdownload/december 2019 - bene ira - 942034398\":1,\"utility/logging/statementdownload/december 2019 - guard. - 941065255\":1,\"utility/logging/statementdownload/december 2019 - ind - 942730578\":1,\"utility/logging/statementdownload/december 2019 - ira - 941111726\":1,\"utility/logging/statementdownload/december 2019 - ira - 941796604\":4,\"utility/logging/statementdownload/december 2019 - jtwros - 942716629\":1,\"utility/logging/statementdownload/december 2019 - roll - 914938423\":1,\"utility/logging/statementdownload/december 2019 - sep - 943231248\":2,\"utility/logging/statementdownload/december 2019 - trust - 912025871\":2,\"utility/logging/statementdownload/december 2020 - ind - 942730578\":4,\"utility/logging/statementdownload/december 2020 - ira - 939161660\":2,\"utility/logging/statementdownload/december 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/december 2020 - roth - 942743322\":1,\"utility/logging/statementdownload/december 2020 - sepi - 939421688\":1,\"utility/logging/statementdownload/december 2020 - trust - 942716629\":2,\"utility/logging/statementdownload/december 2021 - individual - 939501699\":1,\"utility/logging/statementdownload/december 2021 - individual - 943876257\":2,\"utility/logging/statementdownload/december 2021 - ira - 240259028\":1,\"utility/logging/statementdownload/december 2021 - ira - 939502119\":3,\"utility/logging/statementdownload/december 2021 - ira - 941073996\":1,\"utility/logging/statementdownload/december 2021 - ira - 943876268\":1,\"utility/logging/statementdownload/december 2021 - roll - 914938423\":1,\"utility/logging/statementdownload/define financial quarterly report: 3q2019\":19,\"utility/logging/statementdownload/define financial quarterly report: 3q2020\":1,\"utility/logging/statementdownload/february 2020 - bene ira - 917931362\":1,\"utility/logging/statementdownload/february 2020 - ind - 942730578\":1,\"utility/logging/statementdownload/february 2020 - ira - 915962016\":3,\"utility/logging/statementdownload/february 2020 - ira - 920932846\":2,\"utility/logging/statementdownload/february 2020 - ira - 939161660\":1,\"utility/logging/statementdownload/february 2020 - ira - 941853090\":1,\"utility/logging/statementdownload/february 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/february 2020 - trust - 912025871\":1,\"utility/logging/statementdownload/february 2021 - ira - 939389896\":1,\"utility/logging/statementdownload/february 2021 - ira - 939389897\":1,\"utility/logging/statementdownload/february 2021 - ira - 943231198\":1,\"utility/logging/statementdownload/february 2021 - jtwros - 939389899\":1,\"utility/logging/statementdownload/february 2021 - roll - 914938423\":1,\"utility/logging/statementdownload/february 2021 - roth - 944240514\":6,\"utility/logging/statementdownload/first quarter 2019 report\":12,\"utility/logging/statementdownload/january 2020 - bene ira - 939257235\":1,\"utility/logging/statementdownload/january 2020 - guard. - 941065255\":1,\"utility/logging/statementdownload/january 2020 - ind - 941853088\":1,\"utility/logging/statementdownload/january 2020 - ind - 942730578\":1,\"utility/logging/statementdownload/january 2020 - individual - 939501699\":1,\"utility/logging/statementdownload/january 2020 - individual - 941796584\":1,\"utility/logging/statementdownload/january 2020 - ira - 914988933\":1,\"utility/logging/statementdownload/january 2020 - ira - 939029690\":3,\"utility/logging/statementdownload/january 2020 - ira - 939480708\":1,\"utility/logging/statementdownload/january 2020 - jtwros - 914060154\":1,\"utility/logging/statementdownload/january 2020 - roll - 911952726\":1,\"utility/logging/statementdownload/january 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/january 2020 - trust - 912013217\":2,\"utility/logging/statementdownload/january 2020 - trust - 915039898\":2,\"utility/logging/statementdownload/january 2021 - ira - 939161660\":2,\"utility/logging/statementdownload/january 2021 - ira - 941111764\":1,\"utility/logging/statementdownload/january 2021 - ira - 941665862\":1,\"utility/logging/statementdownload/january 2021 - ira - 943574924\":4,\"utility/logging/statementdownload/january 2021 - ira - 943583432\":2,\"utility/logging/statementdownload/january 2021 - jnt - 944601346\":2,\"utility/logging/statementdownload/january 2021 - roll - 914938423\":4,\"utility/logging/statementdownload/july 2019 - roll - 914938423\":2,\"utility/logging/statementdownload/july 2020 - bene ira - 944305593\":2,\"utility/logging/statementdownload/july 2020 - dbp - 917029832\":1,\"utility/logging/statementdownload/july 2020 - ind - 942730578\":1,\"utility/logging/statementdownload/july 2020 - ira - 944305583\":5,\"utility/logging/statementdownload/july 2020 - jtwros - 942716629\":4,\"utility/logging/statementdownload/july 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/july 2020 - sep - 936921493\":1,\"utility/logging/statementdownload/july 2020 - trust - 944305585\":2,\"utility/logging/statementdownload/july 2020 monthly statement\":4,\"utility/logging/statementdownload/june 2019 - trust - 943153749\":2,\"utility/logging/statementdownload/june 2020 - ind - 942730578\":2,\"utility/logging/statementdownload/june 2020 - jtwros - 942716629\":2,\"utility/logging/statementdownload/june 2020 monthly statement\":14,\"utility/logging/statementdownload/march 2020 - 401(k) - 240263902\":1,\"utility/logging/statementdownload/march 2020 - individual - 939739418\":1,\"utility/logging/statementdownload/march 2020 - ira - 240230888\":2,\"utility/logging/statementdownload/march 2020 - ira - 943574924\":1,\"utility/logging/statementdownload/march 2020 - ira - 943575046\":1,\"utility/logging/statementdownload/march 2020 - roll - 240230882\":2,\"utility/logging/statementdownload/march 2020 - roll - 240230885\":2,\"utility/logging/statementdownload/march 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/march 2020 - roll - 943876236\":2,\"utility/logging/statementdownload/march 2021 - individual - 939501699\":1,\"utility/logging/statementdownload/march 2021 - ira - 240222178\":1,\"utility/logging/statementdownload/march 2021 - roll - 920961385\":1,\"utility/logging/statementdownload/march 2021 - sep - 944627030\":2,\"utility/logging/statementdownload/march 2021 - trust - 240222307\":1,\"utility/logging/statementdownload/may 2019 - bene ira - 942034398\":1,\"utility/logging/statementdownload/may 2019 - ira - 912918406\":1,\"utility/logging/statementdownload/may 2019 - ira - 941665862\":3,\"utility/logging/statementdownload/may 2019 - roll - 914938423\":1,\"utility/logging/statementdownload/may 2019 - trust - 912013217\":3,\"utility/logging/statementdownload/may 2020 - individual - 240294979\":1,\"utility/logging/statementdownload/may 2020 - ira - 941073996\":2,\"utility/logging/statementdownload/may 2020 - jtwros - 942716629\":6,\"utility/logging/statementdownload/november 2019 - ind - 941170011\":2,\"utility/logging/statementdownload/november 2019 - individual - 941796588\":3,\"utility/logging/statementdownload/november 2019 - roll - 914938423\":1,\"utility/logging/statementdownload/november 2020 - corporate - 941665819\":1,\"utility/logging/statementdownload/november 2020 - ira - 915962016\":1,\"utility/logging/statementdownload/november 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/november 2020 - roth - 942743322\":1,\"utility/logging/statementdownload/november 2020 - trust - 942716629\":4,\"utility/logging/statementdownload/november 2020 - trust - 943153749\":1,\"utility/logging/statementdownload/october 2019 - non-profit - 941184708\":1,\"utility/logging/statementdownload/october 2019 - roll - 914938423\":1,\"utility/logging/statementdownload/october 2019 - trust - 912013217\":1,\"utility/logging/statementdownload/october 2020 - jtwros - 942716629\":3,\"utility/logging/statementdownload/october 2020 - roll - 917970304\":5,\"utility/logging/statementdownload/september 2019 - individual - 936015429\":1,\"utility/logging/statementdownload/september 2019 - individual - 939501699\":1,\"utility/logging/statementdownload/september 2019 - jtwros - 942716629\":2,\"utility/logging/statementdownload/september 2019 - roll - 914938423\":1,\"utility/logging/statementdownload/september 2019 - roll - 922913402\":1,\"utility/logging/statementdownload/september 2020 - individual - 944305587\":1,\"utility/logging/statementdownload/september 2020 - ira - 941665813\":6,\"utility/logging/statementdownload/september 2020 - ira - 941853090\":1,\"utility/logging/statementdownload/september 2020 - ira - 943574924\":1,\"utility/logging/statementdownload/september 2020 - ira - 943575046\":1,\"utility/logging/statementdownload/september 2020 - roll - 914938423\":1,\"utility/logging/statementdownload/september 2020 - sep - 936921493\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"display(clientswebeventsdf.groupBy(\"BaseRoute\").count())"
						],
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/paramtest')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('paramtest_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from notebookutils import mssparkutils\r\n",
							"\r\n",
							"workspace_name = mssparkutils.env.getWorkspaceName()"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true,
							"tags": [
								"parameters"
							]
						},
						"source": [
							"param_name = \"\""
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(workspace_name)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(param_name)"
						],
						"outputs": [],
						"execution_count": 4
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/percept1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('percept1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/santacruz/incoming/*/*/*/*.parquet', format='parquet')\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/prepare_anomaly_detector_data')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('prepare_anomaly_detector_data_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import lit\n",
							"\n",
							"df = spark.createDataFrame([\n",
							"    (\"1972-01-01T00:00:00Z\", 826.0),\n",
							"    (\"1972-02-01T00:00:00Z\", 799.0),\n",
							"    (\"1972-03-01T00:00:00Z\", 890.0),\n",
							"    (\"1972-04-01T00:00:00Z\", 900.0),\n",
							"    (\"1972-05-01T00:00:00Z\", 766.0),\n",
							"    (\"1972-06-01T00:00:00Z\", 805.0),\n",
							"    (\"1972-07-01T00:00:00Z\", 821.0),\n",
							"    (\"1972-08-01T00:00:00Z\", 20000.0),\n",
							"    (\"1972-09-01T00:00:00Z\", 883.0),\n",
							"    (\"1972-10-01T00:00:00Z\", 898.0),\n",
							"    (\"1972-11-01T00:00:00Z\", 957.0),\n",
							"    (\"1972-12-01T00:00:00Z\", 924.0),\n",
							"    (\"1973-01-01T00:00:00Z\", 881.0),\n",
							"    (\"1973-02-01T00:00:00Z\", 837.0),\n",
							"    (\"1973-03-01T00:00:00Z\", 9000.0)\n",
							"], [\"timestamp\", \"value\"]).withColumn(\"group\", lit(\"series1\"))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"df.write.mode(\"overwrite\").saveAsTable(\"anomaly_detector_testing_data\")"
						],
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pythonversioncheck')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('pythonversioncheck_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "400g",
					"driverCores": 64,
					"executorMemory": "400g",
					"executorCores": 64,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark",
						"name": "mlspark",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 64,
						"memory": 400
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import sys\n",
							"print(sys.version)"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkMITest')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('sparkMITest_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3",
						"name": "mlspark3",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112,
						"extraHeader": {},
						"automaticScaleJobs": false
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"%%pyspark\n",
							"# Python code\n",
							"spark.conf.set(\"spark.storage.synapse.linkedServiceName\", \"ADLSgen2MI\")\n",
							"spark.conf.set(\"fs.azure.account.oauth.provider.type\", \"com.microsoft.azure.synapse.tokenlibrary.LinkedServiceBasedTokenProvider\")\n",
							"#sc.hadoopConfiguration.set(\"spark.storage.synapse.linkedServiceName\", \"ADLSgen2MI\")\n",
							"#sc.hadoopConfiguration.set(\"fs.azure.account.oauth.provider.type\", \"com.microsoft.azure.synapse.tokenlibrary.LinkedServiceBasedTokenProvider\")\n",
							"#df = spark.read.load('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/2021/06/17/20-28-55/DefaultRule-AllBlobs.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							"#, header=True\n",
							"#)\n",
							"#display(df.limit(10))\n",
							"df = spark.read.csv('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/2021/06/17/20-28-55/DefaultRule-AllBlobs.csv')\n",
							"\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"from pyspark.sql.types import IntegerType\n",
							"data_df = df.withColumn(\"Content-LengthInt\", df[\"Content-Length\"].cast(IntegerType()))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"import pyspark.sql.functions\n",
							"\n",
							"split_col = pyspark.sql.functions.split(df['Name'], '/')\n",
							"data_df = data_df.withColumn('Container', split_col.getItem(0))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"display(data_df.groupBy(\"Container\").sum(\"Content-LengthInt\"))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/test1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('test1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"val hol_blob_account_name = \"azureopendatastorage\"\r\n",
							"val hol_blob_container_name = \"holidaydatacontainer\"\r\n",
							"val hol_blob_relative_path = \"Processed\"\r\n",
							"val hol_blob_sas_token = \"\"\r\n",
							"\r\n",
							"val hol_wasbs_path = f\"wasbs://$hol_blob_container_name@$hol_blob_account_name.blob.core.windows.net/$hol_blob_relative_path\"\r\n",
							"spark.conf.set(f\"fs.azure.sas.$hol_blob_container_name.$hol_blob_account_name.blob.core.windows.net\",hol_blob_sas_token)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val hol_df = spark.read.parquet(hol_wasbs_path) \r\n",
							"hol_df.show(5, truncate = false)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(hol_df)"
						],
						"outputs": [],
						"execution_count": 3
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tftest')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('tftest_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import tensorflow as tf; \r\n",
							"print(tf.__version__)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"mnist = tf.keras.datasets.mnist\r\n",
							"\r\n",
							"(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\n",
							"x_train, x_test = x_train / 255.0, x_test / 255.0"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"model = tf.keras.models.Sequential([\r\n",
							"  tf.keras.layers.Flatten(input_shape=(28, 28)),\r\n",
							"  tf.keras.layers.Dense(128, activation='relu'),\r\n",
							"  tf.keras.layers.Dropout(0.2),\r\n",
							"  tf.keras.layers.Dense(10)\r\n",
							"])"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"predictions = model(x_train[:1]).numpy()\r\n",
							"predictions"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"tf.nn.softmax(predictions).numpy()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"loss_fn(y_train[:1], predictions).numpy()"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"model.compile(optimizer='adam',\r\n",
							"              loss=loss_fn,\r\n",
							"              metrics=['accuracy'])"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"model.fit(x_train, y_train, epochs=5)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"model.evaluate(x_test,  y_test, verbose=2)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"probability_model = tf.keras.Sequential([\r\n",
							"  model,\r\n",
							"  tf.keras.layers.Softmax()\r\n",
							"])"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"probability_model(x_test[:5])"
						],
						"outputs": [],
						"execution_count": 12
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tftest1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('tftest1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"# Import TensorFlow and TensorFlow Datasets\r\n",
							"\r\n",
							"#import tensorflow_datasets as tfds\r\n",
							"import tensorflow as tf\r\n",
							"\r\n",
							"import os"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(tf.__version__)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import os\r\n",
							"import sys\r\n",
							"\r\n",
							"import numpy as np\r\n",
							"import pandas as pd\r\n",
							"import matplotlib.pyplot as plt\r\n",
							"from IPython.display import clear_output\r\n",
							"from six.moves import urllib"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import tensorflow.compat.v2.feature_column as fc\r\n",
							"\r\n",
							"import tensorflow as tf"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# Load dataset.\r\n",
							"dftrain = pd.read_csv('https://storage.googleapis.com/tf-datasets/titanic/train.csv')\r\n",
							"dfeval = pd.read_csv('https://storage.googleapis.com/tf-datasets/titanic/eval.csv')\r\n",
							"y_train = dftrain.pop('survived')\r\n",
							"y_eval = dfeval.pop('survived')"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dftrain.head()"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dftrain.describe()"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dftrain.shape[0], dfeval.shape[0]"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dftrain.age.hist(bins=20)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dftrain.sex.value_counts().plot(kind='barh')"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dftrain['class'].value_counts().plot(kind='barh')"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"pd.concat([dftrain, y_train], axis=1).groupby('sex').survived.mean().plot(kind='barh').set_xlabel('% survive')"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"CATEGORICAL_COLUMNS = ['sex', 'n_siblings_spouses', 'parch', 'class', 'deck',\r\n",
							"                       'embark_town', 'alone']\r\n",
							"NUMERIC_COLUMNS = ['age', 'fare']\r\n",
							"\r\n",
							"feature_columns = []\r\n",
							"for feature_name in CATEGORICAL_COLUMNS:\r\n",
							"  vocabulary = dftrain[feature_name].unique()\r\n",
							"  feature_columns.append(tf.feature_column.categorical_column_with_vocabulary_list(feature_name, vocabulary))\r\n",
							"\r\n",
							"for feature_name in NUMERIC_COLUMNS:\r\n",
							"  feature_columns.append(tf.feature_column.numeric_column(feature_name, dtype=tf.float32))"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"def make_input_fn(data_df, label_df, num_epochs=10, shuffle=True, batch_size=32):\r\n",
							"  def input_function():\r\n",
							"    ds = tf.data.Dataset.from_tensor_slices((dict(data_df), label_df))\r\n",
							"    if shuffle:\r\n",
							"      ds = ds.shuffle(1000)\r\n",
							"    ds = ds.batch(batch_size).repeat(num_epochs)\r\n",
							"    return ds\r\n",
							"  return input_function\r\n",
							"\r\n",
							"train_input_fn = make_input_fn(dftrain, y_train)\r\n",
							"eval_input_fn = make_input_fn(dfeval, y_eval, num_epochs=1, shuffle=False)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"ds = make_input_fn(dftrain, y_train, batch_size=10)()\r\n",
							"for feature_batch, label_batch in ds.take(1):\r\n",
							"  print('Some feature keys:', list(feature_batch.keys()))\r\n",
							"  print()\r\n",
							"  print('A batch of class:', feature_batch['class'].numpy())\r\n",
							"  print()\r\n",
							"  print('A batch of Labels:', label_batch.numpy())"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"age_column = feature_columns[7]\r\n",
							"tf.keras.layers.DenseFeatures([age_column])(feature_batch).numpy()"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"gender_column = feature_columns[0]\r\n",
							"tf.keras.layers.DenseFeatures([tf.feature_column.indicator_column(gender_column)])(feature_batch).numpy()"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"linear_est = tf.estimator.LinearClassifier(feature_columns=feature_columns)\r\n",
							"linear_est.train(train_input_fn)\r\n",
							"result = linear_est.evaluate(eval_input_fn)\r\n",
							"\r\n",
							"clear_output()\r\n",
							"print(result)"
						],
						"outputs": [],
						"execution_count": 21
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tpchtest1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "General"
				},
				"bigDataPool": {
					"referenceName": "[parameters('tpchtest1_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 3,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "3",
						"spark.dynamicAllocation.maxExecutors": "3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"31eaf54c-10da-4b2c-98fa-bd9734fb2323": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "packages boost express, final requests. furiou",
												"C_PHONE": "14-470-988-1461",
												"C_CUSTKEY": "847741665",
												"C_NAME": "Customer#847741665",
												"C_ADDRESS": "b43IoNgU,tJP mRX4ewy3HMgW",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "6902.59"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly express packages. bold pinto beans boost slyly a",
												"C_PHONE": "11-361-257-5928",
												"C_CUSTKEY": "847741666",
												"C_NAME": "Customer#847741666",
												"C_ADDRESS": "6KVr5dlxtByk6sigfT,gliG9SmOn6e2L",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "3920.36"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "express escapades use ironically according to the regularly regular theodolites. quickly even packages boost",
												"C_PHONE": "13-127-249-6299",
												"C_CUSTKEY": "847741667",
												"C_NAME": "Customer#847741667",
												"C_ADDRESS": "VGSsFRsDz3CEFj2UZgAVDvOegovPPv",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8501.20"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ts. always close instructions are. bold packages cajole furiously.",
												"C_PHONE": "22-778-503-9199",
												"C_CUSTKEY": "847741668",
												"C_NAME": "Customer#847741668",
												"C_ADDRESS": "Oey,csaqR0xYD",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "9803.83"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ress theodolites along the special packages are alongside of the final, regular foxes. slyly busy asym",
												"C_PHONE": "14-852-456-6621",
												"C_CUSTKEY": "847741669",
												"C_NAME": "Customer#847741669",
												"C_ADDRESS": "TM0lMK7C,4ibsVs,rlYRRFC8A",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "2076.48"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "g the regular dependencies. slyly even deposits are after the ",
												"C_PHONE": "22-527-808-6432",
												"C_CUSTKEY": "847741670",
												"C_NAME": "Customer#847741670",
												"C_ADDRESS": "cM4L7WifPxK2KsttVO5AuuV3pq8mMiL",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "5431.09"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "o beans are carefully. quickly special theodolites boost according to the final accounts. carefully iro",
												"C_PHONE": "19-600-513-8376",
												"C_CUSTKEY": "847741671",
												"C_NAME": "Customer#847741671",
												"C_ADDRESS": "O54hz9pd9mkM1scqhWkkgEmp3rHD9S0hCt3",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "386.83"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "sly express theodolites. carefully express packages cajole carefully slyly regular r",
												"C_PHONE": "33-193-560-2927",
												"C_CUSTKEY": "847741672",
												"C_NAME": "Customer#847741672",
												"C_ADDRESS": "bcoxMIWxnP",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "9318.89"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e along the final, bold dependencies. quickl",
												"C_PHONE": "14-599-610-7204",
												"C_CUSTKEY": "847741673",
												"C_NAME": "Customer#847741673",
												"C_ADDRESS": "EIu8pgqyU1mwpWHiaXByG0K0wAqoUwKFFVXlmX",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "2642.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "es. express dugouts run quickly ironic requests. carefully bold",
												"C_PHONE": "20-484-613-6429",
												"C_CUSTKEY": "847741674",
												"C_NAME": "Customer#847741674",
												"C_ADDRESS": "MmdnJoRiPgQS32laC",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "9165.69"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " slyly regular dependencies against the furiously express deposits boost slyly theodolites. instructions ",
												"C_PHONE": "33-668-304-5139",
												"C_CUSTKEY": "847741675",
												"C_NAME": "Customer#847741675",
												"C_ADDRESS": ",7r53rPbm58BMU4E5hfwydtg97D8C0",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "1891.44"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " accounts was slowly according to the even deposits. slyly regular instruc",
												"C_PHONE": "17-747-511-7109",
												"C_CUSTKEY": "847741676",
												"C_NAME": "Customer#847741676",
												"C_ADDRESS": "7XO10JbFJrDiF7V1SZNMb7vp3otiUptWuujlx",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8315.86"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "tructions. quickly express tithes nag blithely alongside of the quic",
												"C_PHONE": "34-153-726-2629",
												"C_CUSTKEY": "847741677",
												"C_NAME": "Customer#847741677",
												"C_ADDRESS": "KiDbIKad29TbXfy6yh68ZyeBCJl0RC",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "7726.89"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "st slyly final requests-- pending foxes among the blithely regular requests a",
												"C_PHONE": "13-518-615-5383",
												"C_CUSTKEY": "847741678",
												"C_NAME": "Customer#847741678",
												"C_ADDRESS": "JeXoxfjXLsS,tGTdNFivxIyxvvN",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8878.85"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ily final ideas affix above the furi",
												"C_PHONE": "14-553-971-1902",
												"C_CUSTKEY": "847741679",
												"C_NAME": "Customer#847741679",
												"C_ADDRESS": "rw0qGdD1WVxz Dy KCnc1IU5fiYqPmcFfjw,L",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "9862.51"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "s. silently express foxes cajole carefully. carefully express packages use quickly deposi",
												"C_PHONE": "28-622-464-6841",
												"C_CUSTKEY": "847741680",
												"C_NAME": "Customer#847741680",
												"C_ADDRESS": "DAImG21Otp",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "9348.42"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "even theodolites hinder slyly fluffily special dependencies. accounts sleep against the st",
												"C_PHONE": "19-500-717-1486",
												"C_CUSTKEY": "847741681",
												"C_NAME": "Customer#847741681",
												"C_ADDRESS": " XHo6sog31Wv,2ZFSlM3KS6BicSimlPopOhW",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "3925.05"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "heodolites wake quietly above the stealth",
												"C_PHONE": "17-588-228-8522",
												"C_CUSTKEY": "847741682",
												"C_NAME": "Customer#847741682",
												"C_ADDRESS": "6xNsPFjemPHyb7TE0",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-755.39"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ctions. final requests will use fu",
												"C_PHONE": "32-920-751-8528",
												"C_CUSTKEY": "847741683",
												"C_NAME": "Customer#847741683",
												"C_ADDRESS": "qD3FE1mCvzQy3l",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "7030.91"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": ": final dependencies above the quietly regular accounts wake furiously blithely fina",
												"C_PHONE": "16-685-749-4382",
												"C_CUSTKEY": "847741684",
												"C_NAME": "Customer#847741684",
												"C_ADDRESS": "RWDctxqVhyRf63e8",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "4615.45"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "posits print after the even, final ideas. packages cajole alongside of the blithely even dependencies. quick",
												"C_PHONE": "10-491-914-4104",
												"C_CUSTKEY": "847741685",
												"C_NAME": "Customer#847741685",
												"C_ADDRESS": "hR6mH32kwxZvyHHTCRn tFw9P4aFw",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "8792.86"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "es. carefully ironic pains snooze quickly after the deposits. carefully ironic epitaphs are slyly",
												"C_PHONE": "34-846-792-7720",
												"C_CUSTKEY": "847741686",
												"C_NAME": "Customer#847741686",
												"C_ADDRESS": "KTQy0tX3QYevTuUb8e4tKQ0",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5663.23"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ncies do haggle. fluffily regular foxes integrate. unusual accounts haggle carefully ",
												"C_PHONE": "29-568-748-5490",
												"C_CUSTKEY": "847741687",
												"C_NAME": "Customer#847741687",
												"C_ADDRESS": "XJAh0y85cb5E,nh6YT9P4",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "7847.58"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "p blithely ironic dolphins. carefully final foxes us",
												"C_PHONE": "16-864-308-5375",
												"C_CUSTKEY": "847741688",
												"C_NAME": "Customer#847741688",
												"C_ADDRESS": ",8yXxKq EviFCqtJidAU tH5qbb6vdMas",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "2309.99"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "requests engage fluffily furiously final ideas! carefully pending",
												"C_PHONE": "28-492-117-8581",
												"C_CUSTKEY": "847741689",
												"C_NAME": "Customer#847741689",
												"C_ADDRESS": "kPM2J38uDre1i,w",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "2989.47"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "r deposits. furiously express package",
												"C_PHONE": "19-772-140-9810",
												"C_CUSTKEY": "847741690",
												"C_NAME": "Customer#847741690",
												"C_ADDRESS": "sFLzM9Zl0BSPJ9 5rTCSTHeiaDPBiUkz3h5",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "5064.40"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "instructions wake blithely. foxes cajole according to the warthogs. sly",
												"C_PHONE": "29-714-908-1228",
												"C_CUSTKEY": "847741691",
												"C_NAME": "Customer#847741691",
												"C_ADDRESS": "dVnb0HAMOF3ntz2u",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8406.94"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "nts use against the blithely regular pinto beans. thinly bold requ",
												"C_PHONE": "34-532-400-3530",
												"C_CUSTKEY": "847741692",
												"C_NAME": "Customer#847741692",
												"C_ADDRESS": "qDG9deoXwEqmWfaAnSFsMEdNXZTgvB9Ftcs2o 0d",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "9494.62"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "deposits. carefully final packages across the final instr",
												"C_PHONE": "10-516-576-2663",
												"C_CUSTKEY": "847741693",
												"C_NAME": "Customer#847741693",
												"C_ADDRESS": "QOPYxoyjSNHMCGpV7Bqek",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "8187.22"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ckly regular accounts alongside of the slyly final instructions cajo",
												"C_PHONE": "11-830-289-3698",
												"C_CUSTKEY": "847741694",
												"C_NAME": "Customer#847741694",
												"C_ADDRESS": "nZ9yAJjmEHlIjxu7xzZX5K",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "1682.60"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "n foxes wake slyly after the asymptotes. sly",
												"C_PHONE": "13-151-458-9292",
												"C_CUSTKEY": "847741695",
												"C_NAME": "Customer#847741695",
												"C_ADDRESS": "o1gqcOrnA1JF",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "7482.06"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "packages detect regularly around the ironic requests. slyly even asymptotes haggle regular r",
												"C_PHONE": "20-312-722-9190",
												"C_CUSTKEY": "847741696",
												"C_NAME": "Customer#847741696",
												"C_ADDRESS": "euX17nRvKfJGTk2dWsMVV4YygH",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8099.48"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "nts haggle about the slyly ironic ac",
												"C_PHONE": "14-905-541-2483",
												"C_CUSTKEY": "847741697",
												"C_NAME": "Customer#847741697",
												"C_ADDRESS": "o9riizsSm kKBVLgeijJ9 pmar9wj0Ne",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "1091.91"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "osits. regular instructions among the fluffily special ideas nag bravely flu",
												"C_PHONE": "25-750-798-5879",
												"C_CUSTKEY": "847741698",
												"C_NAME": "Customer#847741698",
												"C_ADDRESS": "1xe2w2c,MDBMK8vsG5VMSAfEdVzrY9vALgzEM0",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "1630.89"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "wake blithely silent pinto beans. blithely special",
												"C_PHONE": "10-346-252-1738",
												"C_CUSTKEY": "847741699",
												"C_NAME": "Customer#847741699",
												"C_ADDRESS": "F fYVg7z4EJb4xECGuhFUubgk,LrS KTrs",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "7322.48"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "equests cajole. final, regular packages haggle blithely. carefully express depo",
												"C_PHONE": "31-956-678-9224",
												"C_CUSTKEY": "847741700",
												"C_NAME": "Customer#847741700",
												"C_ADDRESS": "rVej3WbeMKFhs4CtUvt,hFBzrBb YyBHvDl",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "9995.89"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "quickly requests. express, express theodolites affix fluffily. furiously bold excuses are a",
												"C_PHONE": "17-438-703-9310",
												"C_CUSTKEY": "847741701",
												"C_NAME": "Customer#847741701",
												"C_ADDRESS": "5m QyWWurxX07pTFU41a",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "6999.67"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " final asymptotes sleep above the slyly ruthless packages. slyly regular pains boost furiousl",
												"C_PHONE": "11-494-222-8767",
												"C_CUSTKEY": "847741702",
												"C_NAME": "Customer#847741702",
												"C_ADDRESS": "BfpOwa4dFopdYcOH25ufY91ZznQ",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7559.99"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " requests cajole about the carefully quiet foxes. furiously ironic packages engage slyly iro",
												"C_PHONE": "29-859-442-9640",
												"C_CUSTKEY": "847741703",
												"C_NAME": "Customer#847741703",
												"C_ADDRESS": "jAs5B7D3lwj5pGUkLW7NrP9t1",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8793.45"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ss the furiously ironic deposits. furiously final requests sleep. regular, pending sentiments wake quic",
												"C_PHONE": "19-576-791-1615",
												"C_CUSTKEY": "847741704",
												"C_NAME": "Customer#847741704",
												"C_ADDRESS": "BPGnR7gZP5DzP7qncPVWFzp",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "4563.41"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " accounts! furiously special asymptotes mold against the even, silent foxes. platelets cajole. bold, pendi",
												"C_PHONE": "28-218-822-1321",
												"C_CUSTKEY": "847741705",
												"C_NAME": "Customer#847741705",
												"C_ADDRESS": "OVO XLsjZBVdyAOUwMX5muLJqEjIWHTc0SOWEN",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "3255.75"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ss the carefully special deposits are about the special packages-- carefully brave requests wake furiously. quickl",
												"C_PHONE": "17-598-147-8994",
												"C_CUSTKEY": "847741706",
												"C_NAME": "Customer#847741706",
												"C_ADDRESS": "tF1ar6qNVAR vbMx24h17",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "3419.25"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ily special packages wake silently across the ideas. closely final ideas are around the deposits",
												"C_PHONE": "10-913-731-9565",
												"C_CUSTKEY": "847741707",
												"C_NAME": "Customer#847741707",
												"C_ADDRESS": "1NrowswDCLxUtZSmQDtQOe",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "1316.06"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "elets nag alongside of the slow requests. unusual, regular asymptotes nag ca",
												"C_PHONE": "10-437-102-4057",
												"C_CUSTKEY": "847741708",
												"C_NAME": "Customer#847741708",
												"C_ADDRESS": "CmLGJgT0C hRLn1ABRs7f797",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "6898.85"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "t the blithely pending somas boost ironically slyly furious",
												"C_PHONE": "29-781-409-8345",
												"C_CUSTKEY": "847741709",
												"C_NAME": "Customer#847741709",
												"C_ADDRESS": "yltB5CoYxR3j7,f2jnl7FV2pW9yUcJZ4PoY",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6960.54"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " to the furiously final warthogs. fluffil",
												"C_PHONE": "12-788-879-1402",
												"C_CUSTKEY": "847741710",
												"C_NAME": "Customer#847741710",
												"C_ADDRESS": "trakqnfJZ BE2",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "9899.15"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "onic deposits cajole. regular, silent requests boost. final foxes use above ",
												"C_PHONE": "11-174-618-8929",
												"C_CUSTKEY": "847741711",
												"C_NAME": "Customer#847741711",
												"C_ADDRESS": "BoYVUHm5eF9g8woan3n",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9119.03"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ely silent pinto beans. pinto beans haggle furiously around the carefully bold somas. requests affix sl",
												"C_PHONE": "20-516-998-1132",
												"C_CUSTKEY": "847741712",
												"C_NAME": "Customer#847741712",
												"C_ADDRESS": "eQJZVXxnXKlKe7m qGK4oFaN49bXdi agQaS",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "9691.46"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "unusual requests detect. accounts nag furiously slyly re",
												"C_PHONE": "27-742-830-2988",
												"C_CUSTKEY": "847741713",
												"C_NAME": "Customer#847741713",
												"C_ADDRESS": "Yeep731SDL1oM7VgvnSeYYdUIKQ53dPt",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5432.19"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y unusual theodolites print doggedly furiously silent asymptotes. busily ironic dinos",
												"C_PHONE": "28-427-659-6428",
												"C_CUSTKEY": "847741714",
												"C_NAME": "Customer#847741714",
												"C_ADDRESS": "sHDaULrG4o251",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7790.46"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " regular accounts. quickly regular requests cajole regularly. blithely ironic",
												"C_PHONE": "15-145-915-4628",
												"C_CUSTKEY": "847741715",
												"C_NAME": "Customer#847741715",
												"C_ADDRESS": "DUD89x3MHW,2g6Eq,",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "-624.59"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "even Tiresias nod. regular, final packages lose",
												"C_PHONE": "20-394-352-1041",
												"C_CUSTKEY": "847741716",
												"C_NAME": "Customer#847741716",
												"C_ADDRESS": "t2sa8Pn49I0N8rDEI1vJL2R",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "5512.48"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ss slyly unusual packages. ir",
												"C_PHONE": "20-463-655-7629",
												"C_CUSTKEY": "847741717",
												"C_NAME": "Customer#847741717",
												"C_ADDRESS": "5NpVe3nF8b5A6HfEtKO6m1d",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "4281.72"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "fully regular foxes are slyly across the quickly pending requests. slyly final requests wake deposits. furiously re",
												"C_PHONE": "11-850-960-3154",
												"C_CUSTKEY": "847741718",
												"C_NAME": "Customer#847741718",
												"C_ADDRESS": "RNnjZ8XBdhUTQHcw",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9788.07"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " pinto beans detect slyly express packa",
												"C_PHONE": "31-789-613-2813",
												"C_CUSTKEY": "847741719",
												"C_NAME": "Customer#847741719",
												"C_ADDRESS": "5M jw2njsPdO2wPm3k,ammRFTosABXnoXNTXI",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "1090.84"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " carefully against the carefully ironic requests. final, silent instructions aft",
												"C_PHONE": "26-885-760-9055",
												"C_CUSTKEY": "847741720",
												"C_NAME": "Customer#847741720",
												"C_ADDRESS": ",kwtiGbzk2n7azyBHhQZMHlVoGCto0Har",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5765.56"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ely bold deposits integrate furiously quickly express accounts; accounts cajole according to the s",
												"C_PHONE": "32-398-147-1220",
												"C_CUSTKEY": "847741721",
												"C_NAME": "Customer#847741721",
												"C_ADDRESS": "vZxfqsMuz tP5BxjIg2qIaBM7MT0uM4JVV0Jni",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "829.65"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "y even asymptotes sleep about the ironic dependencies. blithely special requests are quickly against the",
												"C_PHONE": "17-565-902-9153",
												"C_CUSTKEY": "847741722",
												"C_NAME": "Customer#847741722",
												"C_ADDRESS": "rzSlqdVQK JL4RfXpis1e",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "4926.47"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ccording to the final ideas. pi",
												"C_PHONE": "13-925-991-1927",
												"C_CUSTKEY": "847741723",
												"C_NAME": "Customer#847741723",
												"C_ADDRESS": "HZgo asYiwL1F4j58LTGOK",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "215.69"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly. quickly regular dolphins will have to sleep. carefully re",
												"C_PHONE": "22-398-961-5810",
												"C_CUSTKEY": "847741724",
												"C_NAME": "Customer#847741724",
												"C_ADDRESS": "tF6NHYVOOpxnW7QO4sSPgmKIa8",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "3992.25"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "posits. unusual dolphins sleep across the ironic, bold excuses. slyly slow ",
												"C_PHONE": "17-432-696-1197",
												"C_CUSTKEY": "847741725",
												"C_NAME": "Customer#847741725",
												"C_ADDRESS": "Ut xXkpzKj6Q8TH8gH",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "6688.19"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " regular foxes sleep carefully. furiously ironic accounts nag according to the slyly ironic asymptotes! t",
												"C_PHONE": "30-728-342-7247",
												"C_CUSTKEY": "847741726",
												"C_NAME": "Customer#847741726",
												"C_ADDRESS": "N6fieveXXmonXGtfptUZAHbmzMIBpm",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8394.57"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " silent instructions. slyly ironic packages wake quickly. pending ideas wake ideas. quickly ironic excuses ",
												"C_PHONE": "28-260-218-3193",
												"C_CUSTKEY": "847741727",
												"C_NAME": "Customer#847741727",
												"C_ADDRESS": "pTSES8sUhlXt53fQfQgObdff9njay0PVv,",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-343.22"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "uests. ruthlessly ironic instructions boost slowly at the furiously final theodolites. quietly ironic ",
												"C_PHONE": "20-343-339-2416",
												"C_CUSTKEY": "847741728",
												"C_NAME": "Customer#847741728",
												"C_ADDRESS": "Ek43zis5 VQK5hqARfXYlF5",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "4399.98"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "es use. regular ideas haggle slyly final requests. furiously final foxes beside ",
												"C_PHONE": "17-238-831-2239",
												"C_CUSTKEY": "847741729",
												"C_NAME": "Customer#847741729",
												"C_ADDRESS": "HoPGpVTW92u8re,pUaS  s ek9o75Zgsik",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "6430.25"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "foxes about the permanently express requests x-ray furiously regular courts. even frays serve. blithely perman",
												"C_PHONE": "26-964-781-9584",
												"C_CUSTKEY": "847741730",
												"C_NAME": "Customer#847741730",
												"C_ADDRESS": "y6d15qeFn, cIh",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "7255.04"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "gular, special packages nod according to the platele",
												"C_PHONE": "20-778-574-8007",
												"C_CUSTKEY": "847741731",
												"C_NAME": "Customer#847741731",
												"C_ADDRESS": "X7OZ7EFCzXDFH5Jl6GkqwC92",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "9533.27"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "c deposits. regular dependencies nag among the regular pearls-- slyly express requests haggle fluffi",
												"C_PHONE": "29-309-689-8685",
												"C_CUSTKEY": "847741732",
												"C_NAME": "Customer#847741732",
												"C_ADDRESS": "W2r4EW rq8C",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8824.89"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "xpress deposits around the furiously ironic instructions haggle quickly above the carefully silent packages. final p",
												"C_PHONE": "16-912-807-6068",
												"C_CUSTKEY": "847741733",
												"C_NAME": "Customer#847741733",
												"C_ADDRESS": "dve03NhysL 1GIlcZAYcCoHZ2AH",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5051.19"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " are furiously against the express pack",
												"C_PHONE": "34-402-197-1292",
												"C_CUSTKEY": "847741734",
												"C_NAME": "Customer#847741734",
												"C_ADDRESS": "nqLXK6IpdXASepzSq fS f9ApP iuEvA0whc",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "6335.99"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "mong the furiously even instructions. accounts haggle furiously final, fina",
												"C_PHONE": "11-219-830-1538",
												"C_CUSTKEY": "847741735",
												"C_NAME": "Customer#847741735",
												"C_ADDRESS": " MzfrypGWihjX1RCY 2T9UHTHZ,e",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7033.56"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " requests eat thinly. blithely ironic Tiresias nag ironicall",
												"C_PHONE": "33-674-942-3834",
												"C_CUSTKEY": "847741736",
												"C_NAME": "Customer#847741736",
												"C_ADDRESS": "kl2lwVNCnPv5EjCftuanoVd40a",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "5051.09"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " pending instructions cajole carefully pending platelets; carefully regular id",
												"C_PHONE": "33-246-146-8055",
												"C_CUSTKEY": "847741737",
												"C_NAME": "Customer#847741737",
												"C_ADDRESS": "XpKCehR2iBjNQEcf",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "4656.46"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "nusual accounts according to t",
												"C_PHONE": "16-379-627-8557",
												"C_CUSTKEY": "847741738",
												"C_NAME": "Customer#847741738",
												"C_ADDRESS": "se411RpEXZLM1tDY3KYu61PhBUpaOfS jM",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5155.76"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " ironic dependencies at the slyly even packages affi",
												"C_PHONE": "23-617-973-8273",
												"C_CUSTKEY": "847741739",
												"C_NAME": "Customer#847741739",
												"C_ADDRESS": "oDDPRww0qTDwkWQqg",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "3904.55"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " deposits? quietly special accounts integr",
												"C_PHONE": "17-298-664-9254",
												"C_CUSTKEY": "847741740",
												"C_NAME": "Customer#847741740",
												"C_ADDRESS": "YBKxOB3utygLZ,D aLTUqCALBMAcB",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "6796.80"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ic asymptotes believe around the ",
												"C_PHONE": "22-670-994-4304",
												"C_CUSTKEY": "847741741",
												"C_NAME": "Customer#847741741",
												"C_ADDRESS": "BOL68caUVCCwvTqDlGqEL9UFsu",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "7839.38"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e requests. slyly express theodolites amo",
												"C_PHONE": "11-722-271-9488",
												"C_CUSTKEY": "847741742",
												"C_NAME": "Customer#847741742",
												"C_ADDRESS": "NSKk7dSvCpT",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7482.12"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " deposits hinder blithely along ",
												"C_PHONE": "29-186-797-4801",
												"C_CUSTKEY": "847741743",
												"C_NAME": "Customer#847741743",
												"C_ADDRESS": "mBvzpf9b,S",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "9069.20"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " special deposits. slyly even requests play. bold requests above the furiously ironic packag",
												"C_PHONE": "12-827-597-4531",
												"C_CUSTKEY": "847741744",
												"C_NAME": "Customer#847741744",
												"C_ADDRESS": "CRpM8uaiXAxjT5V0Oc5u7XxzC8",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8150.00"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "gside of the blithely ironic ideas. quick, bold requests are. final, pending foxes pl",
												"C_PHONE": "30-752-236-2089",
												"C_CUSTKEY": "847741745",
												"C_NAME": "Customer#847741745",
												"C_ADDRESS": "BhHFIzH,gByBa7UBscM8RdCWJUXzSDiI",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "3152.73"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "hithout the slyly ironic theodolites cajole carefully blithely even packages. furiousl",
												"C_PHONE": "29-165-161-1121",
												"C_CUSTKEY": "847741746",
												"C_NAME": "Customer#847741746",
												"C_ADDRESS": "jww7NOYZDhZXkKxI,lCjoCa117b",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "9908.43"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " even, regular packages. furiously pending acco",
												"C_PHONE": "13-491-346-8971",
												"C_CUSTKEY": "847741747",
												"C_NAME": "Customer#847741747",
												"C_ADDRESS": "CZcuTl dy3LaYodrrgCktRfbhkmxK",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "-12.32"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ts could have to thrash slyly furiously daring requests. furio",
												"C_PHONE": "32-141-706-7681",
												"C_CUSTKEY": "847741748",
												"C_NAME": "Customer#847741748",
												"C_ADDRESS": "c,t9BiOWx0MUlvf2cMLKV,d5LHS8vFHnni",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "-81.30"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e doggedly blithely final sauternes. slyly quiet requests grow carefully about the silently spec",
												"C_PHONE": "29-224-426-2077",
												"C_CUSTKEY": "847741749",
												"C_NAME": "Customer#847741749",
												"C_ADDRESS": "tH55lkopqGY1,ZwzVoqX",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6576.12"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "packages. courts sleep foxes. ironic, fin",
												"C_PHONE": "20-110-721-4413",
												"C_CUSTKEY": "847741750",
												"C_NAME": "Customer#847741750",
												"C_ADDRESS": "UnWXNGrXbuyL3GiKjXCEsFveTPb,sBigRk6",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "5847.33"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " about the silent, special excuses. final asymptotes nag blithely ironic ideas. fluffily bold deposits subl",
												"C_PHONE": "13-106-830-3497",
												"C_CUSTKEY": "847741751",
												"C_NAME": "Customer#847741751",
												"C_ADDRESS": "Cerd1YynEHbmpBz9Aaa",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "105.28"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " kindle about the final, regular reques",
												"C_PHONE": "16-120-108-3373",
												"C_CUSTKEY": "847741752",
												"C_NAME": "Customer#847741752",
												"C_ADDRESS": "IsSUzNOhgMeMPPE3BDdK6TsvAZ",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "7444.33"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "l requests nag furiously alongside of the regular depe",
												"C_PHONE": "31-249-942-2158",
												"C_CUSTKEY": "847741753",
												"C_NAME": "Customer#847741753",
												"C_ADDRESS": "BrE5fPOb3ky2iig",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "860.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " silent asymptotes! furiously final accounts boost ",
												"C_PHONE": "22-903-352-5663",
												"C_CUSTKEY": "847741754",
												"C_NAME": "Customer#847741754",
												"C_ADDRESS": "DxvIS5WPMbCK21a1X",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "9082.21"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lly pending deposits use quickly. ca",
												"C_PHONE": "22-739-621-2590",
												"C_CUSTKEY": "847741755",
												"C_NAME": "Customer#847741755",
												"C_ADDRESS": "zr0R6MbZFgMf2L4kjTtyjEkHkKzCx3Afn",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6829.09"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "instructions. bold platelets sleep blithely about the blithely final instr",
												"C_PHONE": "33-287-870-4963",
												"C_CUSTKEY": "847741756",
												"C_NAME": "Customer#847741756",
												"C_ADDRESS": "F1nZH lOgHt",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "583.33"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lithely ironic frays wake furiously after the blithely pending deposits? quick foxes",
												"C_PHONE": "29-104-453-8185",
												"C_CUSTKEY": "847741757",
												"C_NAME": "Customer#847741757",
												"C_ADDRESS": "bflCkpQ,U F0tFVm7lDyaBV0dwzTrG1WKwC5eL89",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "1009.59"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "carefully ironic packages. slyly quick warthogs",
												"C_PHONE": "14-765-868-4722",
												"C_CUSTKEY": "847741758",
												"C_NAME": "Customer#847741758",
												"C_ADDRESS": "P9ujVICwjfyRorcCIkr",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "4091.79"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "r the even, express multipliers. silent asymptotes ",
												"C_PHONE": "27-431-215-9222",
												"C_CUSTKEY": "847741759",
												"C_NAME": "Customer#847741759",
												"C_ADDRESS": "yFnJburw8Ztvd",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "7784.75"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " must haggle blithely across the slyly express warhors",
												"C_PHONE": "25-535-224-6184",
												"C_CUSTKEY": "847741760",
												"C_NAME": "Customer#847741760",
												"C_ADDRESS": "teykfwVYCpNqcPeho9EHmI0uEcZ2c8Pe",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "2268.25"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "larly. blithely bold packages according to the pending deposits sleep above the even deposits. furi",
												"C_PHONE": "14-463-134-5197",
												"C_CUSTKEY": "847741761",
												"C_NAME": "Customer#847741761",
												"C_ADDRESS": "p5kxm9jix6 FucfP",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "5523.26"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "yly furiously regular requests. blithely final instructions hind",
												"C_PHONE": "21-155-712-6354",
												"C_CUSTKEY": "847741762",
												"C_NAME": "Customer#847741762",
												"C_ADDRESS": "sGibItvcmLhllFk9708UpZil",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9396.00"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "sleep blithely across the carefully silent theodolites. slyly special at",
												"C_PHONE": "33-696-511-9351",
												"C_CUSTKEY": "847741763",
												"C_NAME": "Customer#847741763",
												"C_ADDRESS": "H4OJC2djBNrE0YC80YP6A,E,Wm5SH9IxoQ",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "694.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "inst the regular packages. quickly even deposits wake carefully ",
												"C_PHONE": "22-690-278-3478",
												"C_CUSTKEY": "847741764",
												"C_NAME": "Customer#847741764",
												"C_ADDRESS": "SK9jDUzR YM8bPouGEoI6IlE zaP",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "2167.87"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s. blithely regular instructions about the quickly ironic depo",
												"C_PHONE": "27-638-946-8439",
												"C_CUSTKEY": "847741765",
												"C_NAME": "Customer#847741765",
												"C_ADDRESS": "vLE2iCZUzR7tBefVMyk3SUtU7rC3s4hEzU",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "1350.03"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "le slyly quickly pending packages. evenly unusual requests sleep carefully furiously regular patterns. blithely pend",
												"C_PHONE": "16-613-276-5825",
												"C_CUSTKEY": "847741766",
												"C_NAME": "Customer#847741766",
												"C_ADDRESS": "JPlEC5F6ypQPg2bEtvg,bQuR30t",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5894.28"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y regular grouches nag carefully carefully quick theodolites. quickly ironic accounts alongside of the ironi",
												"C_PHONE": "25-353-789-1403",
												"C_CUSTKEY": "847741767",
												"C_NAME": "Customer#847741767",
												"C_ADDRESS": "mFqwi5q UZwhV70a",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "8227.96"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " even requests nag about the furiously ir",
												"C_PHONE": "26-135-571-6569",
												"C_CUSTKEY": "847741768",
												"C_NAME": "Customer#847741768",
												"C_ADDRESS": "YXYJnhxefKGh,I7K,S3ZGb2",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "4412.91"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "packages affix quickly express, even deposits. furiously final courts sleep. carefully regular pac",
												"C_PHONE": "29-811-727-4601",
												"C_CUSTKEY": "847741769",
												"C_NAME": "Customer#847741769",
												"C_ADDRESS": "u8HeipwyCfGu moTsM5fveiYPXknY9IEUThx6",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "3744.30"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "y pending requests are after the final, bold foxes.",
												"C_PHONE": "16-697-893-4651",
												"C_CUSTKEY": "847741770",
												"C_NAME": "Customer#847741770",
												"C_ADDRESS": "IjIp6Ykd99EJSahCIQLYTkqE ",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "8390.78"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ts wake doggedly according to the quickly regu",
												"C_PHONE": "33-890-128-6738",
												"C_CUSTKEY": "847741771",
												"C_NAME": "Customer#847741771",
												"C_ADDRESS": "DU nRDzorEMGLdm9WOGS8 Igi3",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "1976.56"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "usly special pinto beans cajole quickly slyly special instructions. carefully final deposits kindle furiously",
												"C_PHONE": "29-819-173-1380",
												"C_CUSTKEY": "847741772",
												"C_NAME": "Customer#847741772",
												"C_ADDRESS": "xQagxKFDdtZhGNC8,V3IJ",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "9007.60"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "cial Tiresias cajole blithely regular excuses. quickly express dolphins abou",
												"C_PHONE": "16-220-179-8086",
												"C_CUSTKEY": "847741773",
												"C_NAME": "Customer#847741773",
												"C_ADDRESS": "I6auXccBKjx89mTq2rTZ Sk4jtK7",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "6786.76"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ght to use braids? quickly furious theodolites haggle after the regular, even epitaphs. express,",
												"C_PHONE": "31-242-241-1580",
												"C_CUSTKEY": "847741774",
												"C_NAME": "Customer#847741774",
												"C_ADDRESS": "tJB4c9nKld ",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "4042.68"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "s about the gifts sleep according to the sl",
												"C_PHONE": "25-966-592-5142",
												"C_CUSTKEY": "847741775",
												"C_NAME": "Customer#847741775",
												"C_ADDRESS": "MkblbwwRgB",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "7375.70"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "pains nag after the daring courts. quickly express warthogs affix along the ironic, fi",
												"C_PHONE": "31-517-271-4702",
												"C_CUSTKEY": "847741776",
												"C_NAME": "Customer#847741776",
												"C_ADDRESS": "cMqHDdjDEDJ7",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "2473.36"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "en theodolites was slyly about the",
												"C_PHONE": "26-202-405-8782",
												"C_CUSTKEY": "847741777",
												"C_NAME": "Customer#847741777",
												"C_ADDRESS": "TNTYt07QdCau0RwckJQ6LyOl6FMBi8kqT4eug2",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "9744.87"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ous pinto beans haggle furiously agains",
												"C_PHONE": "29-809-881-7079",
												"C_CUSTKEY": "847741778",
												"C_NAME": "Customer#847741778",
												"C_ADDRESS": "RUVGFcDGUOcb4LL2tl",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "1066.84"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "c deposits alongside of the quickly pending accounts grow slyly alongside of the furiously ruthless packages. q",
												"C_PHONE": "10-213-675-2737",
												"C_CUSTKEY": "847741779",
												"C_NAME": "Customer#847741779",
												"C_ADDRESS": "0StysgolfvzeiSO8ICjWg6WvtZcAoF",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "9274.01"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ularly sly accounts haggle quickly about the furiously regular accounts. excuses ar",
												"C_PHONE": "19-368-965-5970",
												"C_CUSTKEY": "847741780",
												"C_NAME": "Customer#847741780",
												"C_ADDRESS": "wG8YHsUmNFgU2r",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "7336.04"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "es above the quickly furious pinto bean",
												"C_PHONE": "22-680-407-1970",
												"C_CUSTKEY": "847741781",
												"C_NAME": "Customer#847741781",
												"C_ADDRESS": "BsUbKGs3rtZlrBGDvzmTHM53GQJVxT,gv",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6832.21"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ve thin accounts. carefully final requests thr",
												"C_PHONE": "11-793-482-3430",
												"C_CUSTKEY": "847741782",
												"C_NAME": "Customer#847741782",
												"C_ADDRESS": " 2ER7t5sjugVoP2",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "8956.21"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "quickly pending dinos haggle blithely. carefully unus",
												"C_PHONE": "14-349-407-9431",
												"C_CUSTKEY": "847741783",
												"C_NAME": "Customer#847741783",
												"C_ADDRESS": "HN8P0c,PLWlsWFjzL8wJsj4sUjdaJUIG",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "1157.17"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "accounts. ironic packages alongside of the carefully silent ideas cajole blithely e",
												"C_PHONE": "27-511-541-6355",
												"C_CUSTKEY": "847741784",
												"C_NAME": "Customer#847741784",
												"C_ADDRESS": "uw7L pJu3o,hAUUACjI0IzXVUFJ1QBFw0pK",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "9567.12"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "iously special accounts nag alongside of the quickly ironic packages. carefully regular requests are slyly",
												"C_PHONE": "20-686-144-5785",
												"C_CUSTKEY": "847741785",
												"C_NAME": "Customer#847741785",
												"C_ADDRESS": "zS7pVyU9xrA1wJv2mWrH6,lYpkKDo",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "5670.06"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "g blithely along the slyly even theodolites. final, un",
												"C_PHONE": "17-553-151-2714",
												"C_CUSTKEY": "847741786",
												"C_NAME": "Customer#847741786",
												"C_ADDRESS": "hkuBcWiqzb4lre0j7PFchABr,di4ME1",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "1705.93"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "the carefully regular deposits. final, silent courts according to the slyly bold p",
												"C_PHONE": "20-173-789-4300",
												"C_CUSTKEY": "847741787",
												"C_NAME": "Customer#847741787",
												"C_ADDRESS": "96tzf62RICR3v8Tu",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "3554.29"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " sleep. quickly regular packages use sly",
												"C_PHONE": "26-675-114-3213",
												"C_CUSTKEY": "847741788",
												"C_NAME": "Customer#847741788",
												"C_ADDRESS": "XK3JAmXuqyJTSOol cpuS1nOF",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "4911.02"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "! express excuses affix among the",
												"C_PHONE": "27-807-403-4837",
												"C_CUSTKEY": "847741789",
												"C_NAME": "Customer#847741789",
												"C_ADDRESS": "JBO6dkeUpRx",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "4550.24"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s. blithely final requests are ",
												"C_PHONE": "11-462-534-2154",
												"C_CUSTKEY": "847741790",
												"C_NAME": "Customer#847741790",
												"C_ADDRESS": "eNgQjWvNa8rcrj9XinacewHGQ4 Z",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "1821.27"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " about the ironic theodolites haggle about the blithely ironic instructions. f",
												"C_PHONE": "30-680-807-3659",
												"C_CUSTKEY": "847741791",
												"C_NAME": "Customer#847741791",
												"C_ADDRESS": "1npReuvCYJl",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "6005.73"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "se slyly quickly pending packages. blithely iron",
												"C_PHONE": "32-389-525-7316",
												"C_CUSTKEY": "847741792",
												"C_NAME": "Customer#847741792",
												"C_ADDRESS": "HxIM41IAFqJhdjB0f",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "271.54"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "re furiously at the carefully bold excuses. slyly special instructions sleep fluffily. slyly iron",
												"C_PHONE": "15-897-131-7286",
												"C_CUSTKEY": "847741793",
												"C_NAME": "Customer#847741793",
												"C_ADDRESS": "HmvA h1XcM0UKAX1Dx3tDjg",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "7677.39"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "lar ideas haggle never. requests sleep furiously across the regular pint",
												"C_PHONE": "32-650-235-1308",
												"C_CUSTKEY": "847741794",
												"C_NAME": "Customer#847741794",
												"C_ADDRESS": "3gfxnNLYGpTbkDDTG",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "1864.29"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "instructions sleep on the ideas: slyly ironic accounts sleep enticingly quickly fluffy excuses. ",
												"C_PHONE": "30-994-320-7665",
												"C_CUSTKEY": "847741795",
												"C_NAME": "Customer#847741795",
												"C_ADDRESS": "LktXlZNNTS9CBzz9NKLqN9lkSFnWZ",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "3122.13"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "special foxes cajole fluffily even asymptotes. carefully regular packag",
												"C_PHONE": "15-423-856-5045",
												"C_CUSTKEY": "847741796",
												"C_NAME": "Customer#847741796",
												"C_ADDRESS": "w1jr4i0Iws",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "1633.26"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "eans integrate across the furiously even instructions. bli",
												"C_PHONE": "18-388-806-6344",
												"C_CUSTKEY": "847741797",
												"C_NAME": "Customer#847741797",
												"C_ADDRESS": "Grn7S,BzqK45gYB4Fw9v3Y4vVegUdSeSfRx",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "3215.33"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ake carefully regular packages. sometimes regular ",
												"C_PHONE": "20-116-655-5785",
												"C_CUSTKEY": "847741798",
												"C_NAME": "Customer#847741798",
												"C_ADDRESS": "fXN yNaCYH7BYTCP6ySvuXCtL77R Ovy2Zg7nFc",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "6013.44"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " even theodolites. slyly ironic pinto bean",
												"C_PHONE": "29-730-308-6522",
												"C_CUSTKEY": "847741799",
												"C_NAME": "Customer#847741799",
												"C_ADDRESS": "pTgqOqj87R XvlaRznTjpv4OSrdfw46L9VIgfN",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8894.15"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "regular foxes boost. slyly ironic accounts sleep carefully ironic asymptotes. quickly special theodolit",
												"C_PHONE": "15-145-185-7854",
												"C_CUSTKEY": "847741800",
												"C_NAME": "Customer#847741800",
												"C_ADDRESS": "f7KgYeGi4Ralj4xEQnLLq,44K7yBV",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "3065.19"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ests. ironic, stealthy deposits over the carefully even requests sleep furi",
												"C_PHONE": "10-918-524-4364",
												"C_CUSTKEY": "847741801",
												"C_NAME": "Customer#847741801",
												"C_ADDRESS": "n n4SpZa9sGd5xHfK8wzHh",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "1602.85"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "grate fluffily final deposits. blithely ironic asymptote",
												"C_PHONE": "14-803-828-7080",
												"C_CUSTKEY": "847741802",
												"C_NAME": "Customer#847741802",
												"C_ADDRESS": "vu16oJ9EIliTQh5w6dsgXr Pucyxc,GWoV",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "8991.53"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "eodolites between the carefully dogged ideas do integrate carefully alongside of the ironic, busy deposits. furiousl",
												"C_PHONE": "15-601-531-5263",
												"C_CUSTKEY": "847741803",
												"C_NAME": "Customer#847741803",
												"C_ADDRESS": "rr2,9EwIm9TZk9GmUaAuRWngOM7 YgnPMonILG2",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "720.09"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ular, special accounts are idly after the carefully express ideas",
												"C_PHONE": "24-919-534-8334",
												"C_CUSTKEY": "847741804",
												"C_NAME": "Customer#847741804",
												"C_ADDRESS": "HH2kS05AgLqv",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "414.34"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "he final accounts boost furiously fluffily ironic requests. fluffily close deposits wake fu",
												"C_PHONE": "21-702-860-6147",
												"C_CUSTKEY": "847741805",
												"C_NAME": "Customer#847741805",
												"C_ADDRESS": "3NrMJcbMRSkDJGfMQoy ercE2FWYYf4LWiqN",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9731.25"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "g requests hinder quickly across t",
												"C_PHONE": "28-385-601-7817",
												"C_CUSTKEY": "847741806",
												"C_NAME": "Customer#847741806",
												"C_ADDRESS": "nIZx68YSq5p4hskTCm6bBR,",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "3242.29"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "slyly ironic accounts boost quickly. carefully final foxes integrate final platel",
												"C_PHONE": "18-829-996-7402",
												"C_CUSTKEY": "847741807",
												"C_NAME": "Customer#847741807",
												"C_ADDRESS": "PeGkwITY lpqPSuinY ",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8172.50"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "sual, regular platelets wake never quiet requests. instructions are quick",
												"C_PHONE": "18-980-790-7170",
												"C_CUSTKEY": "847741808",
												"C_NAME": "Customer#847741808",
												"C_ADDRESS": "DoCZqr NoMvgV7At2Xj01bBWOznkACfRN7",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "7210.43"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ggle. packages affix fluffily at the unusual platelets. pending requests kindle slyly around the fin",
												"C_PHONE": "29-977-366-7536",
												"C_CUSTKEY": "847741809",
												"C_NAME": "Customer#847741809",
												"C_ADDRESS": "Hm34aaeUcJA,O6X 5Y,wmMZ2WYVdNbLVLA",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "7765.03"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "boost slyly final foxes. regular ",
												"C_PHONE": "27-526-957-2715",
												"C_CUSTKEY": "847741810",
												"C_NAME": "Customer#847741810",
												"C_ADDRESS": "KGgJMnBcvGEPFAdhgygvUpqjKcy2",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "863.27"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "kages. slyly pending escapades unwind carefully. slyly regular pinto b",
												"C_PHONE": "17-243-426-8639",
												"C_CUSTKEY": "847741811",
												"C_NAME": "Customer#847741811",
												"C_ADDRESS": "G3vBtEaXAAxrbre7e",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8949.49"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y final ideas boost carefully slyly express requests. ironic deposits cajole quickly unusual hockey play",
												"C_PHONE": "26-337-361-4779",
												"C_CUSTKEY": "847741812",
												"C_NAME": "Customer#847741812",
												"C_ADDRESS": "Gn4ec,Nyt2RXRssGXwyu WrVUarPXw6s",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "9155.44"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "furiously bold accounts cajole slyly along the carefully sly packages. special requests affix. packages solve ",
												"C_PHONE": "15-451-554-3054",
												"C_CUSTKEY": "847741813",
												"C_NAME": "Customer#847741813",
												"C_ADDRESS": "M0etPcHFaAZ8",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "5506.16"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "o beans. bold, idle deposits can are. instructions wake blith",
												"C_PHONE": "14-309-722-1963",
												"C_CUSTKEY": "847741814",
												"C_NAME": "Customer#847741814",
												"C_ADDRESS": "jgPqH72xgR, JiGCJK53P6STpdLqfzDC",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "7976.67"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "inst the furiously regular accounts affix care",
												"C_PHONE": "11-847-406-9332",
												"C_CUSTKEY": "847741815",
												"C_NAME": "Customer#847741815",
												"C_ADDRESS": "Yh9Qoxm6oHz80HHJ",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "4956.29"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "e quickly idle foxes haggle final theodolites! quickly brave ideas sleep fluffily fluffily final requests. caref",
												"C_PHONE": "31-234-864-9457",
												"C_CUSTKEY": "847741816",
												"C_NAME": "Customer#847741816",
												"C_ADDRESS": "Q3VtMcN0V rNTzZxd1m2kj0o xLeSr,",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6380.63"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "otes use above the slyly idle requests. final attainments across the platelets are alongside of th",
												"C_PHONE": "30-231-871-3376",
												"C_CUSTKEY": "847741817",
												"C_NAME": "Customer#847741817",
												"C_ADDRESS": "wt 4aSfY2R7wfy2ScQ",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "9211.85"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "kly special decoys. regular foxes cajole fluffily. requests are carefully. fluffily regular",
												"C_PHONE": "13-758-748-6261",
												"C_CUSTKEY": "847741818",
												"C_NAME": "Customer#847741818",
												"C_ADDRESS": "v3iopnKdISIHdO2TvkinjkW4c4vdQxgilDs",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "7672.05"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " integrate blithely sentiments. instructions by the ironic deposits haggle care",
												"C_PHONE": "33-927-215-8501",
												"C_CUSTKEY": "847741819",
												"C_NAME": "Customer#847741819",
												"C_ADDRESS": "OnYqhxNNFZpQK,nSyFFAwzCaCgNoplmL",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "187.81"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ithely express frets wake furiously among the fluffily regular deposits. carefully final deposits ",
												"C_PHONE": "19-308-673-2885",
												"C_CUSTKEY": "847741820",
												"C_NAME": "Customer#847741820",
												"C_ADDRESS": "u3pxOpurV5M",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "8392.67"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ons. furiously ironic patterns nag carefully ",
												"C_PHONE": "32-276-955-5152",
												"C_CUSTKEY": "847741821",
												"C_NAME": "Customer#847741821",
												"C_ADDRESS": "3O1l 4w3beekn4U1nX6EmlY",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "705.83"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "uffily according to the regular, regular theodolites. slyly silent accou",
												"C_PHONE": "26-212-720-5266",
												"C_CUSTKEY": "847741822",
												"C_NAME": "Customer#847741822",
												"C_ADDRESS": "jj4BKW0COQ3Mya45gXKHgBvSxXQPaP",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "2799.87"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "pending packages haggle carefully bl",
												"C_PHONE": "20-646-570-6482",
												"C_CUSTKEY": "847741823",
												"C_NAME": "Customer#847741823",
												"C_ADDRESS": "WdeDk,CDIeZ",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8348.13"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "into beans impress foxes. boldly final ac",
												"C_PHONE": "21-103-799-1225",
												"C_CUSTKEY": "847741824",
												"C_NAME": "Customer#847741824",
												"C_ADDRESS": "P1taiFw5dSgw0ydeyjNt3",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "16.37"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "efully regular pinto beans us",
												"C_PHONE": "31-940-646-8454",
												"C_CUSTKEY": "847741825",
												"C_NAME": "Customer#847741825",
												"C_ADDRESS": "vOYbAUqqjETX8,DCzC7td",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "9138.49"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " theodolites hang slyly after the slyly slow accounts. in",
												"C_PHONE": "29-434-230-8957",
												"C_CUSTKEY": "847741826",
												"C_NAME": "Customer#847741826",
												"C_ADDRESS": "Vqvy4nWgEY",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6639.65"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "g furiously furiously regular pinto beans. carefully final theodolites cajole slyly even re",
												"C_PHONE": "18-229-690-6661",
												"C_CUSTKEY": "847741827",
												"C_NAME": "Customer#847741827",
												"C_ADDRESS": "E9n ao0zWiSZOAjq2",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6628.65"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ly final packages haggle. carefully final instructions wake ironic requests. quickly i",
												"C_PHONE": "22-662-107-7989",
												"C_CUSTKEY": "847741828",
												"C_NAME": "Customer#847741828",
												"C_ADDRESS": "ZRmsO2VXRrMlDPWjJGdVqL8lvQTuJCdMqMvw",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "8779.86"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " the final requests. silently",
												"C_PHONE": "28-789-549-3610",
												"C_CUSTKEY": "847741829",
												"C_NAME": "Customer#847741829",
												"C_ADDRESS": "Fk,E0ms5Pi",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7118.44"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " ironically ironic accounts are? express accounts sleep dolphins. unusual, bold accounts above the careful",
												"C_PHONE": "14-233-954-5441",
												"C_CUSTKEY": "847741830",
												"C_NAME": "Customer#847741830",
												"C_ADDRESS": "cyclZUUAeLp7548b0krCjmTxQOZ kkuE",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "1605.43"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "the carefully special foxes. bold, daring accounts believe quickly fina",
												"C_PHONE": "27-666-137-1088",
												"C_CUSTKEY": "847741831",
												"C_NAME": "Customer#847741831",
												"C_ADDRESS": "VJ,L4x4OLuWMAOwZXn6c0g8Xt",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "8396.16"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "yly according to the final pinto",
												"C_PHONE": "30-584-645-2857",
												"C_CUSTKEY": "847741832",
												"C_NAME": "Customer#847741832",
												"C_ADDRESS": "udpmkKCuR4jJ",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "4321.62"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": ". ironic accounts cajole quickly pinto beans. busily final packages nag quietly alongside of the silent, re",
												"C_PHONE": "13-204-311-6646",
												"C_CUSTKEY": "847741833",
												"C_NAME": "Customer#847741833",
												"C_ADDRESS": "diM4uleyFRmmu1sCxX87PgqeZL0OiVgJ7",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "9484.14"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "unusual instructions cajole furiously against the furiously even requests. furiously regul",
												"C_PHONE": "12-454-748-4327",
												"C_CUSTKEY": "847741834",
												"C_NAME": "Customer#847741834",
												"C_ADDRESS": "D5VzDjrqGIHMODzDvXPMk kV6M78KY",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8054.44"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "eans. blithely final requests affix carefull",
												"C_PHONE": "11-709-781-2887",
												"C_CUSTKEY": "847741835",
												"C_NAME": "Customer#847741835",
												"C_ADDRESS": "KVk1ikJasq9U64rqr4Jj0JScC8fgX o6ObbZo",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "3104.32"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "avely alongside of the slyly even idea",
												"C_PHONE": "19-931-671-2095",
												"C_CUSTKEY": "847741836",
												"C_NAME": "Customer#847741836",
												"C_ADDRESS": "4WJIbbHmYmxDDhaB0 5tfLkOvNI3fvgyF",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "-784.96"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "e carefully furiously ironic packages. bli",
												"C_PHONE": "13-981-803-5110",
												"C_CUSTKEY": "847741837",
												"C_NAME": "Customer#847741837",
												"C_ADDRESS": "OJwf,fevs2 3fb74GHu",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "5158.59"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ithely. slyly ironic excuses wake blithely about the blithely special ac",
												"C_PHONE": "15-781-395-1318",
												"C_CUSTKEY": "847741838",
												"C_NAME": "Customer#847741838",
												"C_ADDRESS": "niEj29kg,PVLolfdDf",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "7504.95"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "aggle blithely. carefully blithe depths across the Tiresias wake about the blithely stealthy pinto beans; expr",
												"C_PHONE": "12-208-402-8858",
												"C_CUSTKEY": "847741839",
												"C_NAME": "Customer#847741839",
												"C_ADDRESS": "vHUNS4LgdoPoXE2yZj",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "7727.33"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ironic courts wake blithely about the",
												"C_PHONE": "16-869-901-5625",
												"C_CUSTKEY": "847741840",
												"C_NAME": "Customer#847741840",
												"C_ADDRESS": "n,CCuyHJRS14Lw5DFHIrDwFHYFztfs",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5211.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " among the fluffily silent packages. bl",
												"C_PHONE": "28-621-106-6950",
												"C_CUSTKEY": "847741841",
												"C_NAME": "Customer#847741841",
												"C_ADDRESS": "Y20npVh6dCbw5",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "8351.59"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ltipliers wake carefully. silent ideas sleep about the furiously special requests. blithely final",
												"C_PHONE": "26-582-774-3663",
												"C_CUSTKEY": "847741842",
												"C_NAME": "Customer#847741842",
												"C_ADDRESS": "rI nuu8jE00Ug",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "3176.58"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "gged, busy packages. carefully ironic pinto beans above the ironic deposits sleep along",
												"C_PHONE": "17-229-635-5468",
												"C_CUSTKEY": "847741843",
												"C_NAME": "Customer#847741843",
												"C_ADDRESS": "bcZ25twFpfZWJEshe5Aj",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "3745.05"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ld excuses hinder furiously against the blithe packages. carefully specia",
												"C_PHONE": "26-496-670-7577",
												"C_CUSTKEY": "847741844",
												"C_NAME": "Customer#847741844",
												"C_ADDRESS": "niIIyXpKfhEW2FX9",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "-951.04"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "r requests. regular, regular packages nag since the slyly ironic deposits. p",
												"C_PHONE": "25-880-564-5445",
												"C_CUSTKEY": "847741845",
												"C_NAME": "Customer#847741845",
												"C_ADDRESS": "yZokok1cGideGxbhcttTUP,s,DzqY",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "7775.12"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ions cajole fluffily. blithely regular theodolites boost blithely at the furiously express dependencies. packag",
												"C_PHONE": "13-924-932-8491",
												"C_CUSTKEY": "847741846",
												"C_NAME": "Customer#847741846",
												"C_ADDRESS": "nTbyZJpWt3z,qqDEczBNd4",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "5409.98"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "elets. unusual requests cajole slyly requests. quickly reg",
												"C_PHONE": "24-723-929-7734",
												"C_CUSTKEY": "847741847",
												"C_NAME": "Customer#847741847",
												"C_ADDRESS": "Ew73RAqcEHy,k",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "8585.22"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ep slyly carefully unusual accounts. slyly express packages above ",
												"C_PHONE": "19-659-467-6235",
												"C_CUSTKEY": "847741848",
												"C_NAME": "Customer#847741848",
												"C_ADDRESS": "R9SuYLZUAOwibtCRr ,udZ",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "2920.53"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "nto beans nag slyly. final pinto beans cajole finally. th",
												"C_PHONE": "23-471-587-7969",
												"C_CUSTKEY": "847741849",
												"C_NAME": "Customer#847741849",
												"C_ADDRESS": "SsHC9Y,canpoIrTqVt",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "1270.74"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " haggle slyly across the furious",
												"C_PHONE": "17-200-953-6244",
												"C_CUSTKEY": "847741850",
												"C_NAME": "Customer#847741850",
												"C_ADDRESS": "oBpppspGhtyYxrdG0yOT9asD m9FVS",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "4212.46"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ironic, special dolphins haggle blithely bold, sly requests. blithely pending requests across the sl",
												"C_PHONE": "27-501-990-2503",
												"C_CUSTKEY": "847741851",
												"C_NAME": "Customer#847741851",
												"C_ADDRESS": "rqgRd 19gzZpTMzBGDj0c2cw CxfT0Z3,",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "887.46"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ndencies. silent accounts cajo",
												"C_PHONE": "12-435-957-9548",
												"C_CUSTKEY": "847741852",
												"C_NAME": "Customer#847741852",
												"C_ADDRESS": ",tG4I  eOCjTySYVYGD5CicN,2X",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8411.92"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "into beans wake blithely. carefully even pla",
												"C_PHONE": "27-566-399-8531",
												"C_CUSTKEY": "847741853",
												"C_NAME": "Customer#847741853",
												"C_ADDRESS": "ik,h6 cAaueU2JH,z,UK5h0zBy02rN 1",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5261.89"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "equests wake carefully! furiously regular requests wake blithely above the boldly pending fo",
												"C_PHONE": "17-223-591-4361",
												"C_CUSTKEY": "847741854",
												"C_NAME": "Customer#847741854",
												"C_ADDRESS": "F62Iv2Vu3GgToEvoK",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "5625.12"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "yly according to the close, pending pinto beans. busy excuses nag carefully unusual foxes. ironic deposits n",
												"C_PHONE": "24-823-249-3994",
												"C_CUSTKEY": "847741855",
												"C_NAME": "Customer#847741855",
												"C_ADDRESS": "6yMhIYGIBmY7JCgG,B1K5foCf",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "5367.57"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "unusual pinto beans. fluffily regular packages cajole always thin a",
												"C_PHONE": "12-303-854-3703",
												"C_CUSTKEY": "847741856",
												"C_NAME": "Customer#847741856",
												"C_ADDRESS": "U,97VF5EiIeNb V5HJiP2YTyyOryqTe",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "-298.07"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ourts. slyly bold requests about the carefully bold pinto beans cajole a",
												"C_PHONE": "16-414-244-8097",
												"C_CUSTKEY": "847741857",
												"C_NAME": "Customer#847741857",
												"C_ADDRESS": "i3VdNpcM7yXWG7Bu",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "4189.86"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "he furiously express frets. furiously unusual deposits according to the ",
												"C_PHONE": "16-367-294-7486",
												"C_CUSTKEY": "847741858",
												"C_NAME": "Customer#847741858",
												"C_ADDRESS": "BSjApmdG4lm",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "6025.64"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " packages across the platelets are during the bold pinto beans. boldly pending pinto beans nag fluffily. carefully i",
												"C_PHONE": "27-441-941-2497",
												"C_CUSTKEY": "847741859",
												"C_NAME": "Customer#847741859",
												"C_ADDRESS": "InrE3CJGiPtDqpm1,MwHESqBkEj6qQ",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "4990.56"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "lithely special asymptotes nag against the ironic ideas. bold theodolites instead o",
												"C_PHONE": "17-675-368-2648",
												"C_CUSTKEY": "847741860",
												"C_NAME": "Customer#847741860",
												"C_ADDRESS": "hNcK5Qmy6JAjoDRl6Y6BH,7nHegzPHcA",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-730.14"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "bold foxes after the blithely ironic platelets shall are ",
												"C_PHONE": "30-422-706-7167",
												"C_CUSTKEY": "847741861",
												"C_NAME": "Customer#847741861",
												"C_ADDRESS": "e5Q1BYBFqFBIoG0gk",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "2400.51"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "tes haggle carefully according to the furiously even platelets. quickly unusual deposits serve slyly furiously un",
												"C_PHONE": "32-893-496-2811",
												"C_CUSTKEY": "847741862",
												"C_NAME": "Customer#847741862",
												"C_ADDRESS": "RiULKC13mhL5oPP1BbyB4pEiq5sOO",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "6415.74"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " even requests. blithely express platelets are about the slyly final platelets. carefully fluffy pi",
												"C_PHONE": "15-352-518-5908",
												"C_CUSTKEY": "847741863",
												"C_NAME": "Customer#847741863",
												"C_ADDRESS": "qjZdFa p W1QAQjI",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "5447.30"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "e quickly ironic deposits. even, unusual requests maintain furiously above the carefully bold accounts",
												"C_PHONE": "22-354-796-1237",
												"C_CUSTKEY": "847741864",
												"C_NAME": "Customer#847741864",
												"C_ADDRESS": "yrMMSSHPGKLVIst49suwMTeLp",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "8781.71"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ickly final packages wake slyly abov",
												"C_PHONE": "27-260-753-6704",
												"C_CUSTKEY": "847741865",
												"C_NAME": "Customer#847741865",
												"C_ADDRESS": "OYEf5fwvliuA84alSzF31LkLtng",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5334.61"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " carefully regular deposits cajole slyly. furiously even deposits ",
												"C_PHONE": "12-217-356-7272",
												"C_CUSTKEY": "847741866",
												"C_NAME": "Customer#847741866",
												"C_ADDRESS": "abWr7LSFgRZ6kFjQDL6",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "6780.30"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "frays integrate blithely above the blithely ",
												"C_PHONE": "23-426-461-4137",
												"C_CUSTKEY": "847741867",
												"C_NAME": "Customer#847741867",
												"C_ADDRESS": "7VIUO9DP6Vq7pBl y dlS0I",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "5472.61"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "unts? furiously final requests alongside of the blithely express deposits are caref",
												"C_PHONE": "17-635-240-3087",
												"C_CUSTKEY": "847741868",
												"C_NAME": "Customer#847741868",
												"C_ADDRESS": "90EJoWFyh0eEOCZqlbG7j",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "5192.66"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "lithely pending dolphins against the unusual requests detect furiously ac",
												"C_PHONE": "13-689-607-4336",
												"C_CUSTKEY": "847741869",
												"C_NAME": "Customer#847741869",
												"C_ADDRESS": "fnM8tkp9rFWBl0,Wdw",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8026.85"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "tions use carefully. ironic accounts detect fluffily furiously even courts. accounts s",
												"C_PHONE": "32-945-714-7939",
												"C_CUSTKEY": "847741870",
												"C_NAME": "Customer#847741870",
												"C_ADDRESS": "Kj7xbGHb6AIlYE",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "1256.49"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "le after the final accounts. sly pinto bea",
												"C_PHONE": "23-217-394-4289",
												"C_CUSTKEY": "847741871",
												"C_NAME": "Customer#847741871",
												"C_ADDRESS": "hNNSeAEHUtjFnXqgkxEzBWbHHgdcM7",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "6743.05"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "requests across the furiously special theodolites might are slyly ca",
												"C_PHONE": "12-905-743-4236",
												"C_CUSTKEY": "847741872",
												"C_NAME": "Customer#847741872",
												"C_ADDRESS": "KhJR,mdONWN3QApGLNgtX a2AghECrPNI6813U",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "6557.23"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "hely carefully special ideas. f",
												"C_PHONE": "18-826-937-2130",
												"C_CUSTKEY": "847741873",
												"C_NAME": "Customer#847741873",
												"C_ADDRESS": "8kvv5R8sogeWk52xq9V4AjeZ1jqQu",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "7330.65"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " ironic warthogs sleep slyly about the carefully unusual asymptotes. furiously unusual deposits above the bl",
												"C_PHONE": "20-747-745-2380",
												"C_CUSTKEY": "847741874",
												"C_NAME": "Customer#847741874",
												"C_ADDRESS": "Z4hOJwiK9pP1yxcNh6KUkhAp,ZpAanIh3A",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "4308.08"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "luffily alongside of the blithely final r",
												"C_PHONE": "34-822-825-9147",
												"C_CUSTKEY": "847741875",
												"C_NAME": "Customer#847741875",
												"C_ADDRESS": "5,f0cofXAlDgDJu8P e",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "1895.08"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "sts. blithely unusual packages integrate quickly according to the carefully regular packages; furiou",
												"C_PHONE": "29-642-709-5015",
												"C_CUSTKEY": "847741876",
												"C_NAME": "Customer#847741876",
												"C_ADDRESS": "qTfUAjZ Ush wsk1jiHaXVW",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "3639.71"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "e alongside of the thinly pending theodolites. slyly express ",
												"C_PHONE": "17-825-167-4062",
												"C_CUSTKEY": "847741877",
												"C_NAME": "Customer#847741877",
												"C_ADDRESS": "vyTxikq 60OOQ3YLcOCWZ4nRg3loBOpIZ",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-409.52"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "express accounts. pinto beans according to the quickly slo",
												"C_PHONE": "23-737-153-4078",
												"C_CUSTKEY": "847741878",
												"C_NAME": "Customer#847741878",
												"C_ADDRESS": "atw7agW4sU",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "1116.34"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "yly? blithely ironic frets sleep carefully. regular accounts haggle furiously carefully express theodolites. caref",
												"C_PHONE": "13-785-554-6971",
												"C_CUSTKEY": "847741879",
												"C_NAME": "Customer#847741879",
												"C_ADDRESS": ",ibnwcqznBrdKjOrjIi4Zs5Sc MRTlz",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "5234.51"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "e by the ironic packages: carefully even accounts sleep. final pinto beans nod fluffily. final excuses haggle blith",
												"C_PHONE": "11-390-559-7624",
												"C_CUSTKEY": "847741880",
												"C_NAME": "Customer#847741880",
												"C_ADDRESS": "sk,MSdPfGD5i",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7413.39"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "aintain above the even deposits. ironic instructions use carefully above the carefu",
												"C_PHONE": "12-370-490-2570",
												"C_CUSTKEY": "847741881",
												"C_NAME": "Customer#847741881",
												"C_ADDRESS": "mm0lrTsDeE74Pw15ax8gz1qWHVz9K 7pMSp3KSb",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8825.80"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly bold packages wake. ideas nag slyly. ironic accounts are carefully w",
												"C_PHONE": "12-400-516-2003",
												"C_CUSTKEY": "847741882",
												"C_NAME": "Customer#847741882",
												"C_ADDRESS": "q1O01keNmTxmcvCxZE LuHvbFeakL",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "9310.82"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ely ironic deposits cajole slyly above the asymptotes. quickly express instructions boost furiou",
												"C_PHONE": "21-154-115-4056",
												"C_CUSTKEY": "847741883",
												"C_NAME": "Customer#847741883",
												"C_ADDRESS": "QXgT n7jGOscKDKcDD1OIchk",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "-967.74"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ly pending deposits. furiously slow requests",
												"C_PHONE": "20-629-180-5848",
												"C_CUSTKEY": "847741884",
												"C_NAME": "Customer#847741884",
												"C_ADDRESS": "PRH6Tw1JICo59hn4exDmACNGFxRPUh",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "2133.83"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " furiously ironic courts sleep against the accounts-- slyly furious ",
												"C_PHONE": "24-805-798-6000",
												"C_CUSTKEY": "847741885",
												"C_NAME": "Customer#847741885",
												"C_ADDRESS": "ahJhfQMndSh3uvokkFcLuHUXc hbjdDpIQBtw",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "1236.11"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ckly slow deposits. enticingly ironic deposits towar",
												"C_PHONE": "27-783-353-9828",
												"C_CUSTKEY": "847741886",
												"C_NAME": "Customer#847741886",
												"C_ADDRESS": "RRH859BPWKy bM",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5298.48"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "f the slyly silent excuses. quiet, permanent request",
												"C_PHONE": "16-680-786-9608",
												"C_CUSTKEY": "847741887",
												"C_NAME": "Customer#847741887",
												"C_ADDRESS": "KPsEWrmqg2vaNSzUlsmeA",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "4646.41"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ites cajole furiously. accounts wake at the stealthily final ",
												"C_PHONE": "19-966-243-9819",
												"C_CUSTKEY": "847741888",
												"C_NAME": "Customer#847741888",
												"C_ADDRESS": "KRIfH880jjSdi6zfGPp7KT1oeylmn8",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1180.00"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "requests around the carefully iron",
												"C_PHONE": "20-135-963-7485",
												"C_CUSTKEY": "847741889",
												"C_NAME": "Customer#847741889",
												"C_ADDRESS": "dGdR8uJ81l7Lxqt1PtlxqL38c8epio7",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8213.54"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "e packages-- requests use regularly across the slyly id",
												"C_PHONE": "30-783-455-5379",
												"C_CUSTKEY": "847741890",
												"C_NAME": "Customer#847741890",
												"C_ADDRESS": "pAO uG3vBjPNUAvdOdHqpe0shq ,Zg",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "3951.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "leep about the deposits. slyly dogge",
												"C_PHONE": "32-116-680-5303",
												"C_CUSTKEY": "847741891",
												"C_NAME": "Customer#847741891",
												"C_ADDRESS": "WbsQ6oVVXW1EQiWZWA4gaMz6BG0,q4Gu5",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "9519.22"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "quickly ironic somas cajole slyly. regular, final asymptotes haggle slyly. even, even theodolites",
												"C_PHONE": "31-880-234-7012",
												"C_CUSTKEY": "847741892",
												"C_NAME": "Customer#847741892",
												"C_ADDRESS": "5z8HskFLT9TSONop,ik7Y937zCO",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "3681.84"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ts are. slyly silent deposits detect",
												"C_PHONE": "13-175-933-3427",
												"C_CUSTKEY": "847741893",
												"C_NAME": "Customer#847741893",
												"C_ADDRESS": "HjeRD1lhCS7AzS",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "3648.61"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "sly regular deposits sleep blithely. silent deposits eat furiously final packages. carefully ironic packages",
												"C_PHONE": "24-591-725-2689",
												"C_CUSTKEY": "847741894",
												"C_NAME": "Customer#847741894",
												"C_ADDRESS": "CcRBr7bDyR ",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "6117.55"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "e fluffily special instructions nag carefull",
												"C_PHONE": "14-290-711-4021",
												"C_CUSTKEY": "847741895",
												"C_NAME": "Customer#847741895",
												"C_ADDRESS": "yUQaw7bkg,LpMxlPMtPnhX2TivPscXNIo EtS",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "9641.51"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "usly silent instructions cajole furiously according to the slyly bold deposits! theodolites sleep",
												"C_PHONE": "27-632-724-3100",
												"C_CUSTKEY": "847741896",
												"C_NAME": "Customer#847741896",
												"C_ADDRESS": "3gHBzi6CJ58ButjdwFdyxQGkNLdL3mdyEFODFk",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "1986.77"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "out the furiously ironic accounts. regular packages dazzle blithely slyly express dep",
												"C_PHONE": "25-720-601-6184",
												"C_CUSTKEY": "847741897",
												"C_NAME": "Customer#847741897",
												"C_ADDRESS": "JHP diU7b15Ah6gNxu",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "4524.06"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "carefully pending theodolites try to sleep fur",
												"C_PHONE": "16-512-966-4709",
												"C_CUSTKEY": "847741898",
												"C_NAME": "Customer#847741898",
												"C_ADDRESS": "J3rirrmF,20cyasc7Vniq,Mt4Ia0ODQ,ULEo6B",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1853.01"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ess requests are blithely ironic, regular deposits",
												"C_PHONE": "31-786-413-9310",
												"C_CUSTKEY": "847741899",
												"C_NAME": "Customer#847741899",
												"C_ADDRESS": "wKihdrkRgTBJHDgHoXUKwBPwpfbClVy4S",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "555.26"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " unusual courts. unusual ideas haggle furiously carefully ironic foxes. furiously special excuses are blithely regul",
												"C_PHONE": "30-575-288-7114",
												"C_CUSTKEY": "847741900",
												"C_NAME": "Customer#847741900",
												"C_ADDRESS": "MeGkKm0L uRc",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "2205.49"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ourts wake. furiously special platelets wake furiously. quickly pending req",
												"C_PHONE": "18-911-793-2622",
												"C_CUSTKEY": "847741901",
												"C_NAME": "Customer#847741901",
												"C_ADDRESS": "51YQxcaAFvGfj4C4NSp",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6567.46"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "usual, silent requests nag. slyly bold instructions may was slyly. ",
												"C_PHONE": "27-230-232-3502",
												"C_CUSTKEY": "847741902",
												"C_NAME": "Customer#847741902",
												"C_ADDRESS": "h6JJ5xvGbLnKuabDkAeI F8GgRNvLKBxwID5",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "3324.05"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "he furiously special asymptotes wake quickly regular requests. exp",
												"C_PHONE": "12-934-407-1208",
												"C_CUSTKEY": "847741903",
												"C_NAME": "Customer#847741903",
												"C_ADDRESS": "zHJUeCRNlqdGvth",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "7287.14"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ideas may detect furiously above the carefully ironic excu",
												"C_PHONE": "15-328-267-7636",
												"C_CUSTKEY": "847741904",
												"C_NAME": "Customer#847741904",
												"C_ADDRESS": "BltuupEgFgP,xU9I1W",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "9995.99"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "express foxes boost fluffily closely fi",
												"C_PHONE": "22-762-760-3624",
												"C_CUSTKEY": "847741905",
												"C_NAME": "Customer#847741905",
												"C_ADDRESS": "YSb7lcsh,hWP,XZxHwt4Fg6QxI7,ZZ3QYMe",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "8608.52"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ole final, even deposits. quic",
												"C_PHONE": "30-962-818-4350",
												"C_CUSTKEY": "847741906",
												"C_NAME": "Customer#847741906",
												"C_ADDRESS": "o20r5tPIBQ3jCaapaUlEtUk",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "9520.02"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " regular, regular instructions. carefully stealthy deposits boost bold packages. regular",
												"C_PHONE": "34-183-320-3502",
												"C_CUSTKEY": "847741907",
												"C_NAME": "Customer#847741907",
												"C_ADDRESS": "mmlSSJqu7 QHU4CbvFcTqJtE5QN1Ybyh9",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "6068.32"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "special deposits boost quickly. requests across the blithely ironic packages are",
												"C_PHONE": "28-809-805-2448",
												"C_CUSTKEY": "847741908",
												"C_NAME": "Customer#847741908",
												"C_ADDRESS": "O3Ovt0XBp9HLi0 5RHZ8bFGN9w,dCsBw",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7353.73"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "sts. blithely ironic deposits impress. bold, final requests nag blithe",
												"C_PHONE": "32-624-441-6523",
												"C_CUSTKEY": "847741909",
												"C_NAME": "Customer#847741909",
												"C_ADDRESS": "kNr1D0MTCgPlaHqR",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "7151.21"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "zzle. even, special deposits sleep slyly. slyly bold requests wake furiously furiously regular deposits.",
												"C_PHONE": "20-735-666-5636",
												"C_CUSTKEY": "847741910",
												"C_NAME": "Customer#847741910",
												"C_ADDRESS": "UdtkKxhF4ATUsUFyNvlldCdf0",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "2421.27"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "platelets. fluffily bold foxes except",
												"C_PHONE": "29-577-624-8414",
												"C_CUSTKEY": "847741911",
												"C_NAME": "Customer#847741911",
												"C_ADDRESS": "KzYLZ79OQGVzs9YwepGWmEHI0hbpCw,ss4",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "3183.72"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "k requests try to serve. carefully final ideas hinder car",
												"C_PHONE": "15-106-877-2901",
												"C_CUSTKEY": "847741912",
												"C_NAME": "Customer#847741912",
												"C_ADDRESS": "CiZ6mQE7g1",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "2760.97"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y bold dependencies. slyly express ideas may boost across the ironic braids. fluffily special foxes snooz",
												"C_PHONE": "25-537-809-4208",
												"C_CUSTKEY": "847741913",
												"C_NAME": "Customer#847741913",
												"C_ADDRESS": "ivVlLzcFNabe3",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "3564.10"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "around the slyly pending asymptotes. carefully even ideas are fluffily. deposits are",
												"C_PHONE": "23-912-573-5234",
												"C_CUSTKEY": "847741914",
												"C_NAME": "Customer#847741914",
												"C_ADDRESS": "RuwZwhS24,9cYb,xaYMsSnjQ22KsNWiF0oYiktlH",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "4848.39"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "g asymptotes wake quickly bold theodolites. final, special pinto beans according to the slyly ",
												"C_PHONE": "19-161-932-7554",
												"C_CUSTKEY": "847741915",
												"C_NAME": "Customer#847741915",
												"C_ADDRESS": "7HnyEULYV014",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "7874.10"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "blithely around the slyly regular excuses. slyly even sentiments use pending, regular depo",
												"C_PHONE": "12-369-578-5642",
												"C_CUSTKEY": "847741916",
												"C_NAME": "Customer#847741916",
												"C_ADDRESS": "hmEu3UaiX f7E7jMkCYWi4XxM,M",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8076.23"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "le fluffily slyly express theodolites. ac",
												"C_PHONE": "24-292-225-4179",
												"C_CUSTKEY": "847741917",
												"C_NAME": "Customer#847741917",
												"C_ADDRESS": "JPTA4ayqIUUvYi",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "6316.46"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " furiously according to the blithely regular packages. packages haggle. regular, regular packages above the car",
												"C_PHONE": "12-256-790-3739",
												"C_CUSTKEY": "847741918",
												"C_NAME": "Customer#847741918",
												"C_ADDRESS": "HB5Uk5hKJrm",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8710.08"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "equests. fluffily final platelets after the regular acco",
												"C_PHONE": "18-469-652-4780",
												"C_CUSTKEY": "847741919",
												"C_NAME": "Customer#847741919",
												"C_ADDRESS": "VD,J1jkbas3",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "376.81"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly theodolites. ruthlessly slow pinto bean",
												"C_PHONE": "26-503-778-1025",
												"C_CUSTKEY": "847741920",
												"C_NAME": "Customer#847741920",
												"C_ADDRESS": "bJTqyJayA23TFKevOw 8T",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5921.82"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "quests. blithely ironic requests boost according to the quickly pending dolphin",
												"C_PHONE": "18-879-463-6532",
												"C_CUSTKEY": "847741921",
												"C_NAME": "Customer#847741921",
												"C_ADDRESS": "07T8DLsO6Owz0M,J D8vCD1nkf0e",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "9118.30"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " accounts haggle busily slyly even excuses. fluffy packag",
												"C_PHONE": "30-834-327-2949",
												"C_CUSTKEY": "847741922",
												"C_NAME": "Customer#847741922",
												"C_ADDRESS": " dyGOGfnAI8XhWJ",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8288.81"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "among the fluffily pending deposits. even packages wake carefully blithely ",
												"C_PHONE": "10-526-987-2565",
												"C_CUSTKEY": "847741923",
												"C_NAME": "Customer#847741923",
												"C_ADDRESS": "Zr3DBK2AuwG0JhZolL9vXaVOVD4cMlsaf",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "4079.34"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "uffily regular theodolites. quickly express reque",
												"C_PHONE": "21-174-232-1371",
												"C_CUSTKEY": "847741924",
												"C_NAME": "Customer#847741924",
												"C_ADDRESS": "So7UWO7f3kC45Tt",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "7390.64"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "s around the carefully regular dependencies",
												"C_PHONE": "25-709-338-6700",
												"C_CUSTKEY": "847741925",
												"C_NAME": "Customer#847741925",
												"C_ADDRESS": "Ad2swwGT8y",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "586.45"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly final dependencies. even accounts haggle fluffily along the accounts. carefully pending requests will have to na",
												"C_PHONE": "31-430-463-7428",
												"C_CUSTKEY": "847741926",
												"C_NAME": "Customer#847741926",
												"C_ADDRESS": "hvpOp0rwF8vG",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "9419.40"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "lithely pending accounts. slyly bold instructions nag furiously carefully regular pa",
												"C_PHONE": "24-609-744-9351",
												"C_CUSTKEY": "847741927",
												"C_NAME": "Customer#847741927",
												"C_ADDRESS": "CGF7SzXxpZ38zxynflfotfOiy",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "8966.20"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e blithely after the final requests. blithely unusual packages haggle across the furiously unusual accounts. r",
												"C_PHONE": "31-895-198-2345",
												"C_CUSTKEY": "847741928",
												"C_NAME": "Customer#847741928",
												"C_ADDRESS": "VXYDrtl2Az4Qc8jph1xerjVk1Aj",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "3961.60"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "instead of the furiously silent accounts. even foxes above the silent, final ",
												"C_PHONE": "20-593-577-6234",
												"C_CUSTKEY": "847741929",
												"C_NAME": "Customer#847741929",
												"C_ADDRESS": "P08LIgNc8UFUvloeOsHQpce,GcgnDC1apNo",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8523.53"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ost carefully excuses. regular, even courts alongside of the regular accounts wake furiously spec",
												"C_PHONE": "32-121-865-9234",
												"C_CUSTKEY": "847741930",
												"C_NAME": "Customer#847741930",
												"C_ADDRESS": "RhsTIsjfa19tSTC2Q4G6kCZ0",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "89.53"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " haggle escapades. carefully final instructions ",
												"C_PHONE": "24-795-404-2117",
												"C_CUSTKEY": "847741931",
												"C_NAME": "Customer#847741931",
												"C_ADDRESS": "F4sotAF9PXJgamzYxEwgsQfVIYBpkrWh3",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "6695.44"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "refully ironic theodolites promise blithely carefully final platel",
												"C_PHONE": "28-590-339-8083",
												"C_CUSTKEY": "847741932",
												"C_NAME": "Customer#847741932",
												"C_ADDRESS": "jNyp2dt4Z1G1f4jJ",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "9213.22"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " sleep pinto beans. slyly ironic requests integrate carefully regular attainments. brave, b",
												"C_PHONE": "30-294-959-1963",
												"C_CUSTKEY": "847741933",
												"C_NAME": "Customer#847741933",
												"C_ADDRESS": "BikCF,9s1WTM,8SYm2ArtyoerfyZduy8dxDz",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8586.04"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "refully ironic requests sleep carefully ironic, unusual platelets. fluffily silent requests detect slyly slyly b",
												"C_PHONE": "27-710-302-4963",
												"C_CUSTKEY": "847741934",
												"C_NAME": "Customer#847741934",
												"C_ADDRESS": "raelVyEgVqlg7FUvFeny6RQb2",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5603.16"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "refully around the pending accounts. quickly regular somas among",
												"C_PHONE": "22-239-879-4381",
												"C_CUSTKEY": "847741935",
												"C_NAME": "Customer#847741935",
												"C_ADDRESS": "ZXRClRB3gmhpc",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "-634.23"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " the blithely ironic requests. even theodolites are fluffily ironic depo",
												"C_PHONE": "21-237-750-7104",
												"C_CUSTKEY": "847741936",
												"C_NAME": "Customer#847741936",
												"C_ADDRESS": ",GMdYHClOH8EBNtIIT1kVBB",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "8351.52"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "gedly silent accounts. quick pinto beans daz",
												"C_PHONE": "19-323-909-9732",
												"C_CUSTKEY": "847741937",
												"C_NAME": "Customer#847741937",
												"C_ADDRESS": "SQpyGfhcLnA",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1988.19"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ng patterns within the packages cajole blithely among the final requests. fluffil",
												"C_PHONE": "16-199-378-2935",
												"C_CUSTKEY": "847741938",
												"C_NAME": "Customer#847741938",
												"C_ADDRESS": "2PwwxGVZ8xBKu2ZQsynYVs0oL,v uLz",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "6521.14"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "mptotes about the carefully unusual packages eat against the blithely final multipliers. platelets wake according to",
												"C_PHONE": "15-361-591-5519",
												"C_CUSTKEY": "847741939",
												"C_NAME": "Customer#847741939",
												"C_ADDRESS": "Bv3Cldts63H0QqhY,3nsLvcrH6eAJp9WmLnWA3",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "5914.41"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "nding ideas. fluffily even packages sleep slyly agai",
												"C_PHONE": "17-161-442-4046",
												"C_CUSTKEY": "847741940",
												"C_NAME": "Customer#847741940",
												"C_ADDRESS": "Hu4GcxblA2791tpcZYmjKAkHP9,ZizCpRqe",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "5504.49"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ss packages. ironic excuses haggle quickly. furiously special theodolites detect slyly blithely express instruct",
												"C_PHONE": "30-257-364-3868",
												"C_CUSTKEY": "847741941",
												"C_NAME": "Customer#847741941",
												"C_ADDRESS": "89pEvwhF9KX7pXh5",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "1901.59"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s. regular, pending requests haggle blithely express",
												"C_PHONE": "15-277-854-2912",
												"C_CUSTKEY": "847741942",
												"C_NAME": "Customer#847741942",
												"C_ADDRESS": "2u zyPy9ZFzqkXBWE6lFwoF6c2h6 E",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "2946.54"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " regular instructions serve furiously. closely special instructions sleep flu",
												"C_PHONE": "16-309-781-8350",
												"C_CUSTKEY": "847741943",
												"C_NAME": "Customer#847741943",
												"C_ADDRESS": "eMOLyzn1G,FCePVZWfG",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "9477.82"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lly furiously final pinto beans. pending instructions detect regular, regular ",
												"C_PHONE": "24-624-150-8074",
												"C_CUSTKEY": "847741944",
												"C_NAME": "Customer#847741944",
												"C_ADDRESS": "8GbmfMqBjaq8Wd",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "736.67"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " detect blithely around the carefully final depe",
												"C_PHONE": "18-243-883-1384",
												"C_CUSTKEY": "847741945",
												"C_NAME": "Customer#847741945",
												"C_ADDRESS": "L2jQYP6SrSPHr QjRkBNN",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "4129.02"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ic requests cajole carefully slyly pending ideas. pending dolphins after the sly, regular instructions hag",
												"C_PHONE": "34-980-466-1810",
												"C_CUSTKEY": "847741946",
												"C_NAME": "Customer#847741946",
												"C_ADDRESS": "PNNkD85YBHOcaNEdPzkOC v9seP521n7i5cdW6o",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "6379.36"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "g blithely quickly quiet accounts",
												"C_PHONE": "23-451-754-4507",
												"C_CUSTKEY": "847741947",
												"C_NAME": "Customer#847741947",
												"C_ADDRESS": "epaLEUYzUBgghkmX0,Z ",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "9922.47"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "of the slyly regular pinto beans. silent requests are. regular instructions engage. quickly express asympto",
												"C_PHONE": "26-319-146-5597",
												"C_CUSTKEY": "847741948",
												"C_NAME": "Customer#847741948",
												"C_ADDRESS": "HegTcEoYI8h2ejtbSOayxHsU4 hFuaQjBK",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5002.29"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "usly bold dependencies. final accounts believe carefully regular deposits. final i",
												"C_PHONE": "31-259-493-6238",
												"C_CUSTKEY": "847741949",
												"C_NAME": "Customer#847741949",
												"C_ADDRESS": "C4gD kyCk6SWx",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "9523.10"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "nal foxes. quickly ironic packages above the silent foxes sleep cou",
												"C_PHONE": "34-807-474-4073",
												"C_CUSTKEY": "847741950",
												"C_NAME": "Customer#847741950",
												"C_ADDRESS": "CGgjp5XD1hoxQA5O",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "2800.02"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "eans. slyly regular deposits cajole carefully against the silent ideas. unusual packages aro",
												"C_PHONE": "19-985-726-4196",
												"C_CUSTKEY": "847741951",
												"C_NAME": "Customer#847741951",
												"C_ADDRESS": "v ZFMwGuld TKG3d",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "-126.59"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " the express foxes. furiously regular w",
												"C_PHONE": "13-807-571-1689",
												"C_CUSTKEY": "847741952",
												"C_NAME": "Customer#847741952",
												"C_ADDRESS": "gK,uTm3hPjuD1F28tBiFmOELVn",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "4393.71"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ly express requests; quickly final depo",
												"C_PHONE": "32-978-238-7316",
												"C_CUSTKEY": "847741953",
												"C_NAME": "Customer#847741953",
												"C_ADDRESS": "VPM0I61VsC0pN7oUU,1A7ITPKN bnE2oCw6i,l4v",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "18.57"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "usly regular requests snooze fluffily regular, regular theodolites. regular, final req",
												"C_PHONE": "18-355-740-7857",
												"C_CUSTKEY": "847741954",
												"C_NAME": "Customer#847741954",
												"C_ADDRESS": "m bSrh3PZSWk5ngWHQStEL SNL0vm",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "2067.17"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "d busily silent theodolites. sly accounts alongside of the regular foxes haggl",
												"C_PHONE": "33-294-228-5861",
												"C_CUSTKEY": "847741955",
												"C_NAME": "Customer#847741955",
												"C_ADDRESS": "dWh5c7AeBZ6bMZD8ylzWLpPG",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "2903.78"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ajole carefully slow packages. express courts nag regular, special ideas. furiousl",
												"C_PHONE": "11-701-553-1684",
												"C_CUSTKEY": "847741956",
												"C_NAME": "Customer#847741956",
												"C_ADDRESS": " yV1mR59PgO3q,H5vqk",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "5807.80"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "c realms nag. multipliers sleep blithely ",
												"C_PHONE": "34-974-987-7160",
												"C_CUSTKEY": "847741957",
												"C_NAME": "Customer#847741957",
												"C_ADDRESS": "5ta8W42qMsSs",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "6675.44"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "gle blithely even ideas. furiously regular accounts wake blithely fl",
												"C_PHONE": "24-721-578-1075",
												"C_CUSTKEY": "847741958",
												"C_NAME": "Customer#847741958",
												"C_ADDRESS": "z2isEL3o52fOZLh,5YWl6dIDOj99S6nCB2",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "3131.57"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " furiously pending instructions h",
												"C_PHONE": "20-458-393-1178",
												"C_CUSTKEY": "847741959",
												"C_NAME": "Customer#847741959",
												"C_ADDRESS": "ApwxvDYp3o8Z2nBZJ5dJi",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "6212.36"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " quickly final ideas wake thinly furiously fina",
												"C_PHONE": "30-473-741-5336",
												"C_CUSTKEY": "847741960",
												"C_NAME": "Customer#847741960",
												"C_ADDRESS": "cyvApdG7X4MEw38Nc",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8135.50"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "packages sleep furiously warthogs. blithely final requests are. even epitaphs believe around the ac",
												"C_PHONE": "29-332-196-4658",
												"C_CUSTKEY": "847741961",
												"C_NAME": "Customer#847741961",
												"C_ADDRESS": "72,cFzf2YSQv0oYCe FG3VSfS",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "1414.98"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y even, unusual accounts. silent foxes are furiously. ",
												"C_PHONE": "16-522-121-4862",
												"C_CUSTKEY": "847741962",
												"C_NAME": "Customer#847741962",
												"C_ADDRESS": "ZxO5La0tv4I4gUv 32HOo6OfLkDeP4M",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "8499.30"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sly. bold, even accounts sleep. instructions integrate carefully above the pending pinto beans. slyly special",
												"C_PHONE": "22-145-321-2373",
												"C_CUSTKEY": "847741963",
												"C_NAME": "Customer#847741963",
												"C_ADDRESS": "AH f2zBNI7SYB3aR7YI",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "-124.21"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "s are quickly unusual courts? dolphins above the regular realms haggle sometimes caref",
												"C_PHONE": "22-649-687-7015",
												"C_CUSTKEY": "847741964",
												"C_NAME": "Customer#847741964",
												"C_ADDRESS": ",fRNNkev476JzzGrXqU60uIihc",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "355.94"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " pinto beans. express dependencies above the final theodolites use even accounts. carefully",
												"C_PHONE": "16-601-725-1462",
												"C_CUSTKEY": "847741965",
												"C_NAME": "Customer#847741965",
												"C_ADDRESS": "HPTFJhGjL0CW4,dao0DKw87WNHL8e1JJA",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "7250.14"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " integrate final, special dependencies.",
												"C_PHONE": "19-449-701-3916",
												"C_CUSTKEY": "847741966",
												"C_NAME": "Customer#847741966",
												"C_ADDRESS": "BNQONOVRNb,W8PoI9Ym",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "4158.43"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "s mold. final, bold pinto beans sleep about the boldly final patterns? even requests haggl",
												"C_PHONE": "15-496-648-2470",
												"C_CUSTKEY": "847741967",
												"C_NAME": "Customer#847741967",
												"C_ADDRESS": "rjBqvCkQ02BeQNDzIaTXXWZ42e7FGFO1",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "5801.04"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ld requests wake slyly according to the carefu",
												"C_PHONE": "23-691-478-4585",
												"C_CUSTKEY": "847741968",
												"C_NAME": "Customer#847741968",
												"C_ADDRESS": "8TN6UsGJqClgeosJMw7tuvvLv9Y,tSHMe6",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "3131.52"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ly regular foxes wake according to the fur",
												"C_PHONE": "20-842-326-5404",
												"C_CUSTKEY": "847741969",
												"C_NAME": "Customer#847741969",
												"C_ADDRESS": "Np10xAmmLc7y,YHfQlSbT7",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "5395.71"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " the pending packages. even packages sleep quickly slyly blithe multipliers. ",
												"C_PHONE": "27-569-319-1624",
												"C_CUSTKEY": "847741970",
												"C_NAME": "Customer#847741970",
												"C_ADDRESS": "20BP0j8eCObs K0Xaw",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "-306.53"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "quickly regular deposits detect about th",
												"C_PHONE": "17-142-878-9839",
												"C_CUSTKEY": "847741971",
												"C_NAME": "Customer#847741971",
												"C_ADDRESS": "PtjcexsTb1Xp4k",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "5022.03"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " final pinto beans wake blithely final accounts. regular, special packages sleep slyly. final, express ",
												"C_PHONE": "21-859-751-1612",
												"C_CUSTKEY": "847741972",
												"C_NAME": "Customer#847741972",
												"C_ADDRESS": "EZzlUlOmrdL Y0bg9VEECng X",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "192.65"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " quickly even excuses-- permanently ironic pinto beans haggle blithely. furious",
												"C_PHONE": "14-191-702-9990",
												"C_CUSTKEY": "847741973",
												"C_NAME": "Customer#847741973",
												"C_ADDRESS": "8EK96dYmZDpJvZfq1cY or4w03RHFAPn ",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "1745.63"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ously even deposits along the regular packages use furiou",
												"C_PHONE": "23-537-598-6485",
												"C_CUSTKEY": "847741974",
												"C_NAME": "Customer#847741974",
												"C_ADDRESS": " 6Lcvmh8Hdc11L,P",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "-159.31"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly even ideas. requests need to lose blithely. regular, even packages sleep. slyly even courts a",
												"C_PHONE": "28-646-713-2459",
												"C_CUSTKEY": "847741975",
												"C_NAME": "Customer#847741975",
												"C_ADDRESS": "toe HP,RXsvAHeNmgAuMkw 9mlewhGi2iA1W4",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "4332.62"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " the blithely silent packages. platelets boost. regula",
												"C_PHONE": "10-220-484-4504",
												"C_CUSTKEY": "847741976",
												"C_NAME": "Customer#847741976",
												"C_ADDRESS": "rHKvyDBSAZccZHaZQL,",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "7340.69"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "he slyly pending foxes try to sleep carefully along the express accounts. final packages haggle carefully ca",
												"C_PHONE": "10-842-639-4310",
												"C_CUSTKEY": "847741977",
												"C_NAME": "Customer#847741977",
												"C_ADDRESS": "ixAs4v031K3FOXWyMBxtHdmd O z4IgB",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "7938.28"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ix quietly slyly final accounts. furiously regular foxes haggle slyly throughout the caref",
												"C_PHONE": "16-342-297-1647",
												"C_CUSTKEY": "847741978",
												"C_NAME": "Customer#847741978",
												"C_ADDRESS": "2943RwktPusrM,xdlpdNEHeSrzQEP4W",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "8666.59"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ke above the final instructions. carefully even foxes sleep carefully unusual the",
												"C_PHONE": "31-226-881-9366",
												"C_CUSTKEY": "847741979",
												"C_NAME": "Customer#847741979",
												"C_ADDRESS": "27jN3HypTd0FyWlpc0a7D4",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6487.93"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " unusual instructions. express, final deposits haggle slyly. express dependencies cajole furiously beneath the ca",
												"C_PHONE": "20-105-855-2160",
												"C_CUSTKEY": "847741980",
												"C_NAME": "Customer#847741980",
												"C_ADDRESS": "IGm2HudJiu9XhA6pB4a",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8672.70"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "according to the slyly special",
												"C_PHONE": "12-858-791-8543",
												"C_CUSTKEY": "847741981",
												"C_NAME": "Customer#847741981",
												"C_ADDRESS": "xlZvgnD0GXUA N2auoCJsLmbDU",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "-887.97"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ar pinto beans use fluffily a",
												"C_PHONE": "29-205-135-2258",
												"C_CUSTKEY": "847741982",
												"C_NAME": "Customer#847741982",
												"C_ADDRESS": "yXJVhcBoZmR1hIojWUi",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "731.20"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "are regular deposits. furiously final warthogs alongside of ",
												"C_PHONE": "10-334-905-4393",
												"C_CUSTKEY": "847741983",
												"C_NAME": "Customer#847741983",
												"C_ADDRESS": "fZ1ns2cY6 I vJuStsA3Aqzmu",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "237.87"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " even accounts. ruthlessly regular packages haggle. carefully regular requests poach furiously. blit",
												"C_PHONE": "24-867-430-3958",
												"C_CUSTKEY": "847741984",
												"C_NAME": "Customer#847741984",
												"C_ADDRESS": "s9GrXLgWv7mUE3hOseKms0GWbXaXqzXnrKSlU",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "2744.31"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " deposits nag slyly even deposits: blithely fluffy deposits cajole. fluffily regular dinos lose final request",
												"C_PHONE": "17-535-400-5451",
												"C_CUSTKEY": "847741985",
												"C_NAME": "Customer#847741985",
												"C_ADDRESS": "0GNCmPPRGGJm aaio6htJn",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "9578.98"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": ". unusual deposits try to are b",
												"C_PHONE": "22-747-826-6573",
												"C_CUSTKEY": "847741986",
												"C_NAME": "Customer#847741986",
												"C_ADDRESS": "WL2bMzSX2bporZOhMv8f731f0twlsC0FVj29 CgX",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "7065.75"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "nag fluffily across the slyly busy packages: slyly pending accounts cajole blithely slyly expres",
												"C_PHONE": "34-851-242-2139",
												"C_CUSTKEY": "847741987",
												"C_NAME": "Customer#847741987",
												"C_ADDRESS": "bFeCZSG VKxnUSZPoeV8nbioN5E d",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "7048.78"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "lways regular dolphins affix furiously ex",
												"C_PHONE": "22-146-579-8827",
												"C_CUSTKEY": "847741988",
												"C_NAME": "Customer#847741988",
												"C_ADDRESS": "p9b85tbdCAzRUQqOhwG1fDvE7f4WLxPY",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "7946.48"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " final excuses detect fluffily ironic ideas-- slyly special ",
												"C_PHONE": "29-889-228-4827",
												"C_CUSTKEY": "847741989",
												"C_NAME": "Customer#847741989",
												"C_ADDRESS": "Q9yNwZU,BReNdoWLIXbkoZgQdqBDXuKJV95W,4u",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "3496.44"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y final packages. requests haggle. carefully pending packages wake against the quickly final packa",
												"C_PHONE": "26-263-665-1788",
												"C_CUSTKEY": "847741990",
												"C_NAME": "Customer#847741990",
												"C_ADDRESS": "rI6CO3P1jyB,71OeRaqHmJzmctEt,SXFJ2WqDdJ9",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "687.26"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ng, busy theodolites sleep daringly quickly express deposits. instructions thrash furiously inside the slyly silent",
												"C_PHONE": "10-601-309-9987",
												"C_CUSTKEY": "847741991",
												"C_NAME": "Customer#847741991",
												"C_ADDRESS": "jM5CFI8ks,,sSG 3EpKW6aF",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "9755.24"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y final, final pinto beans! furiously regular packages boost carefully. express deposits cajole against t",
												"C_PHONE": "29-636-719-1194",
												"C_CUSTKEY": "847741992",
												"C_NAME": "Customer#847741992",
												"C_ADDRESS": "O6d8iGpLED0TyAIfyvEur9koyphOi",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "-595.28"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " deposits sleep furiously about the ti",
												"C_PHONE": "12-714-934-6424",
												"C_CUSTKEY": "847741993",
												"C_NAME": "Customer#847741993",
												"C_ADDRESS": "VQgnECwU7sSkvfuhNtGQUQTqE7qd5kba24 6i",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "3107.51"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ent packages sleep express deposits. carefully unusual excuses after the fina",
												"C_PHONE": "17-251-212-2774",
												"C_CUSTKEY": "847741994",
												"C_NAME": "Customer#847741994",
												"C_ADDRESS": "ByYMP9i7oHfhHwL4nv9pKbwabgSC9O6Ir",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8834.08"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "riously regular requests boost accor",
												"C_PHONE": "28-291-461-5756",
												"C_CUSTKEY": "847741995",
												"C_NAME": "Customer#847741995",
												"C_ADDRESS": "39N1z6PymEUxrg",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "5410.50"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "nts. even asymptotes nag carefully final, bold ",
												"C_PHONE": "15-483-200-6684",
												"C_CUSTKEY": "847741996",
												"C_NAME": "Customer#847741996",
												"C_ADDRESS": "5OmB25DYHBa5CGE",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "6237.71"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "gainst the furiously silent requests. slyly regu",
												"C_PHONE": "28-690-241-3194",
												"C_CUSTKEY": "847741997",
												"C_NAME": "Customer#847741997",
												"C_ADDRESS": "X0hqsz3cFQ87S3qKPHYGzUb",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "5179.90"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "final packages use slyly around the closely brave deposits. regular pl",
												"C_PHONE": "32-868-193-5631",
												"C_CUSTKEY": "847741998",
												"C_NAME": "Customer#847741998",
												"C_ADDRESS": "IOjgNfiJ1pUd",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "2512.71"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "aggle quickly. regularly silent accounts against ",
												"C_PHONE": "25-957-631-6494",
												"C_CUSTKEY": "847741999",
												"C_NAME": "Customer#847741999",
												"C_ADDRESS": "YNNTae4xz8v3n0CkbhBfUdLDah",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "159.07"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "unts. instructions across the requests haggle q",
												"C_PHONE": "28-577-400-9956",
												"C_CUSTKEY": "847742000",
												"C_NAME": "Customer#847742000",
												"C_ADDRESS": "M8y,vURDtAjXAkatOWSA5f4V3MJhJ5j",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "9370.61"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " wake pending packages. even requests are slyly around the special foxes. furiously express instructions are blithe",
												"C_PHONE": "10-310-203-5778",
												"C_CUSTKEY": "847742001",
												"C_NAME": "Customer#847742001",
												"C_ADDRESS": "eCk5MDG4DHE",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "2835.17"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y regular requests sleep furiously above the furiously final pinto beans. bold, bold foxes was careful",
												"C_PHONE": "26-778-166-2402",
												"C_CUSTKEY": "847742002",
												"C_NAME": "Customer#847742002",
												"C_ADDRESS": "77o3eOoMLoAD",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "7672.57"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "s. final accounts serve fluffily except the pending, regular requests. furiously regular dependen",
												"C_PHONE": "34-551-246-1928",
												"C_CUSTKEY": "847742003",
												"C_NAME": "Customer#847742003",
												"C_ADDRESS": "VUVkgzcWTAu2p189ujmAxjdj4l",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "8907.17"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "fully about the fluffily unusua",
												"C_PHONE": "16-462-324-9269",
												"C_CUSTKEY": "847742004",
												"C_NAME": "Customer#847742004",
												"C_ADDRESS": "GpGms5yxv78rVuCisB0Cq4aKevv7Y1j3pVop",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1905.52"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ickly above the slyly express deposits. qu",
												"C_PHONE": "21-540-734-8658",
												"C_CUSTKEY": "847742005",
												"C_NAME": "Customer#847742005",
												"C_ADDRESS": "uNpAkebjnFRp HcFaYb",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "3106.49"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s near the express, final accounts are stealthy requests. quickly unusual accounts nag final plat",
												"C_PHONE": "27-948-925-4458",
												"C_CUSTKEY": "847742006",
												"C_NAME": "Customer#847742006",
												"C_ADDRESS": "kygpWsAw5BVB6LLMBgnD4qM9P",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "2829.14"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " furiously. frets cajole according to the orbits. blithely bold requests about the requests",
												"C_PHONE": "34-271-394-3713",
												"C_CUSTKEY": "847742007",
												"C_NAME": "Customer#847742007",
												"C_ADDRESS": "UjvU5yBudXYyovSrH0Ci26eC2iUfB",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5392.86"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ual ideas. slyly unusual excuses do wake slyly special deposits: ironic, regular ideas cajole furiously. bl",
												"C_PHONE": "14-613-693-1466",
												"C_CUSTKEY": "847742008",
												"C_NAME": "Customer#847742008",
												"C_ADDRESS": "u7,2ajAZcmy7M6Fw1JcnOBaadNNgCDcQ4GuY",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "6883.77"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y bold ideas. fluffily regular accounts wake. final dependencies about the unusual, special asymptotes promise idly ",
												"C_PHONE": "10-747-318-1098",
												"C_CUSTKEY": "847742009",
												"C_NAME": "Customer#847742009",
												"C_ADDRESS": "WNv8HUSNlGnKNyDBdLV8a50bY0X72kw6qNUtIu  ",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "6639.50"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "s pinto beans nag furiously fluffy theodolites. pending, ironic ideas sleep regular requests. furiou",
												"C_PHONE": "12-401-732-1838",
												"C_CUSTKEY": "847742010",
												"C_NAME": "Customer#847742010",
												"C_ADDRESS": "dA,P8K71Ak Jk95dSdyjpooBZoaIchk",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "4178.44"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " enticing accounts. final accounts haggle furiously along t",
												"C_PHONE": "31-974-345-6828",
												"C_CUSTKEY": "847742011",
												"C_NAME": "Customer#847742011",
												"C_ADDRESS": "OJ,RmHZoq4hnN",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "1112.99"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y even dependencies. blithely regul",
												"C_PHONE": "28-668-259-8201",
												"C_CUSTKEY": "847742012",
												"C_NAME": "Customer#847742012",
												"C_ADDRESS": "A1RKfgQkktCQFF4KnwnxOTSQzkvzCopHNoW",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "4004.61"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ourts. slyly silent requests along the instructions boost thinly slyly express",
												"C_PHONE": "11-770-641-7295",
												"C_CUSTKEY": "847742013",
												"C_NAME": "Customer#847742013",
												"C_ADDRESS": "hoMpzItqR4MnFvIVu6LloSqRaif",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "5549.97"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "bold packages. furiously final dependencies cajole carefully quickly ironic requests. carefully express pinto bea",
												"C_PHONE": "21-105-254-5193",
												"C_CUSTKEY": "847742014",
												"C_NAME": "Customer#847742014",
												"C_ADDRESS": "HdtK5,yMwMGLpOlElWMIkpIlieNe43eVx",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "7424.38"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lyly ironic ideas believe blithely ",
												"C_PHONE": "14-826-995-3940",
												"C_CUSTKEY": "847742015",
												"C_NAME": "Customer#847742015",
												"C_ADDRESS": "bNBYZA 1k LSG",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "6550.20"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "dolites detect sometimes. blithel",
												"C_PHONE": "21-984-497-5564",
												"C_CUSTKEY": "847742016",
												"C_NAME": "Customer#847742016",
												"C_ADDRESS": ",m8FMGp9UJP4Nj",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "-820.89"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "thely. ironic, ironic dolphins are blithely asymptotes",
												"C_PHONE": "16-250-382-2836",
												"C_CUSTKEY": "847742017",
												"C_NAME": "Customer#847742017",
												"C_ADDRESS": "qjCKok0oV,I0TQVRu08qdE",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "6198.67"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " beans are along the ironic deposits. carefully regular accounts nod. furiously pending instruc",
												"C_PHONE": "19-865-379-4453",
												"C_CUSTKEY": "847742018",
												"C_NAME": "Customer#847742018",
												"C_ADDRESS": " N,zYE3Q4TrLc9X",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "9099.24"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " foxes cajole carefully courts. express, bold requests use regular requests. regular, regular depend",
												"C_PHONE": "24-775-117-3856",
												"C_CUSTKEY": "847742019",
												"C_NAME": "Customer#847742019",
												"C_ADDRESS": "XYWB6Qx4erzmc7cAjMXPA,9T2agl8ET,25b u",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "6975.41"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " carefully sly dependencies. accounts are furiously. quickly s",
												"C_PHONE": "32-540-261-6773",
												"C_CUSTKEY": "847742020",
												"C_NAME": "Customer#847742020",
												"C_ADDRESS": "oNCDmMCsD58YcP0YV3Rc",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "6779.69"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " carefully bold deposits. carefully even foxes wake fluffily ev",
												"C_PHONE": "24-576-249-1907",
												"C_CUSTKEY": "847742021",
												"C_NAME": "Customer#847742021",
												"C_ADDRESS": "MyhAUpxZxGg2NECw2FiduUPtuvLuJFgMdfkZ",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "6301.93"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "grate dependencies. carefully pending instructions nag slyly ironic packages. carefully final foxes across the",
												"C_PHONE": "23-103-292-4951",
												"C_CUSTKEY": "847742022",
												"C_NAME": "Customer#847742022",
												"C_ADDRESS": "SzQJCrbpOXVo6ps0rOs3vtO31u",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "6575.45"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ndle alongside of the furiously silent requests. furiously special excuses acr",
												"C_PHONE": "29-683-332-7703",
												"C_CUSTKEY": "847742023",
												"C_NAME": "Customer#847742023",
												"C_ADDRESS": "ZUcSWj0butLRUru6KlRM",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "5686.44"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ve the carefully regular deposits. req",
												"C_PHONE": "25-376-679-2151",
												"C_CUSTKEY": "847742024",
												"C_NAME": "Customer#847742024",
												"C_ADDRESS": "wIqv7AVwvbyrOX04UZAvY6VBKzrSA",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "2064.05"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "refully ironic requests. pack",
												"C_PHONE": "26-587-285-8364",
												"C_CUSTKEY": "847742025",
												"C_NAME": "Customer#847742025",
												"C_ADDRESS": "WOT5ehx7aHnbJXkpEA2maenH1",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5407.35"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "counts. carefully final theodolites boost carefully carefully regula",
												"C_PHONE": "10-451-564-8039",
												"C_CUSTKEY": "847742026",
												"C_NAME": "Customer#847742026",
												"C_ADDRESS": "gg6WpEbkCJ1lV",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "8336.22"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly packages. ironic pinto beans cajole",
												"C_PHONE": "13-119-534-6608",
												"C_CUSTKEY": "847742027",
												"C_NAME": "Customer#847742027",
												"C_ADDRESS": "yLUzLLdQk bXFyqSvuV6q",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8970.09"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ckly unusual pinto beans nag above the ironic packages-- slyly final theodolites cajole fluffily according to the c",
												"C_PHONE": "29-322-614-7873",
												"C_CUSTKEY": "847742028",
												"C_NAME": "Customer#847742028",
												"C_ADDRESS": "qHVzYRqzazLvtrDV5Xu3U2KRMrBtXsfMh1",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "3453.92"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ear the requests. regular accounts haggle with the dogged requests. furiously fluffy foxes sleep blithely. furiousl",
												"C_PHONE": "30-936-325-1505",
												"C_CUSTKEY": "847742029",
												"C_NAME": "Customer#847742029",
												"C_ADDRESS": "san2xz,PgOVypc8",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "1043.84"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "s. quickly ironic ideas use even packages. blithely final ideas among the fluffily brave pinto beans haggle furious",
												"C_PHONE": "10-600-816-2112",
												"C_CUSTKEY": "847742030",
												"C_NAME": "Customer#847742030",
												"C_ADDRESS": "mxNzZaigDDRc",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "7833.72"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "otes wake alongside of the bold, regular ideas. furiously pending asymptotes",
												"C_PHONE": "16-193-119-6584",
												"C_CUSTKEY": "847742031",
												"C_NAME": "Customer#847742031",
												"C_ADDRESS": "Ucj3EnqrCxoc fUM",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "300.70"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " ironic platelets cajole theodolites. special courts cajole caref",
												"C_PHONE": "10-382-129-9588",
												"C_CUSTKEY": "847742032",
												"C_NAME": "Customer#847742032",
												"C_ADDRESS": "aMDUP2v21chovO",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "2764.18"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ccounts. final, final requests",
												"C_PHONE": "28-135-811-3356",
												"C_CUSTKEY": "847742033",
												"C_NAME": "Customer#847742033",
												"C_ADDRESS": "jmDk,dmSK2YJzKCqzZgV6Q3r0",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "2528.63"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y even deposits are. express deposits nag slyly along the furiously express instructions. bold accounts ",
												"C_PHONE": "32-750-649-5703",
												"C_CUSTKEY": "847742034",
												"C_NAME": "Customer#847742034",
												"C_ADDRESS": "yFxcArcAsXb,wGQf9GzRuG3niFQa7A8JdKY",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "3572.87"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "es kindle carefully final deposi",
												"C_PHONE": "34-677-633-3058",
												"C_CUSTKEY": "847742035",
												"C_NAME": "Customer#847742035",
												"C_ADDRESS": "yKY5Ayicp1ZqiFZ3dDbjAKRFiz07eP",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "9292.60"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "rns along the carefully regular theodolites need to cajole quickly express deposi",
												"C_PHONE": "17-175-482-7249",
												"C_CUSTKEY": "847742036",
												"C_NAME": "Customer#847742036",
												"C_ADDRESS": "Zc,RChXAfpz1NPdpCNXvvk5glc15A",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "721.58"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "the quickly special packages? special, unusual deposits",
												"C_PHONE": "28-200-927-4500",
												"C_CUSTKEY": "847742037",
												"C_NAME": "Customer#847742037",
												"C_ADDRESS": "elfGSaWa7XPON5,Qq4yaCBvRTOUhAJns",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "3561.67"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "iously. regular requests integrate. blithely even foxes above ",
												"C_PHONE": "20-539-599-5870",
												"C_CUSTKEY": "847742038",
												"C_NAME": "Customer#847742038",
												"C_ADDRESS": "w7AdKMZhenVuRjCprG8eXr 4",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8032.92"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "oxes about the slyly express ideas wake at the fluffily even packages. sile",
												"C_PHONE": "16-122-421-6783",
												"C_CUSTKEY": "847742039",
												"C_NAME": "Customer#847742039",
												"C_ADDRESS": "J,D,kwIMBkvly8jzwPLBggcIutlZHIQ9MAYnTbf",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "4261.33"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ajole carefully alongside of the finally final dependencies. final,",
												"C_PHONE": "17-689-788-3806",
												"C_CUSTKEY": "847742040",
												"C_NAME": "Customer#847742040",
												"C_ADDRESS": "1Cxh5QW8hYpil1wDxfYYcb7TtkR9",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8137.14"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " across the special, special deposits. express pinto beans haggle fluffily ",
												"C_PHONE": "14-677-924-7669",
												"C_CUSTKEY": "847742041",
												"C_NAME": "Customer#847742041",
												"C_ADDRESS": "lJ1VPKNFqNNTLrUI1d3F6wShK",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "6923.16"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "pendencies cajole blithely according to the regular packages. final packages wake quickly ironic pac",
												"C_PHONE": "26-167-637-8552",
												"C_CUSTKEY": "847742042",
												"C_NAME": "Customer#847742042",
												"C_ADDRESS": "MEYe,j1zwNC5Cc1D0JHmmLyBU,g3M",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "8569.37"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "quests across the quickly express asymptotes believe furiously instructio",
												"C_PHONE": "19-526-662-4006",
												"C_CUSTKEY": "847742043",
												"C_NAME": "Customer#847742043",
												"C_ADDRESS": "LNFwoX6N5Gn8UEW772qRiDmwJ5GG",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "507.08"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "the deposits sleep furiously even accounts. special instructions wake. regular packages boost blithel",
												"C_PHONE": "20-381-410-5749",
												"C_CUSTKEY": "847742044",
												"C_NAME": "Customer#847742044",
												"C_ADDRESS": "P,FFHJ5p1VNBHz3blTmjPsXyt1",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "6508.82"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "carefully: final packages wake ",
												"C_PHONE": "21-165-805-2282",
												"C_CUSTKEY": "847742045",
												"C_NAME": "Customer#847742045",
												"C_ADDRESS": "phzZatfFwLVD",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "7798.33"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "to the slyly regular multipliers. quickly regular requests haggle blithe, regular accounts",
												"C_PHONE": "24-861-601-5398",
												"C_CUSTKEY": "847742046",
												"C_NAME": "Customer#847742046",
												"C_ADDRESS": "zzBz1WTXxHJy5Y7LCsVVxw8N",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "-341.78"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "n pinto beans. even, even instructions affix above the furiously regular dependencie",
												"C_PHONE": "14-862-632-5133",
												"C_CUSTKEY": "847742047",
												"C_NAME": "Customer#847742047",
												"C_ADDRESS": "diU690wnIMH2kR0gKb9SB0",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "6594.47"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "g to the unusual, unusual theodolites. furiously regular dolphins wake daringly quick",
												"C_PHONE": "31-293-607-1990",
												"C_CUSTKEY": "847742048",
												"C_NAME": "Customer#847742048",
												"C_ADDRESS": "HDm 1rSiPMnRn",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6269.28"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "cial deposits? furiously final instructions run fluffily final requests. blithely bold asymptotes through the",
												"C_PHONE": "28-637-800-4073",
												"C_CUSTKEY": "847742049",
												"C_NAME": "Customer#847742049",
												"C_ADDRESS": "VLArl1Tcq0ac8GwyiIOthlqVQGe6pZCSPNL",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7837.31"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ckages sleep final ideas. express, silent ideas about the slow instructions cajole after the pendi",
												"C_PHONE": "27-631-476-9732",
												"C_CUSTKEY": "847742050",
												"C_NAME": "Customer#847742050",
												"C_ADDRESS": "MW0Y8Dcb0fSSuXRERsf5sgfyskw kz3BuZJVVokp",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5761.66"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "l accounts wake according to the slyly even requests. carefully silent foxes haggle careful",
												"C_PHONE": "26-269-624-2607",
												"C_CUSTKEY": "847742051",
												"C_NAME": "Customer#847742051",
												"C_ADDRESS": "XlKwVkPELGn",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "1192.01"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ess platelets. bold braids according to the blithely pending pinto beans haggle idly",
												"C_PHONE": "16-508-724-6315",
												"C_CUSTKEY": "847742052",
												"C_NAME": "Customer#847742052",
												"C_ADDRESS": "Wbpk4xT7y7hJ84i8",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1012.52"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " slyly unusual deposits. blithely regular packages integrate against the silent ",
												"C_PHONE": "10-785-248-4904",
												"C_CUSTKEY": "847742053",
												"C_NAME": "Customer#847742053",
												"C_ADDRESS": "6x,29CV7RLHTKol6gc7mrZ",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "9391.87"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y special ideas. courts alongside of the pending foxes are ",
												"C_PHONE": "30-234-260-2546",
												"C_CUSTKEY": "847742054",
												"C_NAME": "Customer#847742054",
												"C_ADDRESS": "J,ImJR S8grWDV89W8ivoQxAkhl4o",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8171.34"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "beans. final deposits cajole slyly among the blithely idle p",
												"C_PHONE": "22-599-105-9761",
												"C_CUSTKEY": "847742055",
												"C_NAME": "Customer#847742055",
												"C_ADDRESS": "0nIP7taKOyv6vB0",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "9715.16"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ng packages. carefully ironic requests wake regular attainments. realms thrash.",
												"C_PHONE": "22-783-561-7079",
												"C_CUSTKEY": "847742056",
												"C_NAME": "Customer#847742056",
												"C_ADDRESS": ",qo2lgZkr czBw4hFwGd8KUdtxm5QIRergfCv",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "7817.82"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " sometimes. packages are slyly even sheaves. sly",
												"C_PHONE": "33-644-467-9694",
												"C_CUSTKEY": "847742057",
												"C_NAME": "Customer#847742057",
												"C_ADDRESS": "ZJhmQX55bIEAnBTwvrXzYi",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "8162.63"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ckages haggle requests. regular ideas aft",
												"C_PHONE": "20-908-291-5686",
												"C_CUSTKEY": "847742058",
												"C_NAME": "Customer#847742058",
												"C_ADDRESS": "qqXxP17T,YdgTChNBAA,lgERCY5Xb",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "6313.08"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "heodolites about the blithely silent dependencies mold carefully across the packages. reque",
												"C_PHONE": "12-198-338-3408",
												"C_CUSTKEY": "847742059",
												"C_NAME": "Customer#847742059",
												"C_ADDRESS": "zuhVUyEF3Rlb0QX0Js13B1LsMk4N7QA68Ie",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "6884.53"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s furiously according to the bli",
												"C_PHONE": "21-205-158-1689",
												"C_CUSTKEY": "847742060",
												"C_NAME": "Customer#847742060",
												"C_ADDRESS": "HX8tQcMToSmMVzDloO",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "8303.87"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " carefully? blithely pending dolphins are carefully. furiously final asymptotes serve carefully. courts",
												"C_PHONE": "22-898-853-8574",
												"C_CUSTKEY": "847742061",
												"C_NAME": "Customer#847742061",
												"C_ADDRESS": "pgdpbkE9D8Bh",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "4154.93"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "p stealthily among the special, special requests. quickly even packages about the slyly special theodo",
												"C_PHONE": "28-156-530-7053",
												"C_CUSTKEY": "847742062",
												"C_NAME": "Customer#847742062",
												"C_ADDRESS": "aoJkkwg8veDqxMgcqjZX",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "1954.79"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "fluffily ironic accounts. quietly final instructions in",
												"C_PHONE": "11-144-476-8729",
												"C_CUSTKEY": "847742063",
												"C_NAME": "Customer#847742063",
												"C_ADDRESS": "I9cLzve774JLDVCDehBnwnmR2LjMGeNUQx",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "6053.99"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ges boost carefully! bold asymptotes wake carefully ironic ideas. quickly regular ideas haggle",
												"C_PHONE": "17-572-219-2235",
												"C_CUSTKEY": "847742064",
												"C_NAME": "Customer#847742064",
												"C_ADDRESS": "HRWqnh6jsyrqfrQufxH4kixd7Hd",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8379.47"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ter the blithely unusual foxes. ironic deposits affix even, unusual packages. carefully",
												"C_PHONE": "13-844-125-8542",
												"C_CUSTKEY": "847742065",
												"C_NAME": "Customer#847742065",
												"C_ADDRESS": "wIJfPpmJOekqTgMZr5e831LQF8cw",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "9735.08"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "n requests. busy, ironic dugouts wake carefully. bold, final theodolites sleep carefully furiously special t",
												"C_PHONE": "33-705-455-6560",
												"C_CUSTKEY": "847742066",
												"C_NAME": "Customer#847742066",
												"C_ADDRESS": "xIyPtHGr7hDfHRRDZVskK",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "1548.64"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " alongside of the final, regular requests sleep",
												"C_PHONE": "31-118-859-5012",
												"C_CUSTKEY": "847742067",
												"C_NAME": "Customer#847742067",
												"C_ADDRESS": "6ttm Xp2h68ACe Br3XVNd3ELFylbHXq,5",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "-17.46"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "xpress foxes cajole quickly bold accounts. slyly pending pinto ",
												"C_PHONE": "22-901-174-2890",
												"C_CUSTKEY": "847742068",
												"C_NAME": "Customer#847742068",
												"C_ADDRESS": "fpLHav1KoKPhJ 8,X5Qzj7fJbl",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "1546.52"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y regular, special requests. slyly ironic requests run at ",
												"C_PHONE": "25-613-920-5190",
												"C_CUSTKEY": "847742069",
												"C_NAME": "Customer#847742069",
												"C_ADDRESS": "Thpkyfc Vp1E7Ryw6xgN1uK",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "8363.89"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "en foxes run blithely furiously furious ideas. foxes among the even asymptotes cajol",
												"C_PHONE": "17-254-567-4228",
												"C_CUSTKEY": "847742070",
												"C_NAME": "Customer#847742070",
												"C_ADDRESS": "jX mvCul,xUi",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "998.14"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "fully along the accounts. carefully special deposits sleep carefully alongside of the final pinto b",
												"C_PHONE": "13-771-719-7006",
												"C_CUSTKEY": "847742071",
												"C_NAME": "Customer#847742071",
												"C_ADDRESS": "ZlI0 njz3RDDLGuJoULQ2",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "9692.81"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "osits will have to sleep. carefully p",
												"C_PHONE": "21-661-964-8947",
												"C_CUSTKEY": "847742072",
												"C_NAME": "Customer#847742072",
												"C_ADDRESS": "SMGxpigKKsEuryXUpbuQRJU48TLTk,tYD66Bg",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "6172.19"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "nding, express packages use furiously from the instru",
												"C_PHONE": "22-641-630-9640",
												"C_CUSTKEY": "847742073",
												"C_NAME": "Customer#847742073",
												"C_ADDRESS": "Uawd4M08WQcK0QUFGC",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "3989.26"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": ". never thin requests about the even requests are permanently a",
												"C_PHONE": "19-612-250-7135",
												"C_CUSTKEY": "847742074",
												"C_NAME": "Customer#847742074",
												"C_ADDRESS": "jwH9HSPk6Bpy477ervTh",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "486.58"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "onic requests among the furiously special requests affix across the c",
												"C_PHONE": "23-868-619-4844",
												"C_CUSTKEY": "847742075",
												"C_NAME": "Customer#847742075",
												"C_ADDRESS": "NaOrG,yhqhx",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "2907.10"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " pearls use after the special dolphins. special instructions haggle fluffily ironic requests. slyly ironic ac",
												"C_PHONE": "22-169-991-2720",
												"C_CUSTKEY": "847742076",
												"C_NAME": "Customer#847742076",
												"C_ADDRESS": "6VfWUdMweRAQm,",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6521.58"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "onic asymptotes. even instructions doze carefully pending, final deposits. blithely silent dugouts a",
												"C_PHONE": "16-612-437-6366",
												"C_CUSTKEY": "847742077",
												"C_NAME": "Customer#847742077",
												"C_ADDRESS": "2vJP4x9jrNZ",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "2279.42"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " requests are blithely after t",
												"C_PHONE": "22-284-206-6301",
												"C_CUSTKEY": "847742078",
												"C_NAME": "Customer#847742078",
												"C_ADDRESS": "AhfehAGfdNgAXgPHPp",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6140.02"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " would lose furiously silent requests. slyly final gi",
												"C_PHONE": "13-970-126-8106",
												"C_CUSTKEY": "847742079",
												"C_NAME": "Customer#847742079",
												"C_ADDRESS": "ZpJS0ZzxWEdZEFeJycPzVwJ9w1u2mq48lyhPKPpe",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "2290.04"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "en accounts detect across the final re",
												"C_PHONE": "18-958-276-7015",
												"C_CUSTKEY": "847742080",
												"C_NAME": "Customer#847742080",
												"C_ADDRESS": "f0rUI1Zpy2eSDhpNF",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8653.18"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ual accounts sleep fluffily across the quickly pending ideas. final, blithe packages maintain slyly. even",
												"C_PHONE": "24-886-763-9411",
												"C_CUSTKEY": "847742081",
												"C_NAME": "Customer#847742081",
												"C_ADDRESS": "lacoavvDxmPLygqYmYoJ39mpsOEw54ShX13",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "1086.59"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "iously pending pinto beans alongside of the carefully regular accounts haggle regularly blithely blithe asym",
												"C_PHONE": "17-414-936-7923",
												"C_CUSTKEY": "847742082",
												"C_NAME": "Customer#847742082",
												"C_ADDRESS": "ZbdAHYu1Fuut GIq8POcxS7,VQL3GmxpaE5pMLEX",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "278.96"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " ironic, even theodolites against the slyly final foxes boost furiously furio",
												"C_PHONE": "12-762-897-9397",
												"C_CUSTKEY": "847742083",
												"C_NAME": "Customer#847742083",
												"C_ADDRESS": "qefBbmyeDB4",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "465.11"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "counts boost along the furiously pending asymptotes: fluffily final accounts wake above the slyly final ac",
												"C_PHONE": "31-412-377-7022",
												"C_CUSTKEY": "847742084",
												"C_NAME": "Customer#847742084",
												"C_ADDRESS": ",KzlM1Dbvk32RA8S",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5021.17"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "o haggle quickly. courts sleep slyly. bold ideas around the even packages are quickly around the unusual, reg",
												"C_PHONE": "27-434-232-8274",
												"C_CUSTKEY": "847742085",
												"C_NAME": "Customer#847742085",
												"C_ADDRESS": "S6LcBitmIuGty nhPsmXAhvEGwuZjs,oTW",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "7805.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ts. blithely express instructions promise. slyly regular theodolites nag foxes",
												"C_PHONE": "33-552-899-1068",
												"C_CUSTKEY": "847742086",
												"C_NAME": "Customer#847742086",
												"C_ADDRESS": "UiGnVUCGFv7 ",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "4752.02"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "-- even requests sleep fluffily theodolites. carefully enticing packages are blithely according to the carefull",
												"C_PHONE": "31-489-441-9382",
												"C_CUSTKEY": "847742087",
												"C_NAME": "Customer#847742087",
												"C_ADDRESS": "IGphHFaxKdcMMJUaRE",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5153.12"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ly; furiously even requests affix furiously sl",
												"C_PHONE": "34-604-681-3566",
												"C_CUSTKEY": "847742088",
												"C_NAME": "Customer#847742088",
												"C_ADDRESS": "o1XKhLBbW3I8E FaNEJ",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "3576.95"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "epitaphs. ironic foxes lose furiously slyly regular ",
												"C_PHONE": "29-666-415-5574",
												"C_CUSTKEY": "847742089",
												"C_NAME": "Customer#847742089",
												"C_ADDRESS": "Sk7CtGIOPaP6rTMrxnm",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "812.37"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "s. ironically silent packages will have t",
												"C_PHONE": "15-942-337-5982",
												"C_CUSTKEY": "847742090",
												"C_NAME": "Customer#847742090",
												"C_ADDRESS": "ovKQOHZnaBwsc",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "478.32"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " after the blithely ironic excuses. carefully final theodolites cajole",
												"C_PHONE": "20-745-737-1179",
												"C_CUSTKEY": "847742091",
												"C_NAME": "Customer#847742091",
												"C_ADDRESS": "GBdyiD5zymlRoHa9kvMecvumBI",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "7090.22"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "thely final orbits. even instructions wake furiously regular, ironic",
												"C_PHONE": "31-499-280-7915",
												"C_CUSTKEY": "847742092",
												"C_NAME": "Customer#847742092",
												"C_ADDRESS": "yp5KZQEMNZyntd8ZGar6nIsj8L0aoGYiaIk3",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "434.11"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "pending accounts sleep blithely; quickly regular deposits according to the unu",
												"C_PHONE": "23-975-197-2743",
												"C_CUSTKEY": "847742093",
												"C_NAME": "Customer#847742093",
												"C_ADDRESS": "zkNQYBGKMSjSwwD5",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "1031.67"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": ", final deposits use carefully. final theodolites wake furiously against the sly",
												"C_PHONE": "15-242-534-9928",
												"C_CUSTKEY": "847742094",
												"C_NAME": "Customer#847742094",
												"C_ADDRESS": "w00q4Xl,S7rcor024 Jlwit0SLW",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "1185.94"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "beans. bold courts boost slyly fluffily regular pinto beans. final, silent accounts integrate even, ironic packa",
												"C_PHONE": "30-155-639-2024",
												"C_CUSTKEY": "847742095",
												"C_NAME": "Customer#847742095",
												"C_ADDRESS": "3xfF9mGIgPl6hbhKkjSA2dEOtMZp9ANZL59x8",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8973.58"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "press. carefully even foxes impress",
												"C_PHONE": "31-379-378-4118",
												"C_CUSTKEY": "847742096",
												"C_NAME": "Customer#847742096",
												"C_ADDRESS": "d09vhwRiQ8ls",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "7019.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "along the carefully even deposits mold dogge",
												"C_PHONE": "30-391-634-9757",
												"C_CUSTKEY": "847742097",
												"C_NAME": "Customer#847742097",
												"C_ADDRESS": "YxBNHuKr sjzbMznlvg8",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "5388.62"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ccounts. blithely even requests haggle carefully even re",
												"C_PHONE": "15-357-907-6758",
												"C_CUSTKEY": "847742098",
												"C_NAME": "Customer#847742098",
												"C_ADDRESS": "Pdjim7YePvgSg3eZwp1WAK",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "1596.47"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "g the quickly ironic ideas. ironic, speci",
												"C_PHONE": "24-133-940-5931",
												"C_CUSTKEY": "847742099",
												"C_NAME": "Customer#847742099",
												"C_ADDRESS": ",5boTtge9kIl1,1dtDTcLk98HvwC8fE82,vk",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "884.74"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "jole carefully at the quiet, ironic dolphins. furiously even instructions according to the furiously pending id",
												"C_PHONE": "29-804-449-5102",
												"C_CUSTKEY": "847742100",
												"C_NAME": "Customer#847742100",
												"C_ADDRESS": "tBFNRNRnhOnFNfnqFg1PhUKZRScCjo6Jwr6",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6762.67"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " after the blithely even theodolites na",
												"C_PHONE": "23-938-195-2451",
												"C_CUSTKEY": "847742101",
												"C_NAME": "Customer#847742101",
												"C_ADDRESS": "A9ZX34l1A018Z,",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "6228.10"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "cross the foxes! blithely bold ideas according to the blithely regular ",
												"C_PHONE": "15-327-578-1437",
												"C_CUSTKEY": "847742102",
												"C_NAME": "Customer#847742102",
												"C_ADDRESS": "YF,,eFkCE7HFtl1g8OxGLSVUTIf6jN1j3",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "8682.08"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "cross the pending, regular accounts cajole furiously fluffily unusual depths. regular braids use carefull",
												"C_PHONE": "30-348-771-5335",
												"C_CUSTKEY": "847742103",
												"C_NAME": "Customer#847742103",
												"C_ADDRESS": "drj9a919cha,6kbIGKRdzfXzz,QlxOOpjKTUdp",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "2810.59"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ously quickly ironic instructions-- quickly final packages boost. furiously stealthy deposits should prom",
												"C_PHONE": "19-493-716-7243",
												"C_CUSTKEY": "847742104",
												"C_NAME": "Customer#847742104",
												"C_ADDRESS": "rahlfkh4eqoar",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1597.91"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ealthy dependencies lose slyly. carefully pending requests ar",
												"C_PHONE": "14-557-945-3875",
												"C_CUSTKEY": "847742105",
												"C_NAME": "Customer#847742105",
												"C_ADDRESS": "USBhgxPrS,R5XFRuhwa6DB9xLDNYwhI3R",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "2995.81"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "eposits poach foxes! slyly ironic accounts use quickly. blithely final requests integr",
												"C_PHONE": "24-992-169-5866",
												"C_CUSTKEY": "847742106",
												"C_NAME": "Customer#847742106",
												"C_ADDRESS": "2Ro5Juyk,8r3BFHO,bK",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "1540.42"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ve the silent pinto beans promise according to the carefully final pint",
												"C_PHONE": "10-888-721-9850",
												"C_CUSTKEY": "847742107",
												"C_NAME": "Customer#847742107",
												"C_ADDRESS": "CxlRRHNFeSQJ 7IhR2,voAQ4ApaEj",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "4813.24"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "arefully special instructions. carefully regular deposits caj",
												"C_PHONE": "22-573-697-9270",
												"C_CUSTKEY": "847742108",
												"C_NAME": "Customer#847742108",
												"C_ADDRESS": "RzhckKsonzBXulhr,TMwqbmIdGMbr,JevMWo9i",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "158.71"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ions cajole blithely after the special, final instructions. final packages are bli",
												"C_PHONE": "17-932-690-2406",
												"C_CUSTKEY": "847742109",
												"C_NAME": "Customer#847742109",
												"C_ADDRESS": "eNdIoWEYZ99ma",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "3411.71"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "r dependencies cajole furiously regular theodolites. bold deposits along the regular, final",
												"C_PHONE": "13-628-242-1286",
												"C_CUSTKEY": "847742110",
												"C_NAME": "Customer#847742110",
												"C_ADDRESS": "NwaWvGDA5FY3puxg6q7P5Tsm",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "6673.27"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "fily quickly final grouches. idly even excuses above the special pinto beans play along the pen",
												"C_PHONE": "30-552-881-1156",
												"C_CUSTKEY": "847742111",
												"C_NAME": "Customer#847742111",
												"C_ADDRESS": "7ekvGcB4SH3N7oNUlCzsJvyLcV,QNu",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "-396.87"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ges. even, ironic deposits haggle slyly slyly express ",
												"C_PHONE": "19-811-662-6853",
												"C_CUSTKEY": "847742112",
												"C_NAME": "Customer#847742112",
												"C_ADDRESS": "Lrap6MwU2Vmk9dfkUW95aS3gP",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "4659.18"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s haggle busily about the carefully sile",
												"C_PHONE": "17-622-108-3241",
												"C_CUSTKEY": "847742113",
												"C_NAME": "Customer#847742113",
												"C_ADDRESS": "CsAcF3pWYeXVFSDPKoDO1 MVNu BIDxiNGvxipzz",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "6856.93"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ly bold accounts. carefully silent excuses affix. even theodolites are blithely among the carefully reg",
												"C_PHONE": "21-152-278-9949",
												"C_CUSTKEY": "847742114",
												"C_NAME": "Customer#847742114",
												"C_ADDRESS": "8UAoe6ZV6sJc5DtxYdI8GOjIqIkAHLKi",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "6428.49"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " packages. unusual, final theodolites about the even instructions haggle carefully unusual packages. furious",
												"C_PHONE": "17-176-646-5479",
												"C_CUSTKEY": "847742115",
												"C_NAME": "Customer#847742115",
												"C_ADDRESS": "uyrHvIJQOcq2Vy1JUbSQX6wmK7hW9ZcZ7",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-330.06"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "iously regular pinto beans-- furiously bold requests haggle carefully instructions. even instructions ab",
												"C_PHONE": "27-599-654-4296",
												"C_CUSTKEY": "847742116",
												"C_NAME": "Customer#847742116",
												"C_ADDRESS": "UcHYXx6IyHUo7NdJUnNzSxOy15KX9r",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5622.68"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y final excuses shall believe after the ",
												"C_PHONE": "10-708-125-7338",
												"C_CUSTKEY": "847742117",
												"C_NAME": "Customer#847742117",
												"C_ADDRESS": "IlUtQP6NXYvYq",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "8431.22"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ges detect furiously against the accounts. unusual theodol",
												"C_PHONE": "28-388-429-7564",
												"C_CUSTKEY": "847742118",
												"C_NAME": "Customer#847742118",
												"C_ADDRESS": "fgC2wielieGKl3Lv p3YS2XK7P2f1ZluElRG5pZJ",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-380.45"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " ironic asymptotes about the unusual, even platelets snooze quickly even platelets. blithely even hockey play",
												"C_PHONE": "15-117-505-1386",
												"C_CUSTKEY": "847742119",
												"C_NAME": "Customer#847742119",
												"C_ADDRESS": "htd61kqZS5X2JBJTR46V1wBA",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "5682.17"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "eodolites sleep dolphins. ruthless foxes nag theodolites. regular deposits detect ca",
												"C_PHONE": "11-375-110-9657",
												"C_CUSTKEY": "847742120",
												"C_NAME": "Customer#847742120",
												"C_ADDRESS": "dv6c61lDWjdvArglIzhXaukTB wV7gJGW",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7239.71"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ironic deposits along the blithely even dependencies are blithely quietly regular deposits. blithely",
												"C_PHONE": "15-558-362-4580",
												"C_CUSTKEY": "847742121",
												"C_NAME": "Customer#847742121",
												"C_ADDRESS": "gpu kmsQERf2Bh hTjr8m6r1Xg",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "4792.63"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ar accounts haggle furiously again",
												"C_PHONE": "27-568-974-9856",
												"C_CUSTKEY": "847742122",
												"C_NAME": "Customer#847742122",
												"C_ADDRESS": "Zburw16okeHai395TNnYFz MOxhfSu8",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5794.46"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " packages. ironic, fluffy requests sleep ",
												"C_PHONE": "14-754-778-4461",
												"C_CUSTKEY": "847742123",
												"C_NAME": "Customer#847742123",
												"C_ADDRESS": "NfJ5vFcKOnRjxKjPGuk ",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "2430.46"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y pending dolphins sleep slyly ironic accounts. special excuses hinder blithely among the bold depo",
												"C_PHONE": "11-630-467-2096",
												"C_CUSTKEY": "847742124",
												"C_NAME": "Customer#847742124",
												"C_ADDRESS": "E 5J,77nUvqYa gyl2VaOByWeqRTXQfhnQ8",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "3709.10"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y special pinto beans detect slyly bold platelets. express requests wake blithely ironic multipliers. caref",
												"C_PHONE": "14-501-165-6477",
												"C_CUSTKEY": "847742125",
												"C_NAME": "Customer#847742125",
												"C_ADDRESS": "wzES12EC1Y868hPw3Z Yy39 Sr4Z5PKNTJb7B",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "-236.99"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "excuses doubt among the slyly express requests. blithely ironic asymptotes above ",
												"C_PHONE": "33-418-738-3501",
												"C_CUSTKEY": "847742126",
												"C_NAME": "Customer#847742126",
												"C_ADDRESS": "XrFKdu2dMvSe0nNfJWYRkfDe2uebEfN1136iSR2",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "7899.77"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "xpress sauternes boost after the theodolites. unusual, regular deposits haggle even excuses. ruthless, final pinto b",
												"C_PHONE": "11-424-859-4946",
												"C_CUSTKEY": "847742127",
												"C_NAME": "Customer#847742127",
												"C_ADDRESS": "8mECwweLqbD9JJu8zwp,m5BN3U",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "-592.83"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "slyly according to the pinto beans. furiously stealthy instructions ",
												"C_PHONE": "12-777-796-1446",
												"C_CUSTKEY": "847742128",
												"C_NAME": "Customer#847742128",
												"C_ADDRESS": "9y0KMec5QKnfbBspoIhIyz",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "164.72"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "kly pending packages boost quickly across the carefully fina",
												"C_PHONE": "29-326-313-4406",
												"C_CUSTKEY": "847742129",
												"C_NAME": "Customer#847742129",
												"C_ADDRESS": "bUp8wlRO7,I,Y0sjQwo2biamOtECB0kUNQtP",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "5386.06"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ages sleep slyly carefully ironic packages. carefully express hockey player",
												"C_PHONE": "12-338-627-6076",
												"C_CUSTKEY": "847742130",
												"C_NAME": "Customer#847742130",
												"C_ADDRESS": "aPOpNVe3RnFbXaOiDo2ZE7Th",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "2486.79"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "cording to the furiously final theodolites. acco",
												"C_PHONE": "15-809-577-2988",
												"C_CUSTKEY": "847742131",
												"C_NAME": "Customer#847742131",
												"C_ADDRESS": "T,r0YH1xTYb20E4W",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "4416.28"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "e quickly ironic decoys. pending, even escapades sleep of the furiously unusual pinto beans. carefully even dependen",
												"C_PHONE": "16-409-782-2104",
												"C_CUSTKEY": "847742132",
												"C_NAME": "Customer#847742132",
												"C_ADDRESS": "UIqB eo6N Ic1",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5435.03"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "xes detect slyly blithely regular ",
												"C_PHONE": "13-703-789-4927",
												"C_CUSTKEY": "847742133",
												"C_NAME": "Customer#847742133",
												"C_ADDRESS": "s3WtRxq3,GLzApWx5dmXkix6GknffYy,NbIPf7XP",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "593.79"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "s x-ray quickly: slyly bold requests are fluffil",
												"C_PHONE": "25-254-195-8891",
												"C_CUSTKEY": "847742134",
												"C_NAME": "Customer#847742134",
												"C_ADDRESS": "tLv9Yy6GN8amXkOOZrO0",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "686.17"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "y regular accounts. blithely ironic requests dazzle sly",
												"C_PHONE": "24-235-933-1973",
												"C_CUSTKEY": "847742135",
												"C_NAME": "Customer#847742135",
												"C_ADDRESS": "D5Ylq8ZetWgqq6VFjz1FdaXuYMmr88gGQ7t",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "2463.95"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "affix slyly blithely regular theodolites. express, regular",
												"C_PHONE": "31-281-352-5281",
												"C_CUSTKEY": "847742136",
												"C_NAME": "Customer#847742136",
												"C_ADDRESS": "VJl wS0g7CuTgZwlb",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5573.15"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "encies. fluffily silent ideas wake blithely according to the quickly",
												"C_PHONE": "33-677-514-9922",
												"C_CUSTKEY": "847742137",
												"C_NAME": "Customer#847742137",
												"C_ADDRESS": "DBx5JDIAWHhXKHkeT",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "951.61"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "epitaphs. carefully special packages wake. furiously thin dependencies sleep among the unusual deposi",
												"C_PHONE": "25-425-263-8979",
												"C_CUSTKEY": "847742138",
												"C_NAME": "Customer#847742138",
												"C_ADDRESS": "dZQNspXuWG4w4WhVrZq",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "8640.70"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sual packages. regular packages inside the furiously final deposits sleep af",
												"C_PHONE": "20-293-245-8940",
												"C_CUSTKEY": "847742139",
												"C_NAME": "Customer#847742139",
												"C_ADDRESS": "gV0eIWlZgWXGHzBoA5HDwe",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "387.56"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ecial pinto beans above the unusu",
												"C_PHONE": "31-166-814-6709",
												"C_CUSTKEY": "847742140",
												"C_NAME": "Customer#847742140",
												"C_ADDRESS": "kdaOq KFYL6TKzisiNMEb65dhIimQ1UC7MwnBU8",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "-378.14"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "hely final accounts sleep carefully. enticingly ironic requests ha",
												"C_PHONE": "14-648-875-1557",
												"C_CUSTKEY": "847742141",
												"C_NAME": "Customer#847742141",
												"C_ADDRESS": "pf6yhCbLkhIbQTwBmjmH",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "466.69"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ght to unwind: blithely ironic instructions sublate furiou",
												"C_PHONE": "15-792-879-8757",
												"C_CUSTKEY": "847742142",
												"C_NAME": "Customer#847742142",
												"C_ADDRESS": "5LWY2yLammhrdznoVMqvNMnEM2 hzCMja",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "9664.92"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y. slyly regular asymptotes about the blithely pending ",
												"C_PHONE": "11-806-915-9661",
												"C_CUSTKEY": "847742143",
												"C_NAME": "Customer#847742143",
												"C_ADDRESS": "7rLak3JrNkTUld8GJfOChEBC28Jql",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "-604.98"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " the ironically regular requests? pending pearls cajole fu",
												"C_PHONE": "28-233-633-6415",
												"C_CUSTKEY": "847742144",
												"C_NAME": "Customer#847742144",
												"C_ADDRESS": "1BA9IEBvKLpRpk8IEmgBkLuHgRKt0hd",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "5019.87"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "use against the regular packages. carefully special foxes ha",
												"C_PHONE": "33-535-693-6327",
												"C_CUSTKEY": "847742145",
												"C_NAME": "Customer#847742145",
												"C_ADDRESS": "swSDJtQB8JJFseml0laH",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "7940.29"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "iously bold asymptotes wake blithely furiously regular theodolites. furiously silent packages h",
												"C_PHONE": "11-266-241-3956",
												"C_CUSTKEY": "847742146",
												"C_NAME": "Customer#847742146",
												"C_ADDRESS": "PKBCmOGkLV1gS7DD5eZD",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9451.00"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " the blithely unusual accounts. accounts sleep furiously according to the ideas. final pinto b",
												"C_PHONE": "34-287-625-8345",
												"C_CUSTKEY": "847742147",
												"C_NAME": "Customer#847742147",
												"C_ADDRESS": "uWYMlnE8ZPp0A",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "1051.06"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "carefully ironic requests after the ironic ",
												"C_PHONE": "30-487-240-8205",
												"C_CUSTKEY": "847742148",
												"C_NAME": "Customer#847742148",
												"C_ADDRESS": "g89OYXpjy1rrZlnLTfYbcn",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "8146.84"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "inal, bold ideas. deposits sleep. even accounts wake carefully alongside",
												"C_PHONE": "18-404-255-3612",
												"C_CUSTKEY": "847742149",
												"C_NAME": "Customer#847742149",
												"C_ADDRESS": ",oI jYETbdDBdbHqBn",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "4941.15"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ly ironic instructions. boldly ironic foxes integrate slyly alongside of the final pinto beans. blithely regula",
												"C_PHONE": "33-217-871-4337",
												"C_CUSTKEY": "847742150",
												"C_NAME": "Customer#847742150",
												"C_ADDRESS": "ELkViv2LxiCYqet82BaRqGQ9oOzmK,gygd",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "4908.39"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " accounts. regular deposits within the bravely regular ideas detect carefully furiously final requests. blith",
												"C_PHONE": "33-799-921-1317",
												"C_CUSTKEY": "847742151",
												"C_NAME": "Customer#847742151",
												"C_ADDRESS": "CH8lV9FVu4pCeZi R6LjS9vnZ",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "4334.81"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ing to the slyly ironic requests. quietly pending patterns wake slyly among the even, pend",
												"C_PHONE": "27-270-874-3137",
												"C_CUSTKEY": "847742152",
												"C_NAME": "Customer#847742152",
												"C_ADDRESS": "sLUQQWLsiuOgN,Z",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "167.95"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "al accounts nag across the carefully unusual asymptot",
												"C_PHONE": "32-189-499-5129",
												"C_CUSTKEY": "847742153",
												"C_NAME": "Customer#847742153",
												"C_ADDRESS": "DwKihg5tVgaccGBRu9",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "4735.75"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ts boost slyly. slowly even patterns sleep ruthlessly. furiously final escapades haggle alongside of t",
												"C_PHONE": "28-218-480-6002",
												"C_CUSTKEY": "847742154",
												"C_NAME": "Customer#847742154",
												"C_ADDRESS": "AiAXXjHM 9DZzQ",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "6711.97"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "es haggle silent pinto beans; final requests unwind fluffily about the unus",
												"C_PHONE": "33-393-170-3055",
												"C_CUSTKEY": "847742155",
												"C_NAME": "Customer#847742155",
												"C_ADDRESS": "VnCwQQFR38yhC9H0fHDgQClTI8FdRAeAL",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "1195.11"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "hely unusual instructions cajol",
												"C_PHONE": "18-208-809-6617",
												"C_CUSTKEY": "847742156",
												"C_NAME": "Customer#847742156",
												"C_ADDRESS": ",YSZAJNOry5e9ZP8EdCGL6DK6OM2d5",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "9087.96"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "thely ironic accounts sleep slyly theodolites. ironic deposits are. final ideas ",
												"C_PHONE": "30-819-854-2553",
												"C_CUSTKEY": "847742157",
												"C_NAME": "Customer#847742157",
												"C_ADDRESS": "ucqDfLOXRXxTSq2uwm9vUyCQgG2TzLya5itwvfaS",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "4445.82"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly final theodolites. fluffily express requests a",
												"C_PHONE": "30-569-933-2437",
												"C_CUSTKEY": "847742158",
												"C_NAME": "Customer#847742158",
												"C_ADDRESS": "g,kpxZ3Im2kgGjoMy",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "6866.40"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "telets. special accounts along the fluffily final accounts haggle blithely carefully special deposits",
												"C_PHONE": "24-102-624-9149",
												"C_CUSTKEY": "847742159",
												"C_NAME": "Customer#847742159",
												"C_ADDRESS": "p0gP bFjnlXj GrLz",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "602.22"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "press accounts. epitaphs print slyly against the furiously pending ideas. final de",
												"C_PHONE": "28-665-224-1392",
												"C_CUSTKEY": "847742160",
												"C_NAME": "Customer#847742160",
												"C_ADDRESS": "SNsw1k9JELq0dlsovya4 ppCG8j7,R54I",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-563.35"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "elets. fluffily unusual deposit",
												"C_PHONE": "22-551-913-9980",
												"C_CUSTKEY": "847742161",
												"C_NAME": "Customer#847742161",
												"C_ADDRESS": "8vVOqiu04S",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "649.79"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " nag carefully bold excuses. carefully regular packages nag boldly even packages. furiously regular ",
												"C_PHONE": "31-196-213-5035",
												"C_CUSTKEY": "847742162",
												"C_NAME": "Customer#847742162",
												"C_ADDRESS": "JrugicK,C a00j3",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6897.45"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " bold pinto beans wake blithely. final hockey players are furiously. enticing hockey players cajol",
												"C_PHONE": "26-147-818-5270",
												"C_CUSTKEY": "847742163",
												"C_NAME": "Customer#847742163",
												"C_ADDRESS": "G68vEJkd9I3iU9dxELxx",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5486.54"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "e. blithely bold packages after the ideas use blithely atop the blithely regular request",
												"C_PHONE": "16-413-708-7552",
												"C_CUSTKEY": "847742164",
												"C_NAME": "Customer#847742164",
												"C_ADDRESS": "dU9X3q69aFKAJrdVMQCHjb2si",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "8297.36"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "lyly fluffily even excuses. blithely busy asymptot",
												"C_PHONE": "20-635-207-7628",
												"C_CUSTKEY": "847742165",
												"C_NAME": "Customer#847742165",
												"C_ADDRESS": "1yDR1PMTdN7KuUsgf RVdDwBfl7q2a6ITnZ1X7HN",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "4807.12"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "regular asymptotes. bravely specia",
												"C_PHONE": "11-256-790-1201",
												"C_CUSTKEY": "847742166",
												"C_NAME": "Customer#847742166",
												"C_ADDRESS": "5bU0JRA9BH7wLwmRQXwPmwv9UnzBLGc0",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7335.58"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "re? furiously final theodolites are blithely. fluffily unusual platelets across the furio",
												"C_PHONE": "31-644-237-4155",
												"C_CUSTKEY": "847742167",
												"C_NAME": "Customer#847742167",
												"C_ADDRESS": "JuObV7R7XM88gLzDK2rk,nCI9JJ7,E 1W6,7jn",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "-915.80"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lly regular pinto beans detect slyly slyly stealthy the",
												"C_PHONE": "25-575-915-7122",
												"C_CUSTKEY": "847742168",
												"C_NAME": "Customer#847742168",
												"C_ADDRESS": "M5ONKDAJ65gKmPEXxf,OWVo7AO oxSHW",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "5992.87"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "lites sleep above the final requests! accounts hagg",
												"C_PHONE": "29-101-141-9441",
												"C_CUSTKEY": "847742169",
												"C_NAME": "Customer#847742169",
												"C_ADDRESS": "fFBwE0rs8MwZQvwT4Kna7wCbvE7u",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "4199.86"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " the furiously final accounts-- furiously ironic frets wake carefully. requests are carefully. b",
												"C_PHONE": "18-351-858-7104",
												"C_CUSTKEY": "847742170",
												"C_NAME": "Customer#847742170",
												"C_ADDRESS": "eA0aKGpGuIe5ynjG05S8NCK4TVCQQAHV1lto",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8981.67"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ously ironic requests thrash fluffily daring ideas. slyly express packages nag furiously! carefully ",
												"C_PHONE": "32-115-531-3075",
												"C_CUSTKEY": "847742171",
												"C_NAME": "Customer#847742171",
												"C_ADDRESS": "j,Lj3MmVAWxhJ,wwMTgZY6fI4f0Cq3zzFT0RVqKw",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "-34.53"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ilent dependencies. packages cajole bold foxes. slyly silent requests wake carefully slyly express asymptot",
												"C_PHONE": "14-649-903-1532",
												"C_CUSTKEY": "847742172",
												"C_NAME": "Customer#847742172",
												"C_ADDRESS": "DCxbP8xHEZ7UJES9cnpLvKPo",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "520.02"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ffily silent deposits according to the furiously final grouches unwind do",
												"C_PHONE": "11-986-469-5142",
												"C_CUSTKEY": "847742173",
												"C_NAME": "Customer#847742173",
												"C_ADDRESS": "8hJ0ua6iRf0",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "3901.73"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "detect furiously after the quickly unusual pinto b",
												"C_PHONE": "24-223-972-1589",
												"C_CUSTKEY": "847742174",
												"C_NAME": "Customer#847742174",
												"C_ADDRESS": "Ek5WGOMJNDuomqyAMNGQpmUy,0W 2",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "3308.84"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "the pending, regular pinto beans. unusual instructions according to the regular, final requests must cajole express ",
												"C_PHONE": "13-102-966-6307",
												"C_CUSTKEY": "847742175",
												"C_NAME": "Customer#847742175",
												"C_ADDRESS": "Ok7MLyVzVMymtI9384S0,6p",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "4580.72"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "onic packages. carefully bold requests along the express asympt",
												"C_PHONE": "14-314-420-3313",
												"C_CUSTKEY": "847742176",
												"C_NAME": "Customer#847742176",
												"C_ADDRESS": "d,nx0pEiyXQpMehmdPfZP8snGnAduoWEc1BFf",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "8135.90"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "tect blithely furiously regular packages. quickly bold instructions are furiously. slyly blithe a",
												"C_PHONE": "18-475-285-6427",
												"C_CUSTKEY": "847742177",
												"C_NAME": "Customer#847742177",
												"C_ADDRESS": "znppXXwRkMue3TqPo9nQTEiyhweKg4YV6y72N",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8167.53"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "press foxes use at the bold deposits. slyly even pains unwi",
												"C_PHONE": "12-539-706-4633",
												"C_CUSTKEY": "847742178",
												"C_NAME": "Customer#847742178",
												"C_ADDRESS": " Zk8WFiSX7kt0s0vEdXV",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "776.77"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "uriously ironic foxes kindle slyly about the escapades. furiously regular packages hag",
												"C_PHONE": "19-750-879-6377",
												"C_CUSTKEY": "847742179",
												"C_NAME": "Customer#847742179",
												"C_ADDRESS": "ZPCepXN3Ye",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "7125.35"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "equests. furiously final deposits above the furiously express theodolites boost blithel",
												"C_PHONE": "28-919-140-1043",
												"C_CUSTKEY": "847742180",
												"C_NAME": "Customer#847742180",
												"C_ADDRESS": "ShOl7ieldJbMm0Kzp8r6VXDVZQtgop",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7855.16"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "rnes use blithely stealthily even deposits. packages around the blithely bold foxes sleep quic",
												"C_PHONE": "25-354-934-5355",
												"C_CUSTKEY": "847742181",
												"C_NAME": "Customer#847742181",
												"C_ADDRESS": "7o8WeBMMkaK0jrmnx tqIeMxbNva7hZvsl",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "8691.51"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ial deposits are slyly. platelets along the furiously regular pinto beans haggle quickly ruthless theodoli",
												"C_PHONE": "20-897-484-9587",
												"C_CUSTKEY": "847742182",
												"C_NAME": "Customer#847742182",
												"C_ADDRESS": "aCgP5rTmRutRUNkKt7R3fBfyTy",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "7268.56"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ccording to the slow, regular theodoli",
												"C_PHONE": "22-639-137-4934",
												"C_CUSTKEY": "847742183",
												"C_NAME": "Customer#847742183",
												"C_ADDRESS": "Io,fVl2JeYPfzr ",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "5707.73"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " slyly silent platelets breach slyly whithout the furiously final ideas. final ideas use alongside of t",
												"C_PHONE": "28-597-289-3261",
												"C_CUSTKEY": "847742184",
												"C_NAME": "Customer#847742184",
												"C_ADDRESS": "qniho2oYIzdWLgVS39w8nGgGLi2DD",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7893.77"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "f the carefully regular foxes. ruthlessly unusual accounts boost. ironic, unusual deposits cajole quickly ",
												"C_PHONE": "20-650-829-8895",
												"C_CUSTKEY": "847742185",
												"C_NAME": "Customer#847742185",
												"C_ADDRESS": "Q1QwKvzN5mC81va,bVyn",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8617.48"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s. blithely regular accounts sleep. carefull",
												"C_PHONE": "10-105-870-1957",
												"C_CUSTKEY": "847742186",
												"C_NAME": "Customer#847742186",
												"C_ADDRESS": "y3S,HKJ,iR",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "5985.31"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ounts after the final gifts sublate slyly ironic platelets. ",
												"C_PHONE": "24-647-904-1065",
												"C_CUSTKEY": "847742187",
												"C_NAME": "Customer#847742187",
												"C_ADDRESS": "FWocNiRpCjC",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "9080.47"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "endencies. packages nag never. blithe",
												"C_PHONE": "29-249-858-8347",
												"C_CUSTKEY": "847742188",
												"C_NAME": "Customer#847742188",
												"C_ADDRESS": "0UBXR8p09BQe",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "-439.20"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " pinto beans. even excuses wake furiously. carefully spe",
												"C_PHONE": "25-458-904-4687",
												"C_CUSTKEY": "847742189",
												"C_NAME": "Customer#847742189",
												"C_ADDRESS": "n8bPoD,ZmI9",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "8322.39"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " unusual requests solve deposits. dependencies",
												"C_PHONE": "26-769-489-1585",
												"C_CUSTKEY": "847742190",
												"C_NAME": "Customer#847742190",
												"C_ADDRESS": "CEUxVgNrFsYWABbH",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "7519.35"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " theodolites. unusual accounts around the slo",
												"C_PHONE": "29-479-564-9041",
												"C_CUSTKEY": "847742191",
												"C_NAME": "Customer#847742191",
												"C_ADDRESS": "W5CqMKC1g31GCpAKp",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "7817.49"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "riously special ideas haggle blithely. slyly final dependencie",
												"C_PHONE": "19-579-803-5499",
												"C_CUSTKEY": "847742192",
												"C_NAME": "Customer#847742192",
												"C_ADDRESS": ",Y74eY4A8tm P0TJ",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "2548.70"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " after the quickly silent requests. asymptotes try to caj",
												"C_PHONE": "30-822-710-9209",
												"C_CUSTKEY": "847742193",
												"C_NAME": "Customer#847742193",
												"C_ADDRESS": "9nJm3MXVD45JEgmrd2XJa7gDnZX3vb3iZ",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "-57.73"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "carefully regular accounts cajole bravely carefully e",
												"C_PHONE": "29-450-535-4468",
												"C_CUSTKEY": "847742194",
												"C_NAME": "Customer#847742194",
												"C_ADDRESS": "8Rk6wsIgctm99TZ7JPE9N0Sj",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6630.86"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ronic, pending instructions. accounts sleep permanently against the carefully express platelets. ",
												"C_PHONE": "28-264-971-1202",
												"C_CUSTKEY": "847742195",
												"C_NAME": "Customer#847742195",
												"C_ADDRESS": "MrVhZmth8i0rIwVsebTzoxWbQ9cS",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "1977.74"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " are furiously. pending, dogged forges haggle quickly across the regular packages. ironic requests nag qu",
												"C_PHONE": "22-355-201-1163",
												"C_CUSTKEY": "847742196",
												"C_NAME": "Customer#847742196",
												"C_ADDRESS": "yZH,vMdmXh4tQIZP2zLRsfQ27V9AGTlfcF",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6887.86"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "e carefully final theodolites. fluffily ironic pi",
												"C_PHONE": "26-829-991-2620",
												"C_CUSTKEY": "847742197",
												"C_NAME": "Customer#847742197",
												"C_ADDRESS": "NcunE3LIWi44xG,NQMSX4ny1slejBnWpm2",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "9340.83"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ions against the slyly regular foxes haggle along t",
												"C_PHONE": "10-222-640-9061",
												"C_CUSTKEY": "847742198",
												"C_NAME": "Customer#847742198",
												"C_ADDRESS": "uyGnQbrBFthvDgu9 ETxI",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "8480.33"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ideas. even pinto beans are. furiously unusual ideas sleep silently. bold pinto beans s",
												"C_PHONE": "22-829-997-9913",
												"C_CUSTKEY": "847742199",
												"C_NAME": "Customer#847742199",
												"C_ADDRESS": "DRNYV3TBQUcf8PHYLbvId",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "-70.58"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "e special, sly packages. carefully regular asymptotes according to the carefully r",
												"C_PHONE": "28-260-951-4245",
												"C_CUSTKEY": "847742200",
												"C_NAME": "Customer#847742200",
												"C_ADDRESS": "aPP7j2iGZGRu",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-369.78"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " use deposits. quickly even ideas",
												"C_PHONE": "14-958-963-1547",
												"C_CUSTKEY": "847742201",
												"C_NAME": "Customer#847742201",
												"C_ADDRESS": "WgXluVLZ4kfQrZCS4TZX2Z1Tze",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "8987.45"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "deas. express deposits above the final deposits wake furiously pending deposits. blithel",
												"C_PHONE": "11-685-900-2035",
												"C_CUSTKEY": "847742202",
												"C_NAME": "Customer#847742202",
												"C_ADDRESS": "VpO8d0BmO2tc",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9107.33"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "riously slyly even deposits. express frays need to haggle un",
												"C_PHONE": "12-884-335-8246",
												"C_CUSTKEY": "847742203",
												"C_NAME": "Customer#847742203",
												"C_ADDRESS": "qVauR0GI3IRyPeFYyC8",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "-11.32"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "print fluffily furiously express ideas. bold requests hinder unusual requests. slyly",
												"C_PHONE": "31-358-261-8161",
												"C_CUSTKEY": "847742204",
												"C_NAME": "Customer#847742204",
												"C_ADDRESS": "jJQSKcreYLtd5nuFQep,nCH7WIWhly Eko2yJHm1",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5611.48"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ts. packages above the slyly bold theodolites dazzle slyly fluffily ironic packages. slyly unusual pinto b",
												"C_PHONE": "21-453-283-2934",
												"C_CUSTKEY": "847742205",
												"C_NAME": "Customer#847742205",
												"C_ADDRESS": "NEXnxm7YTnPcg",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "7077.53"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " furiously unusual requests among the final dolphins cajole furiously among the even, spe",
												"C_PHONE": "16-329-183-6222",
												"C_CUSTKEY": "847742206",
												"C_NAME": "Customer#847742206",
												"C_ADDRESS": "5WSa8dDSzvoGtA4KMCkax,OpIZcH lsjZ",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "7127.38"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ests. carefully regular accounts maintain slyly across the quickly ironic p",
												"C_PHONE": "29-103-777-9369",
												"C_CUSTKEY": "847742207",
												"C_NAME": "Customer#847742207",
												"C_ADDRESS": "fweghfzMgXvLr4pJ",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8926.50"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "osits use fluffily. packages agains",
												"C_PHONE": "26-153-366-1366",
												"C_CUSTKEY": "847742208",
												"C_NAME": "Customer#847742208",
												"C_ADDRESS": "dzP4voC74GH PG6W",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "7824.56"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ld packages detect sometimes. furiously even accounts above the final packages are carefully ironic",
												"C_PHONE": "28-382-533-1826",
												"C_CUSTKEY": "847742209",
												"C_NAME": "Customer#847742209",
												"C_ADDRESS": "5wMDeNrtvQCeDFo",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "500.63"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "nstructions wake blithely blithely express a",
												"C_PHONE": "13-523-721-6934",
												"C_CUSTKEY": "847742210",
												"C_NAME": "Customer#847742210",
												"C_ADDRESS": "o,Kjv PFvWpdfBU7j5 DUv",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8026.65"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sleep. final accounts sleep doggedly. even, ironic pinto bean",
												"C_PHONE": "34-713-806-5667",
												"C_CUSTKEY": "847742211",
												"C_NAME": "Customer#847742211",
												"C_ADDRESS": "ll9u6N7Z mc3FQ63fEQPD2HvOKX B6",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "8916.19"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "r packages hang blithely even pinto beans. bold dugouts wake slyly regula",
												"C_PHONE": "14-354-524-6496",
												"C_CUSTKEY": "847742212",
												"C_NAME": "Customer#847742212",
												"C_ADDRESS": "2x6AWS7aic7fiwPHvYkaIIax6weB4Lyh",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "-584.92"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ests boost carefully for the regular courts? furiously ironic warthogs use blithely about ",
												"C_PHONE": "23-228-944-3516",
												"C_CUSTKEY": "847742213",
												"C_NAME": "Customer#847742213",
												"C_ADDRESS": "d,M9bw2bBQacYsWMc39MoUcC,RcKGfviiTB",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "1205.72"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "gside of the carefully express instructions are carefully ironic accoun",
												"C_PHONE": "33-790-694-7205",
												"C_CUSTKEY": "847742214",
												"C_NAME": "Customer#847742214",
												"C_ADDRESS": "8vdM3kNBcLuZztZQMCi5SscctO GpIWBb",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "454.35"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y ironic requests use fluffily fina",
												"C_PHONE": "16-583-354-6778",
												"C_CUSTKEY": "847742215",
												"C_NAME": "Customer#847742215",
												"C_ADDRESS": "7f04VNCYpMytp5pUWoxosxkrDIf",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "251.16"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " the deposits nag blithely final pinto beans. regular foxes sleep slyly carefully regular asymptotes. regular pac",
												"C_PHONE": "22-433-798-6474",
												"C_CUSTKEY": "847742216",
												"C_NAME": "Customer#847742216",
												"C_ADDRESS": "O mhz9io,xWW22bjm4h6QtScHHw",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6114.36"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ironic requests. furiously ironic a",
												"C_PHONE": "12-510-515-9390",
												"C_CUSTKEY": "847742217",
												"C_NAME": "Customer#847742217",
												"C_ADDRESS": "Nc,nzswNlLXTz2FxCXu67lG0E7NONLMEEXJ",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "-2.49"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " unusual, pending packages. furiously regular accounts poach. slyly even i",
												"C_PHONE": "13-300-419-5458",
												"C_CUSTKEY": "847742218",
												"C_NAME": "Customer#847742218",
												"C_ADDRESS": "L5lj5Q7n7nrr79ebELYW8X9Mnm6bEItiHxnm",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "129.32"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "deas sleep blithely blithely regular deposits. depo",
												"C_PHONE": "30-693-728-7095",
												"C_CUSTKEY": "847742219",
												"C_NAME": "Customer#847742219",
												"C_ADDRESS": " T4DqZAuqiYr1oCFYixlt9",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "4410.32"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "o beans among the even, unusual courts sleep slyly after the regular deposits. furious",
												"C_PHONE": "28-907-383-3939",
												"C_CUSTKEY": "847742220",
												"C_NAME": "Customer#847742220",
												"C_ADDRESS": "iG2CAQdOKKYSONM2nFkmJT4",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "4306.52"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "as. requests use about the requests. fluffily even requests cajole sometimes slyly ironic packages. even, final",
												"C_PHONE": "14-978-143-9789",
												"C_CUSTKEY": "847742221",
												"C_NAME": "Customer#847742221",
												"C_ADDRESS": "RM89zIwowPRMO4 DyAUFN7AMTFcub eIaC0",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "8726.71"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ns against the ironic instructions use ",
												"C_PHONE": "27-500-353-3829",
												"C_CUSTKEY": "847742222",
												"C_NAME": "Customer#847742222",
												"C_ADDRESS": "YvyLcLvMOuSJ5bJE5i",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "4918.21"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " sly accounts use blithely furi",
												"C_PHONE": "24-592-392-9158",
												"C_CUSTKEY": "847742223",
												"C_NAME": "Customer#847742223",
												"C_ADDRESS": "wHB1xF4IoH46v",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "4301.10"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "latelets around the carefully silent pinto beans are carefully according to the deposits. even packa",
												"C_PHONE": "34-628-215-5133",
												"C_CUSTKEY": "847742224",
												"C_NAME": "Customer#847742224",
												"C_ADDRESS": "Txcd10QflL K Krg93qFt",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5655.48"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e carefully slyly special dugouts. quickly even requests are carefull",
												"C_PHONE": "20-892-227-5221",
												"C_CUSTKEY": "847742225",
												"C_NAME": "Customer#847742225",
												"C_ADDRESS": "X5hp5lnHnJECx3glqIM",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "9707.99"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "rs. slyly ironic excuses around the silent, regular Tiresias unwind blithely carefully regular deposits. c",
												"C_PHONE": "29-773-945-5906",
												"C_CUSTKEY": "847742226",
												"C_NAME": "Customer#847742226",
												"C_ADDRESS": "Ktuzgk0hlkjCA sVAMhcXPlRfviYt7CjY9cqXB",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8193.59"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y quiet packages are blithely final theodolites. quickly express deposits poach furiously carefully even pack",
												"C_PHONE": "21-300-140-2097",
												"C_CUSTKEY": "847742227",
												"C_NAME": "Customer#847742227",
												"C_ADDRESS": "HpNLV5CS3ylhP0BcEKuwmaBMEPEAsvVj6 ",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9741.36"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "cajole carefully deposits. fluffily regular asymptotes among the blithely si",
												"C_PHONE": "20-223-860-7444",
												"C_CUSTKEY": "847742228",
												"C_NAME": "Customer#847742228",
												"C_ADDRESS": "xNw5NhoKA5ywbYU1M9pMFv",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8060.53"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " furiously regular excuses. regular de",
												"C_PHONE": "18-666-200-6337",
												"C_CUSTKEY": "847742229",
												"C_NAME": "Customer#847742229",
												"C_ADDRESS": "Sqa,5dCf9emtXytrNVN3XkdHLaUPvEX",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6380.25"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ously express accounts. carefully unusual ideas use carefully along the regular, ruthless gifts. slyly",
												"C_PHONE": "22-264-986-9770",
												"C_CUSTKEY": "847742230",
												"C_NAME": "Customer#847742230",
												"C_ADDRESS": ",IyzqAJoNGN9IWXTvxez6LTZVoItEoBAOT",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "2946.57"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ully regular accounts boost above the quickly pending foxes. bold",
												"C_PHONE": "21-198-577-1221",
												"C_CUSTKEY": "847742231",
												"C_NAME": "Customer#847742231",
												"C_ADDRESS": "aiMjC9akOTrKLNGIJNtvo",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9937.28"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " deposits sleep blithely. ironic requests nag. ironic foxes boost blithely final, even pinto be",
												"C_PHONE": "14-769-615-1745",
												"C_CUSTKEY": "847742232",
												"C_NAME": "Customer#847742232",
												"C_ADDRESS": "ctAdINjjCaEZG,mSHdRJlXZ",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "925.60"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "deposits. silently final requests haggle according to the furiously unusual requests. blithely regular dolphins wak",
												"C_PHONE": "33-419-588-8686",
												"C_CUSTKEY": "847742233",
												"C_NAME": "Customer#847742233",
												"C_ADDRESS": "5S9DC3guQxY57rx9kEz",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "450.67"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": ", bold platelets cajole sometimes. even, ironic requests are ",
												"C_PHONE": "29-851-895-2009",
												"C_CUSTKEY": "847742234",
												"C_NAME": "Customer#847742234",
												"C_ADDRESS": "W5hsWC,EcXGfYCvvvr4ReJBf50BM",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "4352.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "riously even accounts grow final, final instructions. ironic excuses caj",
												"C_PHONE": "26-907-481-3879",
												"C_CUSTKEY": "847742235",
												"C_NAME": "Customer#847742235",
												"C_ADDRESS": "DrntSSjnP0UeulSZ",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "3088.68"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ts nag. accounts sleep about the blithely iron",
												"C_PHONE": "16-793-251-8446",
												"C_CUSTKEY": "847742236",
												"C_NAME": "Customer#847742236",
												"C_ADDRESS": "Qxm,sbqaQ07Ys0",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "439.25"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "lyly silent deposits nag over the furiously regular deposits. even, express packages ",
												"C_PHONE": "31-175-968-6846",
												"C_CUSTKEY": "847742237",
												"C_NAME": "Customer#847742237",
												"C_ADDRESS": "jxfjeDuKgvVjg A8JqSj2p3aZ9lw02k",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "-628.61"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "posits. slyly even packages are quickly fluffily regular acco",
												"C_PHONE": "24-538-382-6732",
												"C_CUSTKEY": "847742238",
												"C_NAME": "Customer#847742238",
												"C_ADDRESS": "nlDLm7OYKXjERdoZFl9u2S3",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "3910.95"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "above the regularly special accounts. furiously pending theodolites haggle furiously. carefully final notornis ",
												"C_PHONE": "10-429-198-6689",
												"C_CUSTKEY": "847742239",
												"C_NAME": "Customer#847742239",
												"C_ADDRESS": "9WUuKjjnYsHqbNRV5dkOlD9VZhtWRoM7",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "4327.51"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": ". carefully pending excuses after the furiou",
												"C_PHONE": "31-380-412-1430",
												"C_CUSTKEY": "847742240",
												"C_NAME": "Customer#847742240",
												"C_ADDRESS": ",HDBC3vVaj IG4nGM6OehJ",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "9409.54"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "thout the fluffily even excuses. even excuses doubt about the furi",
												"C_PHONE": "21-420-130-5142",
												"C_CUSTKEY": "847742241",
												"C_NAME": "Customer#847742241",
												"C_ADDRESS": "crZLnMpkpZAfVXF4fezxZ kKD4B",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "8275.03"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ggle carefully among the asymptotes. even packages",
												"C_PHONE": "30-406-996-6849",
												"C_CUSTKEY": "847742242",
												"C_NAME": "Customer#847742242",
												"C_ADDRESS": "2B0YKjR2CZKP0t,eum3",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "3444.12"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "erve quietly near the unusual pinto beans. p",
												"C_PHONE": "24-288-447-2200",
												"C_CUSTKEY": "847742243",
												"C_NAME": "Customer#847742243",
												"C_ADDRESS": "7jd72jkjQNAJRzbF7ZTPPf",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "1386.36"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ily silent instructions haggle regular, unusu",
												"C_PHONE": "28-121-517-5268",
												"C_CUSTKEY": "847742244",
												"C_NAME": "Customer#847742244",
												"C_ADDRESS": "IfLt18NEDHaGEPCcq1HO4H3BIoAAiAQa",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "432.70"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " requests nag blithely alongside of the pending warthogs. quickly express foxes use blithely slyl",
												"C_PHONE": "14-506-114-5165",
												"C_CUSTKEY": "847742245",
												"C_NAME": "Customer#847742245",
												"C_ADDRESS": "56GmEjp6f1x8po am8L16pJv6oYWfQAjNa",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "-752.35"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "lyly silent foxes play carefully around the requests. slyly regular pinto beans serve carefully. furiously even i",
												"C_PHONE": "15-925-630-7708",
												"C_CUSTKEY": "847742246",
												"C_NAME": "Customer#847742246",
												"C_ADDRESS": "39OIIldchmTH",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "3240.82"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "iet, bold courts wake daringl",
												"C_PHONE": "34-986-481-9029",
												"C_CUSTKEY": "847742247",
												"C_NAME": "Customer#847742247",
												"C_ADDRESS": "oQsm4YO0JzSq8n84H1 NTNpSiyO",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5379.25"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " slyly ironic sentiments along the slyly regular requests sleep carefully across the express requests",
												"C_PHONE": "11-556-934-5822",
												"C_CUSTKEY": "847742248",
												"C_NAME": "Customer#847742248",
												"C_ADDRESS": "j3lK67Yi1SzzGoQg",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9072.92"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y enticing accounts after the furiously regular t",
												"C_PHONE": "33-418-384-3554",
												"C_CUSTKEY": "847742249",
												"C_NAME": "Customer#847742249",
												"C_ADDRESS": "aO MTZPORy0aq CAg",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "4597.58"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ts are sometimes-- slyly silent ideas cajole fluffily final platelets! furiously ",
												"C_PHONE": "27-741-523-5642",
												"C_CUSTKEY": "847742250",
												"C_NAME": "Customer#847742250",
												"C_ADDRESS": "vyMmjkvlG12VdorNk,GPh,E2cMuzwd",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "5606.55"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "lyly regular requests serve among the blithely pending p",
												"C_PHONE": "17-139-751-6262",
												"C_CUSTKEY": "847742251",
												"C_NAME": "Customer#847742251",
												"C_ADDRESS": "tmwYPK,AV35h0ggNi1RqgXEdwf",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "1224.89"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "p furiously. even hockey players sleep carefully after the final re",
												"C_PHONE": "15-632-538-6450",
												"C_CUSTKEY": "847742252",
												"C_NAME": "Customer#847742252",
												"C_ADDRESS": "RoguBzoGxjNLS7MYWF4azx C",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "3721.56"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly along the dependencies. furiously even instructions play ideas. regular packages sleep",
												"C_PHONE": "20-734-478-9915",
												"C_CUSTKEY": "847742253",
												"C_NAME": "Customer#847742253",
												"C_ADDRESS": " FQJ1UgTeOgbpp8oxly4EGI1lx0s3QF3bLp8X",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "301.92"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ross the regular courts sublate furiously across the final excuses. depo",
												"C_PHONE": "13-200-618-4341",
												"C_CUSTKEY": "847742254",
												"C_NAME": "Customer#847742254",
												"C_ADDRESS": "x3I ABlOO9,ZEJ2HkpjFk27vbazHLmc,",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "1293.73"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " accounts. slyly special deposits against the furiously express excuses cajole carefull",
												"C_PHONE": "19-247-516-2705",
												"C_CUSTKEY": "847742255",
												"C_NAME": "Customer#847742255",
												"C_ADDRESS": "f6YVCLrK2GYGtRs4o0Jyo6J vO296 RA",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "5720.68"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " of the regular accounts. blithely final instructio",
												"C_PHONE": "17-453-227-3851",
												"C_CUSTKEY": "847742256",
												"C_NAME": "Customer#847742256",
												"C_ADDRESS": "5HH yHoFjjQGQvgz65bp",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "5539.26"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sts. ironic deposits boost carefully ironic, regular deposits. final package",
												"C_PHONE": "31-220-158-7273",
												"C_CUSTKEY": "847742257",
												"C_NAME": "Customer#847742257",
												"C_ADDRESS": "7mHsfnxu1Tnb8RbJmrtO0IDVPh41ni",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "3378.55"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ckly regular ideas cajole. regular, regular packages cajole quickly. regular, regul",
												"C_PHONE": "11-307-765-5275",
												"C_CUSTKEY": "847742258",
												"C_NAME": "Customer#847742258",
												"C_ADDRESS": "w9s,E320Uii5oSRfCil8XxWafpKbn,D98c",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "-686.01"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y across the furiously bold dependencies. ",
												"C_PHONE": "15-569-134-1138",
												"C_CUSTKEY": "847742259",
												"C_NAME": "Customer#847742259",
												"C_ADDRESS": "Rm9OqiKauIZ",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "7096.27"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ong the deposits. bold, slow theodolites would sleep quickly slyly final dependencies. hockey players use furious",
												"C_PHONE": "11-662-395-3984",
												"C_CUSTKEY": "847742260",
												"C_NAME": "Customer#847742260",
												"C_ADDRESS": ",wH2eBm6TA vmcKu4VBkY5DrQw0OYE0z5uzb",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "2988.87"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "tions. quickly regular deposits among the daringly ironic gifts cajole carefully among the blithely",
												"C_PHONE": "18-547-868-1852",
												"C_CUSTKEY": "847742261",
												"C_NAME": "Customer#847742261",
												"C_ADDRESS": "HprZnqsOdbg0A0mCjzQMq6",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "5950.63"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "nically! excuses nag carefully even accounts. furiously regular instructions are quickly among the even, even acco",
												"C_PHONE": "18-722-660-9246",
												"C_CUSTKEY": "847742262",
												"C_NAME": "Customer#847742262",
												"C_ADDRESS": "XpGH87FBVcuGVYMcOFXVY9Dbi",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "9200.99"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "s requests. furiously bold accounts detect: ironic, even accounts haggle: carefully ironic requests serve carefully ",
												"C_PHONE": "16-844-206-4932",
												"C_CUSTKEY": "847742263",
												"C_NAME": "Customer#847742263",
												"C_ADDRESS": "GvoqgiLxm061aVrk1ys54O4F7RGWhVb",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1160.52"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sublate slyly? thinly pending asymptotes wake against the final packages. even foxes affix carefully u",
												"C_PHONE": "32-376-943-1322",
												"C_CUSTKEY": "847742264",
												"C_NAME": "Customer#847742264",
												"C_ADDRESS": "SSEQl1Ra7YHVJLA,2QLwkJxVRg",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "-160.10"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "onic somas cajole after the blithely e",
												"C_PHONE": "31-502-187-9201",
												"C_CUSTKEY": "847742265",
												"C_NAME": "Customer#847742265",
												"C_ADDRESS": "Byc,HSZdR71CNhK0i",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "2097.48"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "nts are fluffily. blithely even ideas haggle quickly ironic requests. blithely ironic packages affix slyly. ",
												"C_PHONE": "25-208-213-4232",
												"C_CUSTKEY": "847742266",
												"C_NAME": "Customer#847742266",
												"C_ADDRESS": "0RhbLfmUVxs,XEMmMPf0k26GW167ZMygVTIhD",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "6313.31"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly final packages dazzle quickly according to the furiously regular instructions. request",
												"C_PHONE": "24-771-820-7762",
												"C_CUSTKEY": "847742267",
												"C_NAME": "Customer#847742267",
												"C_ADDRESS": ",1ZvJcwTqdz7bHebjErN eCVUu3xjf5kideV6",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "-199.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "nal accounts are slyly final, even packages. carefully bold theodolites above t",
												"C_PHONE": "13-979-251-8779",
												"C_CUSTKEY": "847742268",
												"C_NAME": "Customer#847742268",
												"C_ADDRESS": ",mNSL4oK9aGgkT3 ",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8263.10"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "final accounts wake. bold asymptotes affix. final deposits sleep. regular epitaphs are furiously. quickly even d",
												"C_PHONE": "30-599-664-1508",
												"C_CUSTKEY": "847742269",
												"C_NAME": "Customer#847742269",
												"C_ADDRESS": "4CoTaarR6txnkZM2WDm whAkQBkm8LCBUtwN7",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "943.82"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "theodolites. special instructions haggle. carefully unusual ideas boost quickly even, s",
												"C_PHONE": "32-542-722-3014",
												"C_CUSTKEY": "847742270",
												"C_NAME": "Customer#847742270",
												"C_ADDRESS": "9,LOehHh5X",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "9668.54"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " gifts impress slyly regular courts. furiously even reques",
												"C_PHONE": "13-398-442-2025",
												"C_CUSTKEY": "847742271",
												"C_NAME": "Customer#847742271",
												"C_ADDRESS": "3Fx,owBAvi90wbAu441K9",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "5149.72"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "sual, bold ideas cajole furiously. fluffily pending accounts wake furiously carefully final platelets. ",
												"C_PHONE": "23-487-292-7042",
												"C_CUSTKEY": "847742272",
												"C_NAME": "Customer#847742272",
												"C_ADDRESS": "SdLKnDg4vYeOEnE7O8y2bQzPiJWsI",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "1323.96"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "blithely. carefully stealthy instructions believe carefully even th",
												"C_PHONE": "28-822-389-8972",
												"C_CUSTKEY": "847742273",
												"C_NAME": "Customer#847742273",
												"C_ADDRESS": "rm0M5,kZi87VRIJPwlJcweqjsZDicIU72ORS",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7803.13"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "old, final ideas. slyly final",
												"C_PHONE": "14-419-406-1143",
												"C_CUSTKEY": "847742274",
												"C_NAME": "Customer#847742274",
												"C_ADDRESS": "SOKUW7DrVUNU1IveSGeF dKwRvliefxo4MLSy1",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "3326.75"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ess platelets about the final, pending packages are quickly fur",
												"C_PHONE": "17-254-917-9095",
												"C_CUSTKEY": "847742275",
												"C_NAME": "Customer#847742275",
												"C_ADDRESS": "sqv Ga5nQWgU80V99LvVdf",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8749.75"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ts. regular, daring excuses agains",
												"C_PHONE": "28-125-104-7442",
												"C_CUSTKEY": "847742276",
												"C_NAME": "Customer#847742276",
												"C_ADDRESS": "k0nGz6aiBf47lFeW2Jdex",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "7116.61"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ns. carefully bold attainments according to the furiousl",
												"C_PHONE": "10-894-713-4459",
												"C_CUSTKEY": "847742277",
												"C_NAME": "Customer#847742277",
												"C_ADDRESS": "nAGIQWAvgKk3tokq",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "3875.84"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " slyly even accounts eat after the boldly pending accounts. slyly pending instructions ac",
												"C_PHONE": "17-835-300-3784",
												"C_CUSTKEY": "847742278",
												"C_NAME": "Customer#847742278",
												"C_ADDRESS": "zhrsW,PsZA0nt4OvB2Vnm151bq8w",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8188.65"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "carefully unusual accounts. deposits promise qui",
												"C_PHONE": "18-796-124-7083",
												"C_CUSTKEY": "847742279",
												"C_NAME": "Customer#847742279",
												"C_ADDRESS": "a1iLC3PFbTOK9o0 S C6WlS23BTpjApcsNa",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "3739.26"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ey players nag regular, furious theodolites. fluffily ruthless packages haggle alongsi",
												"C_PHONE": "33-419-942-4668",
												"C_CUSTKEY": "847742280",
												"C_NAME": "Customer#847742280",
												"C_ADDRESS": "uciMy1r5xXbpSmkTVKH0Y2asC",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "809.11"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ckly ironic dinos. blithely unusual packages sleep idly unusual packages. final ideas wake quickly ac",
												"C_PHONE": "24-861-565-2963",
												"C_CUSTKEY": "847742281",
												"C_NAME": "Customer#847742281",
												"C_ADDRESS": "6p0cQvwYVz,KqJgqDINdRscI04CDws",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "716.43"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "om the blithely unusual deposits. de",
												"C_PHONE": "26-473-266-7372",
												"C_CUSTKEY": "847742282",
												"C_NAME": "Customer#847742282",
												"C_ADDRESS": "SuzPIfoXh4ldX64D7cIVeb 9MMCWV6M,5,tNj",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5032.81"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s detect regular, ironic accounts. carefully special accounts nag quickly. fur",
												"C_PHONE": "12-715-696-5002",
												"C_CUSTKEY": "847742283",
												"C_NAME": "Customer#847742283",
												"C_ADDRESS": "P6JBBjaXl2N1LEfiey3tihjgbMxtPARhb",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "5434.18"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ously ironic deposits among the fluffily ironic realms u",
												"C_PHONE": "12-640-176-2778",
												"C_CUSTKEY": "847742284",
												"C_NAME": "Customer#847742284",
												"C_ADDRESS": "8rQ63EhySSkl6apd ",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8193.58"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "re regular ideas. regular, express courts cajole quickly-- regular theod",
												"C_PHONE": "26-947-615-5656",
												"C_CUSTKEY": "847742285",
												"C_NAME": "Customer#847742285",
												"C_ADDRESS": "LhT5gFJUYS87b3x53Uq82 lWdcvArpcUvhrZNxe",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "9549.03"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "even instructions. quickly express pinto beans haggle slyly blithely ironic platelets. theodolites might ",
												"C_PHONE": "22-150-243-2540",
												"C_CUSTKEY": "847742286",
												"C_NAME": "Customer#847742286",
												"C_ADDRESS": "vBRLhKPLiPl7BjG3JbZBcvBSjuF4sJh8Hce",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "9650.92"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ructions. quickly final pinto beans through the pending, even account",
												"C_PHONE": "17-165-125-4660",
												"C_CUSTKEY": "847742287",
												"C_NAME": "Customer#847742287",
												"C_ADDRESS": "q3W CLJVfh2s78GqBhpwIMUsdJTE8xJTHK",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "6135.07"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "l dependencies. special, regular accounts hang carefully. blithely ironic instructions from the slyly regular ins",
												"C_PHONE": "32-355-329-6614",
												"C_CUSTKEY": "847742288",
												"C_NAME": "Customer#847742288",
												"C_ADDRESS": "Zcyt3BMU01EIa4kzckpi",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "7078.22"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " the pending deposits. carefully e",
												"C_PHONE": "34-765-501-8332",
												"C_CUSTKEY": "847742289",
												"C_NAME": "Customer#847742289",
												"C_ADDRESS": "krv7SZeYdgMp b1HeB45C8n",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "7715.19"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y after the carefully bold dependencies. regular packages along the daringly even accounts sleep",
												"C_PHONE": "34-894-403-9378",
												"C_CUSTKEY": "847742290",
												"C_NAME": "Customer#847742290",
												"C_ADDRESS": "JrXmFltgoKIj5ab1ySS4kW3oGA",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "-777.45"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "to beans cajole quickly ironic instructions. furiously regular excuses haggle around the final accounts",
												"C_PHONE": "12-135-661-7103",
												"C_CUSTKEY": "847742291",
												"C_NAME": "Customer#847742291",
												"C_ADDRESS": "eqWhYYcy8KA4Sd",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "-623.73"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y even platelets are along the final",
												"C_PHONE": "20-772-767-4627",
												"C_CUSTKEY": "847742292",
												"C_NAME": "Customer#847742292",
												"C_ADDRESS": "QOteKU0lR,8Qq8kTIOYJc",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8931.10"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " carefully against the ironic forges. furiously pending courts are slyly slyly special excuse",
												"C_PHONE": "18-790-775-2411",
												"C_CUSTKEY": "847742293",
												"C_NAME": "Customer#847742293",
												"C_ADDRESS": "X4YSVLqp8X1DYa1JtlYAky",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8058.80"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "en dolphins are furiously among the furiously special ideas. ruthless instructi",
												"C_PHONE": "11-474-429-5745",
												"C_CUSTKEY": "847742294",
												"C_NAME": "Customer#847742294",
												"C_ADDRESS": "Fad,k30Bqy9nlM",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "-703.98"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "gular accounts should have to use. silent instructions according to the regular, reg",
												"C_PHONE": "21-620-984-4553",
												"C_CUSTKEY": "847742295",
												"C_NAME": "Customer#847742295",
												"C_ADDRESS": "YpexOh5,dqS",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "2191.34"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ilent pinto beans nag slyly. fluffily final packages affix ",
												"C_PHONE": "26-107-613-7281",
												"C_CUSTKEY": "847742296",
												"C_NAME": "Customer#847742296",
												"C_ADDRESS": "za4OPnmIaev87bucX1ZSRy K2",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "-226.97"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "riously unusual tithes use furiously across the regular theodolites. slyly even deposits ",
												"C_PHONE": "27-890-472-7719",
												"C_CUSTKEY": "847742297",
												"C_NAME": "Customer#847742297",
												"C_ADDRESS": "j8AOcg9yrYc0Ez9k",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "185.10"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ronic sauternes are furiously pending requests. blithely quick deposits detec",
												"C_PHONE": "13-470-835-5606",
												"C_CUSTKEY": "847742298",
												"C_NAME": "Customer#847742298",
												"C_ADDRESS": "5MrRR,1OQgmz",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "6834.50"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "timents thrash blithely across the blithely express instructions. silent, special deposits might nag sly",
												"C_PHONE": "22-727-882-6840",
												"C_CUSTKEY": "847742299",
												"C_NAME": "Customer#847742299",
												"C_ADDRESS": "C7Pm6dpRgh3",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "3508.81"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ng packages maintain alongside of the blithely ironic accounts. quickly special foxes unwind sometimes. always p",
												"C_PHONE": "10-484-183-7556",
												"C_CUSTKEY": "847742300",
												"C_NAME": "Customer#847742300",
												"C_ADDRESS": "hPIC0lqRLYeXWwC0b0tVlu6om",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "-408.42"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "arefully blithely regular packages. packages dazzle slyly ironic asymptotes. blithely",
												"C_PHONE": "29-320-304-9471",
												"C_CUSTKEY": "847742301",
												"C_NAME": "Customer#847742301",
												"C_ADDRESS": "GPPfRdPOTQ",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8561.38"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ve the slyly silent platelets haggle after the carefully special deposits. carefully e",
												"C_PHONE": "22-385-745-5321",
												"C_CUSTKEY": "847742302",
												"C_NAME": "Customer#847742302",
												"C_ADDRESS": "IuhWXPMjGM",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "9257.46"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "olphins boost against the deposits. final, bold requests must have to are quickly. ideas are above the pend",
												"C_PHONE": "25-851-966-2401",
												"C_CUSTKEY": "847742303",
												"C_NAME": "Customer#847742303",
												"C_ADDRESS": "6ad3zhNkPuiarZZ",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "4191.45"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "sly furious requests after the furiously ironic ideas integrate dependen",
												"C_PHONE": "18-906-499-6019",
												"C_CUSTKEY": "847742304",
												"C_NAME": "Customer#847742304",
												"C_ADDRESS": "H0lycXQzWa",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "-340.33"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "posits hinder. blithely final packages against the unu",
												"C_PHONE": "12-119-855-1827",
												"C_CUSTKEY": "847742305",
												"C_NAME": "Customer#847742305",
												"C_ADDRESS": "Jdf,gi7oPe5z",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "9078.91"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "odolites about the realms cajole across the final, express instructions. slyly un",
												"C_PHONE": "12-149-610-1015",
												"C_CUSTKEY": "847742306",
												"C_NAME": "Customer#847742306",
												"C_ADDRESS": "havUs3GYAXzmMBl3CkFTNQpaNNYS7a",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "6320.29"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "kly ironic deposits might wake furiously furiously final requests. furiously final requests are slyly. accoun",
												"C_PHONE": "14-162-797-6018",
												"C_CUSTKEY": "847742307",
												"C_NAME": "Customer#847742307",
												"C_ADDRESS": "v752VFhLdTlpF0 5tuYEyrz8fuphg",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "7085.56"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "furiously fluffy dependencies. regular, special deposits",
												"C_PHONE": "21-857-158-6421",
												"C_CUSTKEY": "847742308",
												"C_NAME": "Customer#847742308",
												"C_ADDRESS": "SW9QjBa34Hhoirr2avSqK30nxNHjgvjWjAOPtRjb",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "-939.87"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ly final requests; unusual deposits haggle after the carefu",
												"C_PHONE": "32-277-102-3514",
												"C_CUSTKEY": "847742309",
												"C_NAME": "Customer#847742309",
												"C_ADDRESS": "DLPOeuOb bqsQnbT3Qjw7BbjSrB4aedm4ZR6qw",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "8519.72"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "e carefully regular deposits boost among the regular, ironic pinto b",
												"C_PHONE": "20-413-154-4826",
												"C_CUSTKEY": "847742310",
												"C_NAME": "Customer#847742310",
												"C_ADDRESS": "4 xN78z3cAAfVS0",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "1973.78"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "he furiously regular pinto beans! bold theodoli",
												"C_PHONE": "18-620-860-2812",
												"C_CUSTKEY": "847742311",
												"C_NAME": "Customer#847742311",
												"C_ADDRESS": "5nk6l2aScJIJFDO",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6356.69"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ronic requests. blithely final accounts sleep quickly. regular de",
												"C_PHONE": "29-942-569-9852",
												"C_CUSTKEY": "847742312",
												"C_NAME": "Customer#847742312",
												"C_ADDRESS": "jqJhPfoUNqxW7VGBFrTHER",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "2889.15"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " quickly final asymptotes was slyly express ideas. notornis x-ray slyly. bli",
												"C_PHONE": "28-177-545-3196",
												"C_CUSTKEY": "847742313",
												"C_NAME": "Customer#847742313",
												"C_ADDRESS": "8H1,ZwzDkpRl,AUMa1tCwn",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "1952.49"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " sleep according to the slyly ironic",
												"C_PHONE": "29-531-371-5708",
												"C_CUSTKEY": "847742314",
												"C_NAME": "Customer#847742314",
												"C_ADDRESS": "rvRnMtdQBJHjtvnJPr963yIEnLG4Pa9tWULe4",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "481.60"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " unusual asymptotes print. unusu",
												"C_PHONE": "16-805-186-3904",
												"C_CUSTKEY": "847742315",
												"C_NAME": "Customer#847742315",
												"C_ADDRESS": "hbGZcHPpXu0bqx8cWXvYU3p",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "7154.46"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " sleep fluffily; slyly final dependencies cajole furiously bold accounts.",
												"C_PHONE": "27-668-464-1313",
												"C_CUSTKEY": "847742316",
												"C_NAME": "Customer#847742316",
												"C_ADDRESS": "LOVaXqVGpngGOqqFExTQzX,cfWz",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "2059.36"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ar requests. theodolites across the furiously regular sentiments wa",
												"C_PHONE": "26-592-743-6594",
												"C_CUSTKEY": "847742317",
												"C_NAME": "Customer#847742317",
												"C_ADDRESS": "2i6p9crC0uABjMOuASipAmd3FeuxCLGb47ryY",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "3576.40"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "refully regular ideas. fluffily ironic dinos nag blithely along the bold ideas. bold, quick asymptotes sle",
												"C_PHONE": "12-265-672-7852",
												"C_CUSTKEY": "847742318",
												"C_NAME": "Customer#847742318",
												"C_ADDRESS": "W,Y1imYp03ivVwv1FEvXrAo",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "2595.91"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "quests along the slyly ironic requests wake furiously ideas. foxe",
												"C_PHONE": "13-355-390-1651",
												"C_CUSTKEY": "847742319",
												"C_NAME": "Customer#847742319",
												"C_ADDRESS": "621KcvcbTe8XU32wmo f9aWRqjQyEd,AmVoVK",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "1474.40"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ackages wake blithely carefully unusual requests. ironically even requests cajole. even excuses cajole blithe",
												"C_PHONE": "32-970-139-6461",
												"C_CUSTKEY": "847742320",
												"C_NAME": "Customer#847742320",
												"C_ADDRESS": "69ZCHCr3LPp45lS",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "6173.12"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " the carefully special pinto beans hinder slowly unu",
												"C_PHONE": "18-747-679-5544",
												"C_CUSTKEY": "847742321",
												"C_NAME": "Customer#847742321",
												"C_ADDRESS": "osxcsTlvys5pBkA1R0J407CvfcFrnRguxw",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8700.35"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "y even accounts lose blithely. special ideas after the slyly final pinto beans wake blithely regular",
												"C_PHONE": "12-156-927-5904",
												"C_CUSTKEY": "847742322",
												"C_NAME": "Customer#847742322",
												"C_ADDRESS": "aPnlb320xpTiofEs14Q5JDjOMVFEE",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "1808.61"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "he pending platelets. ironic, final instructions kindle quickly according to the carefully even d",
												"C_PHONE": "17-856-443-2899",
												"C_CUSTKEY": "847742323",
												"C_NAME": "Customer#847742323",
												"C_ADDRESS": "V1,2i58cRdSJpFhabtbm0",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "2344.77"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "kages wake. blithely ironic pinto beans sleep fluffily decoys. carefully",
												"C_PHONE": "13-285-603-1471",
												"C_CUSTKEY": "847742324",
												"C_NAME": "Customer#847742324",
												"C_ADDRESS": "OPgSa4gnzR4SVJ0EUfzxx,",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "4480.82"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "uffily final deposits wake furiously alongside of the express excuses. accounts about the dep",
												"C_PHONE": "20-393-608-3930",
												"C_CUSTKEY": "847742325",
												"C_NAME": "Customer#847742325",
												"C_ADDRESS": "09RANc0OHLXKQ54nSWA",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "1066.77"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "dependencies poach slyly: ironic accounts among the pending instructions haggl",
												"C_PHONE": "13-494-713-4716",
												"C_CUSTKEY": "847742326",
												"C_NAME": "Customer#847742326",
												"C_ADDRESS": "jJMPmOCMIYqY920kLo5RzXPC0k96",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8072.36"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "nal accounts. slyly express accounts alongside of the bold packag",
												"C_PHONE": "13-892-207-6006",
												"C_CUSTKEY": "847742327",
												"C_NAME": "Customer#847742327",
												"C_ADDRESS": "MzOp2cnMN6YqZ0,S3m8p",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "7287.12"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "l asymptotes cajole furiously blithely regular tithes. furiously fin",
												"C_PHONE": "24-845-256-5836",
												"C_CUSTKEY": "847742328",
												"C_NAME": "Customer#847742328",
												"C_ADDRESS": "G7uV1QIJWxDW3EcIor7O0SODzxzIaNsf71rU",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "9702.25"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "refully among the even theodolites. carefully ironic accounts integrate enticingly. final ideas haggle fur",
												"C_PHONE": "17-500-729-5545",
												"C_CUSTKEY": "847742329",
												"C_NAME": "Customer#847742329",
												"C_ADDRESS": "xh7AFb58pT",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-267.73"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ithe packages wake after the slyly final multipliers. busily spec",
												"C_PHONE": "22-335-582-7389",
												"C_CUSTKEY": "847742330",
												"C_NAME": "Customer#847742330",
												"C_ADDRESS": "12AKAsrMAMwTrnRL7ir4KgIOoXi2ONbHTv",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "8141.07"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "rays. bold, daring requests nag ",
												"C_PHONE": "34-703-408-3007",
												"C_CUSTKEY": "847742331",
												"C_NAME": "Customer#847742331",
												"C_ADDRESS": "jjyJkP9TM862lhyGTnFPE9xBz",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "7011.57"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "final accounts run. ironic packages detect carefully above the braids. ",
												"C_PHONE": "17-482-316-1561",
												"C_CUSTKEY": "847742332",
												"C_NAME": "Customer#847742332",
												"C_ADDRESS": "vEzniZFviD9fcWgVzqaDt",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "9533.77"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "efully unusual packages detect quickly against the never",
												"C_PHONE": "14-376-557-9396",
												"C_CUSTKEY": "847742333",
												"C_NAME": "Customer#847742333",
												"C_ADDRESS": "YQb5zzC2EB0xsJz0d",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "6175.03"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " deposits sublate pinto beans. blithely special packag",
												"C_PHONE": "22-158-473-2617",
												"C_CUSTKEY": "847742334",
												"C_NAME": "Customer#847742334",
												"C_ADDRESS": "o4,KpSDir8de WR1ybAkyrg",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "7742.73"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y bold instructions doubt slyly unusual packages. regular requests ",
												"C_PHONE": "33-845-417-2668",
												"C_CUSTKEY": "847742335",
												"C_NAME": "Customer#847742335",
												"C_ADDRESS": "CfzPup3ljVzeIYE8s6LbHd2G4",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "33.17"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "al deposits haggle final account",
												"C_PHONE": "34-532-686-9035",
												"C_CUSTKEY": "847742336",
												"C_NAME": "Customer#847742336",
												"C_ADDRESS": "1y9O4aW1ckeAkdza1Sn,PCgMi",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5408.26"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "counts. carefully unusual packages wake boldly according to the special theodolites.",
												"C_PHONE": "14-751-736-2754",
												"C_CUSTKEY": "847742337",
												"C_NAME": "Customer#847742337",
												"C_ADDRESS": "8nUM1WNzemhegq94veqdFGYhylygtryFzxwR2",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "1670.33"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "egular pinto beans. ironic theodolites cajole beneath the bold, ironic pint",
												"C_PHONE": "12-450-601-1776",
												"C_CUSTKEY": "847742338",
												"C_NAME": "Customer#847742338",
												"C_ADDRESS": "6pzQyySfxtHSXd6Z90HUyDSsiirOlrt5Z",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "-751.58"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "sentiments use against the spe",
												"C_PHONE": "17-254-887-7731",
												"C_CUSTKEY": "847742339",
												"C_NAME": "Customer#847742339",
												"C_ADDRESS": "eH,bWn3O2bowQHb",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "5138.83"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "pendencies mold fluffily! slyly bold ",
												"C_PHONE": "16-519-401-3820",
												"C_CUSTKEY": "847742340",
												"C_NAME": "Customer#847742340",
												"C_ADDRESS": "6sscw7Ci0 yypn8AsUOTPE,N4WpUEGeG5y7HQm09",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5284.87"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " even packages sleep blithely fluffily even deposits. fluf",
												"C_PHONE": "22-587-527-5138",
												"C_CUSTKEY": "847742341",
												"C_NAME": "Customer#847742341",
												"C_ADDRESS": "FQEbZ x7oB",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "6756.00"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "gular packages about the quickly regular packages cajole among the fluffily final ",
												"C_PHONE": "13-607-889-2567",
												"C_CUSTKEY": "847742342",
												"C_NAME": "Customer#847742342",
												"C_ADDRESS": "OVu0LZ2wSe,2F0h0ePx3Ey4oA43ygkIQgt1",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "4188.00"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "platelets. carefully final theodolites wake quietly around the quickly express accounts. ",
												"C_PHONE": "15-837-424-8390",
												"C_CUSTKEY": "847742343",
												"C_NAME": "Customer#847742343",
												"C_ADDRESS": "rxFUFbeJddx2aAeJ2pK,wYopRPaZE5Hy",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "7669.14"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "kly around the pending, pending accounts. accounts nod silent theodolites. even, ironic dependencies above the",
												"C_PHONE": "27-320-624-7740",
												"C_CUSTKEY": "847742344",
												"C_NAME": "Customer#847742344",
												"C_ADDRESS": "8wFkARqnAlU39E78Vqa5Sei",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "6343.14"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "es. blithely careful dolphins int",
												"C_PHONE": "13-639-159-3937",
												"C_CUSTKEY": "847742345",
												"C_NAME": "Customer#847742345",
												"C_ADDRESS": "IhGuzW5QRcKsyLiyq B8MxK 8apaY",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "6189.97"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "riously regular deposits. unusual platelets wake. pending, ironic frets ",
												"C_PHONE": "12-491-133-8281",
												"C_CUSTKEY": "847742346",
												"C_NAME": "Customer#847742346",
												"C_ADDRESS": "GP7lu83oUXxz",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "5932.61"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "efully express packages affix furiously according to th",
												"C_PHONE": "29-125-139-3158",
												"C_CUSTKEY": "847742347",
												"C_NAME": "Customer#847742347",
												"C_ADDRESS": "hdn2uHArsZl,3hscn",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "3356.48"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "nal requests are final theodolites. foxes ",
												"C_PHONE": "26-463-414-4865",
												"C_CUSTKEY": "847742348",
												"C_NAME": "Customer#847742348",
												"C_ADDRESS": "k0utIauzNlwY21f",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "2307.05"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "bold packages? furiously final Tiresias above the furiously even theodolites nag carefull",
												"C_PHONE": "18-211-798-5392",
												"C_CUSTKEY": "847742349",
												"C_NAME": "Customer#847742349",
												"C_ADDRESS": "UFkoD,F8sbhncE9zZI",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8633.00"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "he regular, regular requests. even requests haggle furiously slyly even courts. special excuses boost blithely. re",
												"C_PHONE": "20-682-611-6801",
												"C_CUSTKEY": "847742350",
												"C_NAME": "Customer#847742350",
												"C_ADDRESS": "UK6h6jG83RSNvrMDG VGbHWRy",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "2948.05"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "p slyly above the final tithes! blithely",
												"C_PHONE": "16-334-129-4836",
												"C_CUSTKEY": "847742351",
												"C_NAME": "Customer#847742351",
												"C_ADDRESS": "a9 SK00wPDtgv,NHhnEZKOzvw0WA",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1823.68"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "about the quickly ironic asymptotes nag furiously furiously final instructi",
												"C_PHONE": "13-119-728-5731",
												"C_CUSTKEY": "847742352",
												"C_NAME": "Customer#847742352",
												"C_ADDRESS": "ASUCitTLdI9xTv",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "2625.86"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " play carefully after the final, iro",
												"C_PHONE": "20-364-370-2494",
												"C_CUSTKEY": "847742353",
												"C_NAME": "Customer#847742353",
												"C_ADDRESS": "apRjtD65M71,cOEMJQm5zdaTLk3G1HVc",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "9832.65"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ly unusual requests haggle quickly",
												"C_PHONE": "23-292-843-1200",
												"C_CUSTKEY": "847742354",
												"C_NAME": "Customer#847742354",
												"C_ADDRESS": "zhOLL5v4Evn",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "2463.25"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "requests cajole furiously furiously expres",
												"C_PHONE": "25-801-141-7246",
												"C_CUSTKEY": "847742355",
												"C_NAME": "Customer#847742355",
												"C_ADDRESS": "hs1lbj8 IYULZF8fnn8f",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "4808.94"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ts? blithe, regular requests run furiously along the slyly ironic accounts. slyly regular requests use alongside ",
												"C_PHONE": "22-385-755-3488",
												"C_CUSTKEY": "847742356",
												"C_NAME": "Customer#847742356",
												"C_ADDRESS": " opBu7eZjQmVFTfI",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "4925.36"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s might engage quickly. blithely special deposits affix ",
												"C_PHONE": "26-946-554-7026",
												"C_CUSTKEY": "847742357",
												"C_NAME": "Customer#847742357",
												"C_ADDRESS": "EKgMeHfb FzX152,",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "3500.65"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "posits. platelets are furiously alongside of the quickly ironic excuses",
												"C_PHONE": "31-623-237-7280",
												"C_CUSTKEY": "847742358",
												"C_NAME": "Customer#847742358",
												"C_ADDRESS": "1Ay0ihbATb9KIFS6gPgNbTG9uhbG",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5441.75"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ely final excuses cajole. furiously ironic requests wake furiously furiously express dependencies. ev",
												"C_PHONE": "20-442-698-8802",
												"C_CUSTKEY": "847742359",
												"C_NAME": "Customer#847742359",
												"C_ADDRESS": "qScBWx0DXHJKsJ 5xRZxuFCu0ZE,1EnBzOaUP",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "3548.94"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly express requests detect blithely. quickly final pinto beans sleep agains",
												"C_PHONE": "16-167-633-8364",
												"C_CUSTKEY": "847742360",
												"C_NAME": "Customer#847742360",
												"C_ADDRESS": "NHUfqJIrU5Qj1tIgtY2wdjbpEg9t",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "2965.76"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " foxes serve among the silent excuses. furiously regular foxes are after the de",
												"C_PHONE": "11-514-919-2848",
												"C_CUSTKEY": "847742361",
												"C_NAME": "Customer#847742361",
												"C_ADDRESS": "auOuzBpOuJWy3cr8A4SVmdMjkuKzvj,j",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "2550.06"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y bold instructions sleep fluffily final requests. pending courts affix furiously fluffily furious",
												"C_PHONE": "15-459-354-5741",
												"C_CUSTKEY": "847742362",
												"C_NAME": "Customer#847742362",
												"C_ADDRESS": "jC74EeXtGTxML3vydqYkr3mJaaVqxgHRsxTvdtwo",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "895.86"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "rnis boost according to the pending accounts. daringly even deposits cajole quickly unusual instructions. carefull",
												"C_PHONE": "34-409-180-2312",
												"C_CUSTKEY": "847742363",
												"C_NAME": "Customer#847742363",
												"C_ADDRESS": "1p8VfEKtMFsc9",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "6627.43"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "xpress packages. furiously ironic packages along",
												"C_PHONE": "24-428-979-4168",
												"C_CUSTKEY": "847742364",
												"C_NAME": "Customer#847742364",
												"C_ADDRESS": "2pQ3k52,UVjxTnhW JWmIIw4vT01Gpcw9nK",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "-686.24"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " pending deposits cajole carefully ag",
												"C_PHONE": "21-574-326-6928",
												"C_CUSTKEY": "847742365",
												"C_NAME": "Customer#847742365",
												"C_ADDRESS": "vgDE,TTZadRh89,aV5tRe1EVhHxWEZL",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "3303.23"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ggle quickly about the carefully ironic accounts. furiously final deposits beyo",
												"C_PHONE": "17-505-531-5742",
												"C_CUSTKEY": "847742366",
												"C_NAME": "Customer#847742366",
												"C_ADDRESS": "Zgezyod9Sf Oj",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "9331.38"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "up the ironic decoys cajole around the blithely express pearls. fluf",
												"C_PHONE": "28-341-404-8841",
												"C_CUSTKEY": "847742367",
												"C_NAME": "Customer#847742367",
												"C_ADDRESS": "JgYCfvUI86c5hdry3B0U54C9bDguM85",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "3586.83"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ular dependencies are carefully after the slyly pending packages. slyly",
												"C_PHONE": "30-407-748-6390",
												"C_CUSTKEY": "847742368",
												"C_NAME": "Customer#847742368",
												"C_ADDRESS": "7Nd7Zq8yPobgaKbcapIdRFZEbesx8YnnS594",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "1873.21"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "sly regular pinto beans. final requests sleep sly",
												"C_PHONE": "17-786-235-7303",
												"C_CUSTKEY": "847742369",
												"C_NAME": "Customer#847742369",
												"C_ADDRESS": "oVPUVbFdRCaYXXdrBuG1CXUL0",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-948.32"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ding to the silent asymptotes haggle carefully along the unusual, even d",
												"C_PHONE": "11-883-282-6271",
												"C_CUSTKEY": "847742370",
												"C_NAME": "Customer#847742370",
												"C_ADDRESS": "kfjN8Wroqh5097",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9489.19"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "since the pending accounts haggle carefully above the blithely special decoys. furiously regu",
												"C_PHONE": "33-428-873-9200",
												"C_CUSTKEY": "847742371",
												"C_NAME": "Customer#847742371",
												"C_ADDRESS": " jHU1zj3ylVMZhx1PwYTb WOxN6",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "4971.27"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y express theodolites wake-- furiously special pint",
												"C_PHONE": "26-969-629-4721",
												"C_CUSTKEY": "847742372",
												"C_NAME": "Customer#847742372",
												"C_ADDRESS": "xk7NKR4swhyxVHt3uTXYDxqh,UdPcRlsE vic",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5207.14"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "encies according to the carefully unusual excuses use blithely quickly bold instructions; even ideas",
												"C_PHONE": "15-312-267-3851",
												"C_CUSTKEY": "847742373",
												"C_NAME": "Customer#847742373",
												"C_ADDRESS": "CnEh8tgQ6ieeLb0CWz enpU",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "9476.54"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " packages cajole slyly. requests play ironic accounts. slyly ironic depos",
												"C_PHONE": "22-254-642-5051",
												"C_CUSTKEY": "847742374",
												"C_NAME": "Customer#847742374",
												"C_ADDRESS": "qajquEEeucZwlpms 3xnIuiLEO",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "1285.78"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ironic notornis. carefully final",
												"C_PHONE": "17-269-148-1491",
												"C_CUSTKEY": "847742375",
												"C_NAME": "Customer#847742375",
												"C_ADDRESS": "WCsI7u3RSKdq8kNzHmH4FxaXrDibLkmF4A",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "4045.46"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " bold courts. bold pearls nag carefully packages. blithely final ins",
												"C_PHONE": "30-327-710-7790",
												"C_CUSTKEY": "847742376",
												"C_NAME": "Customer#847742376",
												"C_ADDRESS": "WeiG9dQ816ZM9Rkg",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "-956.76"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ng the fluffily unusual packages. blithely final deposits for the unu",
												"C_PHONE": "24-191-923-7605",
												"C_CUSTKEY": "847742377",
												"C_NAME": "Customer#847742377",
												"C_ADDRESS": "Pn30ZihwQ,EdqIWUYMZh1yLOY8LPdzy",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "-374.30"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ses are blithely after the slyly final theodolites. even pinto beans play fluffily carefully ironi",
												"C_PHONE": "11-686-949-1227",
												"C_CUSTKEY": "847742378",
												"C_NAME": "Customer#847742378",
												"C_ADDRESS": " HaK5qFVxAzrlPIKrNCaQydImASO,Vjb8eb0",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "9985.16"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "g to the blithely ironic hockey players. bold, special packages use. carefull",
												"C_PHONE": "31-184-775-4103",
												"C_CUSTKEY": "847742379",
												"C_NAME": "Customer#847742379",
												"C_ADDRESS": "iw7p7RyH1lsSJoL2Vv",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "2675.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " detect blithely according to the dependencies. blithely unusual packages near the packages affix slyly",
												"C_PHONE": "25-995-195-3284",
												"C_CUSTKEY": "847742380",
												"C_NAME": "Customer#847742380",
												"C_ADDRESS": "SXaZ,ufPIvL97NT9afPKiwKTZHk63C",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "2657.76"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " use furiously about the slyly special ideas. slyly regular packages slee",
												"C_PHONE": "18-456-587-8362",
												"C_CUSTKEY": "847742381",
												"C_NAME": "Customer#847742381",
												"C_ADDRESS": "TLfsMh GKLM9Zp",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6871.91"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "uffy dependencies: excuses wake quickly stealthy accounts. quickly ironic deposits use c",
												"C_PHONE": "21-559-122-1401",
												"C_CUSTKEY": "847742382",
												"C_NAME": "Customer#847742382",
												"C_ADDRESS": "YH89uqZhcMu,q4g",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "5198.36"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "even, final packages are ruthlessly across the slyly final requests. slyly unusual accounts nag blithely cl",
												"C_PHONE": "24-527-743-5930",
												"C_CUSTKEY": "847742383",
												"C_NAME": "Customer#847742383",
												"C_ADDRESS": "2r z,kERMlA",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "4864.11"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ll have to nag evenly furiously final pinto beans. blithely ironic foxes doubt along the furiously express th",
												"C_PHONE": "32-752-647-8180",
												"C_CUSTKEY": "847742384",
												"C_NAME": "Customer#847742384",
												"C_ADDRESS": "19J4nFh0MoOop,H5iZzX0oYTa3WCYOQP0,W42MM",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "8165.08"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "eas. regular packages cajole alongside of the fluffily regular ideas? pending pinto beans should use carefully alon",
												"C_PHONE": "10-775-998-7652",
												"C_CUSTKEY": "847742385",
												"C_NAME": "Customer#847742385",
												"C_ADDRESS": "4jho,SVyBZFZesX0YAxqPVNQGl4NeX",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "3579.23"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "packages nag slyly. quiet theodolites unwind bold, ironic theodolites. slyly special ",
												"C_PHONE": "30-498-365-5322",
												"C_CUSTKEY": "847742386",
												"C_NAME": "Customer#847742386",
												"C_ADDRESS": "MZInbU9XG1Un72VwIiu1eJD3Vmi1WgQJReWej1",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "6100.84"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s. fluffily special accounts affix quickly ac",
												"C_PHONE": "12-791-815-4449",
												"C_CUSTKEY": "847742387",
												"C_NAME": "Customer#847742387",
												"C_ADDRESS": "cIcacZ,Heab1fbrSwUkzpdxb5 C1ZjC4Wq5BAQ",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "3775.45"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "l accounts wake fluffily. fluffil",
												"C_PHONE": "18-916-277-8174",
												"C_CUSTKEY": "847742388",
												"C_NAME": "Customer#847742388",
												"C_ADDRESS": "9fhW9zltGGEL4AxAw05fcLE8H",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "3916.08"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ven, express accounts. silent, even requests sleep. carefully bold packages wake",
												"C_PHONE": "29-846-299-2056",
												"C_CUSTKEY": "847742389",
												"C_NAME": "Customer#847742389",
												"C_ADDRESS": "38qK8anOQpPP430v07DCUqf8",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "2496.86"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "e blithely bold accounts. furiously ir",
												"C_PHONE": "22-746-238-6250",
												"C_CUSTKEY": "847742390",
												"C_NAME": "Customer#847742390",
												"C_ADDRESS": "sysdkW9k1nUg",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "8688.45"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ar theodolites. even requests about the unusual, even courts are furiously inside the express pint",
												"C_PHONE": "10-178-459-6516",
												"C_CUSTKEY": "847742391",
												"C_NAME": "Customer#847742391",
												"C_ADDRESS": "GSSLPSyVveFLk7v8yPsXBrICPP0EbDQBj,8sSSQD",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "-143.30"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ns try to boost carefully. furiously final ",
												"C_PHONE": "10-925-519-4122",
												"C_CUSTKEY": "847742392",
												"C_NAME": "Customer#847742392",
												"C_ADDRESS": "P5ofTNau,dABtbnwCVa3I7pCCq8QQphiKj",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "9479.76"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y. even packages nag furiously quickly even pinto beans? stealthily ironic warthogs nag slyly agains",
												"C_PHONE": "23-489-617-2616",
												"C_CUSTKEY": "847742393",
												"C_NAME": "Customer#847742393",
												"C_ADDRESS": "Y8XHm9OfAO1CZnVMDQVJQTzrt5s",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "462.77"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " furiously. doggedly regular ",
												"C_PHONE": "12-375-705-6363",
												"C_CUSTKEY": "847742394",
												"C_NAME": "Customer#847742394",
												"C_ADDRESS": "q7c58Q6ELaMnXVGGr444g",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "9757.81"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "le above the blithely regular requests! theodoli",
												"C_PHONE": "13-959-348-1216",
												"C_CUSTKEY": "847742395",
												"C_NAME": "Customer#847742395",
												"C_ADDRESS": "IYtvprAQQm11QakHjsDCQlQxI7DPZftwdJVz",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "9635.01"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ly slyly final excuses. asymptotes around the carefully regular dolphins are slyly along the qu",
												"C_PHONE": "19-792-253-7351",
												"C_CUSTKEY": "847742396",
												"C_NAME": "Customer#847742396",
												"C_ADDRESS": "zlehwXlUbbVfH,wK84YQ2qh9S4MaVzxknx0",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "2704.81"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": ". regular, regular foxes engage final foxes. regular pinto beans affix quickly against the bold r",
												"C_PHONE": "23-931-436-1960",
												"C_CUSTKEY": "847742397",
												"C_NAME": "Customer#847742397",
												"C_ADDRESS": "VYE5mnPZfCghCUl5CvScaEde10YJwWwZ",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "5795.34"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s mold blithely requests. fluffily pending ideas after the carefully even accounts sleep",
												"C_PHONE": "13-115-548-8649",
												"C_CUSTKEY": "847742398",
												"C_NAME": "Customer#847742398",
												"C_ADDRESS": "dmbyK9eOhTFd6yaCvDd0BP05X8",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "6302.00"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "le blithely unusual, regular packages. even theodolites wake. slyly final deposits haggle slyly ",
												"C_PHONE": "24-595-306-2947",
												"C_CUSTKEY": "847742399",
												"C_NAME": "Customer#847742399",
												"C_ADDRESS": "mx,LMdWcUTm4fMQroYGkB1n4 SDy",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "7709.52"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "bold deposits. blithely regular requests play s",
												"C_PHONE": "31-249-457-3632",
												"C_CUSTKEY": "847742400",
												"C_NAME": "Customer#847742400",
												"C_ADDRESS": " w6RkqQfCbojgKKZudyy2HX2",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "2906.56"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "st the blithely idle instructions cajole carefully pending dependencies: express, ironic depende",
												"C_PHONE": "24-214-310-5205",
												"C_CUSTKEY": "847742401",
												"C_NAME": "Customer#847742401",
												"C_ADDRESS": "bpkC4TtssMZWBS",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "8542.04"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "r packages. slyly even packages along the ",
												"C_PHONE": "12-423-471-1368",
												"C_CUSTKEY": "847742402",
												"C_NAME": "Customer#847742402",
												"C_ADDRESS": "2aLVnHYmX5IRvNI4ZlbD rsRVo0a KVXC,,mzGk",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "3187.42"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "xes affix quickly. final, final deposits cajole furiously ironic requests. instructions affix alongside of the ",
												"C_PHONE": "21-108-571-4683",
												"C_CUSTKEY": "847742403",
												"C_NAME": "Customer#847742403",
												"C_ADDRESS": "JQqFJbseJ5Rh4iJhkCxanbSr1n14SWeO",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9907.22"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ely regular packages are slyly requests. bold requests cajole fl",
												"C_PHONE": "19-879-428-1385",
												"C_CUSTKEY": "847742404",
												"C_NAME": "Customer#847742404",
												"C_ADDRESS": "CUgqUYv6cwC7JZ9Xze1R6d,mXUn5LT C",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1813.08"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " platelets sleep furiously. iron",
												"C_PHONE": "28-838-324-8075",
												"C_CUSTKEY": "847742405",
												"C_NAME": "Customer#847742405",
												"C_ADDRESS": "3siYAqy2Q1jq",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "359.95"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " accounts wake carefully. slyly sly accounts haggle regular, final pearls. fluffily regular ins",
												"C_PHONE": "20-348-883-3117",
												"C_CUSTKEY": "847742406",
												"C_NAME": "Customer#847742406",
												"C_ADDRESS": "aWKuEBdlW9e7z,WkAXtIb1FgjWjoaWKtl",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8577.91"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "quests nag against the finally regular accounts? ironic theodolites in",
												"C_PHONE": "33-577-737-9506",
												"C_CUSTKEY": "847742407",
												"C_NAME": "Customer#847742407",
												"C_ADDRESS": "ru0XFgpPwPUtgvmhbmtFbMCF0MYvMT30l1f3HWM",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "920.82"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "cial accounts. unusual theodolites integrate carefully ",
												"C_PHONE": "13-519-688-1582",
												"C_CUSTKEY": "847742408",
												"C_NAME": "Customer#847742408",
												"C_ADDRESS": "ler2a6ZdW2nsGhdYOy",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8105.39"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " silent deposits serve according to the ironic deposits. final instructions around the regular, even foxes cajole ",
												"C_PHONE": "10-219-134-1994",
												"C_CUSTKEY": "847742409",
												"C_NAME": "Customer#847742409",
												"C_ADDRESS": "BDli8 tjK7eyPvn9P2t",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "1365.71"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "y ironic requests sleep ironic requests. quickly final asymptotes nag quickly according to th",
												"C_PHONE": "21-335-424-2087",
												"C_CUSTKEY": "847742410",
												"C_NAME": "Customer#847742410",
												"C_ADDRESS": "hBRvCO4TVtSzLrgX",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "5519.18"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "eas: accounts cajole. slyly final deposits wake furiously unusual platelets. regul",
												"C_PHONE": "32-653-777-3636",
												"C_CUSTKEY": "847742411",
												"C_NAME": "Customer#847742411",
												"C_ADDRESS": "loGfE8419kBOuRbblYjgTp1fE8fKUC99FzGg",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "6944.42"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y pending requests sleep furiously. slyly regular ideas cajole slyly. furiously regula",
												"C_PHONE": "27-636-981-2660",
												"C_CUSTKEY": "847742412",
												"C_NAME": "Customer#847742412",
												"C_ADDRESS": "XAmkzJP3UQ",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "2895.13"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ely ironic requests use slyly. even, ironic packages sublate quickly carefull",
												"C_PHONE": "25-465-541-8517",
												"C_CUSTKEY": "847742413",
												"C_NAME": "Customer#847742413",
												"C_ADDRESS": "bh9UARBUL1fK5DgFCOV",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "3472.88"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " use carefully special sauternes. ironic, ironic theodolites believe quickly final, final depe",
												"C_PHONE": "14-346-514-3976",
												"C_CUSTKEY": "847742414",
												"C_NAME": "Customer#847742414",
												"C_ADDRESS": "Lr,1q49dU0GP2FJlxjbznjiOIH",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "708.79"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "slyly unusual pinto beans cajole carefully ironic requests. regular, special deposits are s",
												"C_PHONE": "32-734-541-6891",
												"C_CUSTKEY": "847742415",
												"C_NAME": "Customer#847742415",
												"C_ADDRESS": "N0QY6aisHmnGySLG2B",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "8592.12"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " dugouts kindle carefully among the special platelets. furiously ironic ideas accordi",
												"C_PHONE": "15-778-384-2484",
												"C_CUSTKEY": "847742416",
												"C_NAME": "Customer#847742416",
												"C_ADDRESS": "97mHjBMGyyrNEl2YhRg4D",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "8751.60"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "endencies. bravely regular deposits wake around the special, regular",
												"C_PHONE": "19-373-676-1340",
												"C_CUSTKEY": "847742417",
												"C_NAME": "Customer#847742417",
												"C_ADDRESS": "NVC4NB0WesNMnFit gaQsAk5pfcNw4O",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "5215.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "n requests detect quickly quickly pe",
												"C_PHONE": "29-256-939-7950",
												"C_CUSTKEY": "847742418",
												"C_NAME": "Customer#847742418",
												"C_ADDRESS": "co38qCE3KTTMzCduZV fEhCWD",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "1563.91"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y about the quickly regular fox",
												"C_PHONE": "30-493-511-8071",
												"C_CUSTKEY": "847742419",
												"C_NAME": "Customer#847742419",
												"C_ADDRESS": "vy01XrKtPHPLdJ5QH9wG",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "3539.53"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "e slyly even accounts. slyly ironic requests boost furiously. furiously s",
												"C_PHONE": "32-762-236-3373",
												"C_CUSTKEY": "847742420",
												"C_NAME": "Customer#847742420",
												"C_ADDRESS": "RWvotUqrFcr5M6qq 34CHPc5q21vFbz5",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "9933.42"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "le. ironic, regular requests unwind carefully. bold, specia",
												"C_PHONE": "21-184-484-8835",
												"C_CUSTKEY": "847742421",
												"C_NAME": "Customer#847742421",
												"C_ADDRESS": "MrKsZHt HIZ Irj3S3uirnG7ksp",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "1991.31"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " unusual asymptotes sleep slyly final deposits. final packages alongside",
												"C_PHONE": "30-865-336-6576",
												"C_CUSTKEY": "847742422",
												"C_NAME": "Customer#847742422",
												"C_ADDRESS": "HJy8fhYeocaeS,KZ,z",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "3837.73"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y silent deposits. fluffily pending ideas along the ironic packages wake blithely unusual requests. brave epitap",
												"C_PHONE": "31-632-465-2434",
												"C_CUSTKEY": "847742423",
												"C_NAME": "Customer#847742423",
												"C_ADDRESS": "eyDzGjtKEqFoOI78aehdOi3t",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5779.15"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "unts. furiously bold deposits sleep slyly across the slyly regular pinto beans. carefully ironic requests ",
												"C_PHONE": "10-267-657-3874",
												"C_CUSTKEY": "847742424",
												"C_NAME": "Customer#847742424",
												"C_ADDRESS": "jhiOFOAU22GMLx7mv2",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "9155.13"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "against the unusual, final accounts detect carefully never ironic foxes. silent, pending",
												"C_PHONE": "33-154-330-1981",
												"C_CUSTKEY": "847742425",
												"C_NAME": "Customer#847742425",
												"C_ADDRESS": "vkbh0RiHOuxr5QotzU s",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "257.85"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "hely ironic accounts. bold, unusual theo",
												"C_PHONE": "32-344-458-6976",
												"C_CUSTKEY": "847742426",
												"C_NAME": "Customer#847742426",
												"C_ADDRESS": "kk9UJOENYw7dW03aHIWCr1 ",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "8656.71"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "oost fluffily against the bold theodolites. theodolites affix along the slyly even accounts. final, regul",
												"C_PHONE": "10-900-160-8529",
												"C_CUSTKEY": "847742427",
												"C_NAME": "Customer#847742427",
												"C_ADDRESS": "BMi502Kr5JbepR",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "5316.46"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " the slyly express requests haggle slyly close packages. furiously special pinto beans i",
												"C_PHONE": "25-481-143-2453",
												"C_CUSTKEY": "847742428",
												"C_NAME": "Customer#847742428",
												"C_ADDRESS": "vc26BLGrFV0XWbtAs8EEHa8EL16Hv02G",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "9812.71"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "eve. special, silent grouches ar",
												"C_PHONE": "14-885-236-5409",
												"C_CUSTKEY": "847742429",
												"C_NAME": "Customer#847742429",
												"C_ADDRESS": "T7ZAl8H4tBuPuVs",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "8231.82"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "totes wake slyly. unusual, even packages wake blithely according t",
												"C_PHONE": "16-790-493-1744",
												"C_CUSTKEY": "847742430",
												"C_NAME": "Customer#847742430",
												"C_ADDRESS": "EpyQVqjWs1edxpj2XkviSjvOwedlzMBR,l",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "3174.42"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ong the carefully final foxes. quickly final deposits nag blithely. carefully bold accounts are. account",
												"C_PHONE": "33-551-504-2193",
												"C_CUSTKEY": "847742431",
												"C_NAME": "Customer#847742431",
												"C_ADDRESS": "KrBgK0JVsLOu30VNmci kDKFASy02Xoh2tOUrw,",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "397.48"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "al deposits cajole blithely after the pending, i",
												"C_PHONE": "34-365-436-7188",
												"C_CUSTKEY": "847742432",
												"C_NAME": "Customer#847742432",
												"C_ADDRESS": "QzLinNvfe,T1z7QP2",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "1465.60"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "le fluffily at the slyly unusual dugouts; unusua",
												"C_PHONE": "18-580-186-7649",
												"C_CUSTKEY": "847742433",
												"C_NAME": "Customer#847742433",
												"C_ADDRESS": "fq6ciaWhCC4d",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "1291.15"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " carefully above the never unusua",
												"C_PHONE": "29-939-818-7391",
												"C_CUSTKEY": "847742434",
												"C_NAME": "Customer#847742434",
												"C_ADDRESS": "ehp7Fl3RXWwSzmC",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6286.70"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "gular ideas affix fluffily. furiously busy ideas across the ironic, silent packages use regular d",
												"C_PHONE": "27-986-944-3691",
												"C_CUSTKEY": "847742435",
												"C_NAME": "Customer#847742435",
												"C_ADDRESS": "0qIFOqp4Vk9v",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "3539.48"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "latelets after the slyly unusual deposits use among the carefully ironic requests. carefully regular requests",
												"C_PHONE": "25-515-551-2646",
												"C_CUSTKEY": "847742436",
												"C_NAME": "Customer#847742436",
												"C_ADDRESS": "2nmKaYwTooVxk",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "9033.17"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "to beans boost before the slyly even accounts. final accounts integrate slyly. final packages are blithely along the",
												"C_PHONE": "20-520-389-6079",
												"C_CUSTKEY": "847742437",
												"C_NAME": "Customer#847742437",
												"C_ADDRESS": "905ePlzC3tPkG7x2xz",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "7594.14"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "regular deposits nag slyly even foxes. carefully regular pinto beans sleep among the theodolites. furiously expr",
												"C_PHONE": "11-850-664-4745",
												"C_CUSTKEY": "847742438",
												"C_NAME": "Customer#847742438",
												"C_ADDRESS": "LRgZSvznX,vuAd62A",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "-175.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ar deposits? fluffily pending accounts sleep quickly above the",
												"C_PHONE": "13-547-521-9284",
												"C_CUSTKEY": "847742439",
												"C_NAME": "Customer#847742439",
												"C_ADDRESS": "V96QcoQhzbJ",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "4630.42"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ding to the ironic requests sublate evenly regular, express sheaves. furiously furious",
												"C_PHONE": "11-877-154-1326",
												"C_CUSTKEY": "847742440",
												"C_NAME": "Customer#847742440",
												"C_ADDRESS": "BpqIHByRK9zRNrQFbi7mGHMSikL6sQyZ",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "7538.11"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ays. final instructions sleep according to the unusual a",
												"C_PHONE": "25-401-154-4759",
												"C_CUSTKEY": "847742441",
												"C_NAME": "Customer#847742441",
												"C_ADDRESS": "ULFORTQczVYUn1NdyMH64",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "4039.52"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "sentiments boost. quickly silent grouches wake slyly fluffily regular depend",
												"C_PHONE": "23-279-298-3606",
												"C_CUSTKEY": "847742442",
												"C_NAME": "Customer#847742442",
												"C_ADDRESS": "oVu z0SLM1mxUlOsZyPW",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "9255.64"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "r instructions. furiously express ideas are slyly furiously special requests. fluffily exp",
												"C_PHONE": "15-657-619-4774",
												"C_CUSTKEY": "847742443",
												"C_NAME": "Customer#847742443",
												"C_ADDRESS": "0HsvADYABAWpnWUd5m,kpYH,6,SES2",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "6544.68"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "nently bold pinto beans. theodolites sleep quickly about the slyly regular asymptotes. ",
												"C_PHONE": "12-889-984-1217",
												"C_CUSTKEY": "847742444",
												"C_NAME": "Customer#847742444",
												"C_ADDRESS": "FxPb72DLeMW6w3ra T PGBu22NzUNo3f",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "5385.04"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "fily regular, express asymptotes. carefully final accounts haggle across the accounts. carefully final epitaphs acco",
												"C_PHONE": "18-875-580-9913",
												"C_CUSTKEY": "847742445",
												"C_NAME": "Customer#847742445",
												"C_ADDRESS": "KPjH1xvU9re40p4gZhw1foJf4zgssY6iY0T,hot",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "7312.07"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "according to the carefully clo",
												"C_PHONE": "18-592-887-7549",
												"C_CUSTKEY": "847742446",
												"C_NAME": "Customer#847742446",
												"C_ADDRESS": "05Hr3s3hksS saei1impobbmFVrlhAdygkG",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "80.95"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " furiously regular theodolites. even deposits are. blithely regular reque",
												"C_PHONE": "21-180-477-2788",
												"C_CUSTKEY": "847742447",
												"C_NAME": "Customer#847742447",
												"C_ADDRESS": "rfhBmxBCUr3qNeTUUlnO",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "5490.45"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s boost slyly after the unusual instructions. regular pea",
												"C_PHONE": "15-410-384-8941",
												"C_CUSTKEY": "847742448",
												"C_NAME": "Customer#847742448",
												"C_ADDRESS": "WvEtjiwVXemNMCuXFq3wJIZgx,bn5NzI9cuGUka",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "8014.73"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "y regular packages cajole quickly som",
												"C_PHONE": "29-699-546-2666",
												"C_CUSTKEY": "847742449",
												"C_NAME": "Customer#847742449",
												"C_ADDRESS": "vjQtEn0dppP8",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6564.99"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ng pinto beans among the final packages integra",
												"C_PHONE": "26-588-264-8690",
												"C_CUSTKEY": "847742450",
												"C_NAME": "Customer#847742450",
												"C_ADDRESS": "WOeI1S7xcd,gj",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "5755.20"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y special requests to the courts sleep about the blithely special requests. silent dependencies hag",
												"C_PHONE": "34-402-182-9511",
												"C_CUSTKEY": "847742451",
												"C_NAME": "Customer#847742451",
												"C_ADDRESS": "2zGkoxdUSuahbhD7A3BRGV3R3ORyZEBqxOCy,dc",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "2715.34"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ely. regular, ironic theodolites could cajole quickly slyly re",
												"C_PHONE": "31-475-669-1916",
												"C_CUSTKEY": "847742452",
												"C_NAME": "Customer#847742452",
												"C_ADDRESS": "GeEijvya9592 JEOrIT2ILszVYF",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6732.97"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s are according to the even packages. furiously ironic dependencies toward the fu",
												"C_PHONE": "20-142-768-2504",
												"C_CUSTKEY": "847742453",
												"C_NAME": "Customer#847742453",
												"C_ADDRESS": "akO X57Nv lRtwmoHyZC3uL8pOivL",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "2094.88"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "to the quickly express deposits. slyly silent accounts are. care",
												"C_PHONE": "26-636-687-4010",
												"C_CUSTKEY": "847742454",
												"C_NAME": "Customer#847742454",
												"C_ADDRESS": "PQxrjgfUjyRQismFyTnwq,h1wf3xrLdTn4ai",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "6672.28"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "wake after the thinly regular deposits. fluffily ironic excuses affix deposits. blithely slow",
												"C_PHONE": "22-389-960-5423",
												"C_CUSTKEY": "847742455",
												"C_NAME": "Customer#847742455",
												"C_ADDRESS": "YZP3ssWZeMNnFKlvM7w",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "4968.37"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "es. blithely special pinto beans are f",
												"C_PHONE": "12-889-729-2637",
												"C_CUSTKEY": "847742456",
												"C_NAME": "Customer#847742456",
												"C_ADDRESS": "mbEDY UxlX8ihUU3zHEJg5CM76RfeQzb6z",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "378.93"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " the regular platelets. express accounts cajole idly durin",
												"C_PHONE": "12-245-305-6284",
												"C_CUSTKEY": "847742457",
												"C_NAME": "Customer#847742457",
												"C_ADDRESS": "Ih72ZpXU4tB1xcOB4CPrE9 0lvisl7EmTS",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "8634.73"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "uickly by the quickly final asymptotes. unusual, ironic packages affix along the regular theo",
												"C_PHONE": "16-621-799-3711",
												"C_CUSTKEY": "847742458",
												"C_NAME": "Customer#847742458",
												"C_ADDRESS": "kPRIEb,wm9BMGLSYtFShyvuMLvVEZgr2XL",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "-960.65"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ss instructions boost blithely around the blithely regular p",
												"C_PHONE": "30-582-247-1598",
												"C_CUSTKEY": "847742459",
												"C_NAME": "Customer#847742459",
												"C_ADDRESS": "zvTpvaqx26c1qj0E",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "226.00"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "n requests above the special accounts wake pi",
												"C_PHONE": "31-821-130-6338",
												"C_CUSTKEY": "847742460",
												"C_NAME": "Customer#847742460",
												"C_ADDRESS": "nu UR3kup8MIwCpPcf",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "1346.13"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "xes alongside of the slyly express frets are furiously after the ironic re",
												"C_PHONE": "18-480-351-2414",
												"C_CUSTKEY": "847742461",
												"C_NAME": "Customer#847742461",
												"C_ADDRESS": "dK 5ygZ NA,Amb5JafqDm25525tBI34d",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6275.58"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " after the final, express accounts",
												"C_PHONE": "10-272-140-1680",
												"C_CUSTKEY": "847742462",
												"C_NAME": "Customer#847742462",
												"C_ADDRESS": "Xw0zlbi6sstVaRmXYTGGUIgYilS1MlalCwZKJyT",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "3635.46"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ns wake regular, regular accounts-- slyly special theodolites ",
												"C_PHONE": "22-729-239-3408",
												"C_CUSTKEY": "847742463",
												"C_NAME": "Customer#847742463",
												"C_ADDRESS": "67gO9a6ObNLflnTBRqcSOvPvu327jRDaDrk0QX",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "5153.97"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "t the furiously regular packages. ideas haggle blithely",
												"C_PHONE": "31-486-106-7371",
												"C_CUSTKEY": "847742464",
												"C_NAME": "Customer#847742464",
												"C_ADDRESS": "gRvDmAbs3AhFztFbFK,SjuGX48j",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6856.71"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "inal accounts breach quickly. accounts are. foxes are carefully furiously express s",
												"C_PHONE": "34-393-707-4670",
												"C_CUSTKEY": "847742465",
												"C_NAME": "Customer#847742465",
												"C_ADDRESS": "HeS3NeDMskcrSHgib3fREc5bFVNS14kynz7p",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "2714.48"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "al accounts haggle. carefully express gifts wake slyly",
												"C_PHONE": "15-321-935-5389",
												"C_CUSTKEY": "847742466",
												"C_NAME": "Customer#847742466",
												"C_ADDRESS": "H,W4WrJfCdN9 i",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "3281.04"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "x slyly according to the slyly ",
												"C_PHONE": "31-540-674-6976",
												"C_CUSTKEY": "847742467",
												"C_NAME": "Customer#847742467",
												"C_ADDRESS": "27uBsBl7IVjzSxtSbl3EsEsLEsa5OMDuQgt",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "-638.57"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s boost carefully. even, ironic sauternes after ",
												"C_PHONE": "18-916-572-1162",
												"C_CUSTKEY": "847742468",
												"C_NAME": "Customer#847742468",
												"C_ADDRESS": "5qIPrQcq0KsfuwkRDBArV",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "1552.47"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "al platelets. packages promise furiously ironic theodolites. blithely special accounts s",
												"C_PHONE": "21-577-227-3703",
												"C_CUSTKEY": "847742469",
												"C_NAME": "Customer#847742469",
												"C_ADDRESS": "oO7fOt94a8",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9394.26"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ents. carefully final dependencies cajole. carefully final instructions use quickly. deposits cajole",
												"C_PHONE": "34-464-363-6640",
												"C_CUSTKEY": "847742470",
												"C_NAME": "Customer#847742470",
												"C_ADDRESS": "8yb7crTHAMUskIzI2Jlitm4J5PuwT4",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "4381.34"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ogs boost. requests boost furiously silent foxes. special, even re",
												"C_PHONE": "28-193-258-4386",
												"C_CUSTKEY": "847742471",
												"C_NAME": "Customer#847742471",
												"C_ADDRESS": "MGvfC5ut9mUp2qeHupInay8ZiJj0OV4",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "1170.04"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "hin, regular instructions. dogged theodolites sleep permanen",
												"C_PHONE": "33-584-286-5217",
												"C_CUSTKEY": "847742472",
												"C_NAME": "Customer#847742472",
												"C_ADDRESS": "Os8fZuh2PS",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "5862.38"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "c requests wake bravely across the carefully bold accounts. ironic reque",
												"C_PHONE": "34-382-744-5025",
												"C_CUSTKEY": "847742473",
												"C_NAME": "Customer#847742473",
												"C_ADDRESS": "N11Ts7BSlVnER",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5.77"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "silent requests. even platelets sleep above the quickly special e",
												"C_PHONE": "21-165-370-8910",
												"C_CUSTKEY": "847742474",
												"C_NAME": "Customer#847742474",
												"C_ADDRESS": "Denymkl02qjErA4H2TZ1AM7K",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "6981.99"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "d packages poach. slyly unusual ideas haggle final foxes. idly pending ideas nag boldly alongside of the slow dep",
												"C_PHONE": "20-386-610-3044",
												"C_CUSTKEY": "847742475",
												"C_NAME": "Customer#847742475",
												"C_ADDRESS": "f1GwZ67h1RU",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "7414.72"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "e quickly dependencies. foxes haggle furiously. bl",
												"C_PHONE": "14-182-607-5158",
												"C_CUSTKEY": "847742476",
												"C_NAME": "Customer#847742476",
												"C_ADDRESS": "LZ9zZiHYh2mHQvWbXf",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "9204.22"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ublate slyly after the blithely pending deposits. regular pinto beans are slyly final",
												"C_PHONE": "16-147-290-8467",
												"C_CUSTKEY": "847742477",
												"C_NAME": "Customer#847742477",
												"C_ADDRESS": "9jIcz6yVbuj",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "463.81"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "packages. carefully unusual foxes w",
												"C_PHONE": "31-619-741-1390",
												"C_CUSTKEY": "847742478",
												"C_NAME": "Customer#847742478",
												"C_ADDRESS": "eWR7daMSDaDbcdOQnZUc",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "5177.54"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " regular instructions cajole along the stealthily even deposits. fluffily express instructions grow",
												"C_PHONE": "20-400-791-6872",
												"C_CUSTKEY": "847742479",
												"C_NAME": "Customer#847742479",
												"C_ADDRESS": "0t4zOaepBZWtiEk1oJLBy",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "6892.34"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s along the regular accounts haggle slyly about the carefully final requests. slowly ironic theodolit",
												"C_PHONE": "27-995-556-3193",
												"C_CUSTKEY": "847742480",
												"C_NAME": "Customer#847742480",
												"C_ADDRESS": "Pm6CHC6eRf,8DMCpzc ppGwsL2fw9fIJ7L",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "7629.61"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "the packages solve quickly alongside of ",
												"C_PHONE": "34-730-981-8017",
												"C_CUSTKEY": "847742481",
												"C_NAME": "Customer#847742481",
												"C_ADDRESS": "g2lPH6d,,x",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "1875.43"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "oxes. ironic requests after the slyly regular accounts d",
												"C_PHONE": "25-560-147-5239",
												"C_CUSTKEY": "847742482",
												"C_NAME": "Customer#847742482",
												"C_ADDRESS": "UUhL8pRSIZCsHA0G3bWFZALkpsI1Aqj72 MFI7",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "3234.32"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "slyly regular accounts. fluffily bold accounts nag slyly even accounts-- final asymptotes are regular, pendin",
												"C_PHONE": "30-897-461-3780",
												"C_CUSTKEY": "847742483",
												"C_NAME": "Customer#847742483",
												"C_ADDRESS": "uIKtHdUcsSoO1ZeKWmb3SRuOrh",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "6154.55"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "requests wake furiously. furiously final foxes use across the express deposits. ",
												"C_PHONE": "25-785-440-7505",
												"C_CUSTKEY": "847742484",
												"C_NAME": "Customer#847742484",
												"C_ADDRESS": "DXIfs2zaGzP Nusx7uOpLs6FrIRB3",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "4543.12"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "unusual accounts doubt fluffily across the carefully ironic dolphins. asymptotes ",
												"C_PHONE": "31-103-575-3108",
												"C_CUSTKEY": "847742485",
												"C_NAME": "Customer#847742485",
												"C_ADDRESS": "fZL6qq7BBBs5wzxCYNZMIHeUxFvX",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "3299.51"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "quests nag slyly busy requests.",
												"C_PHONE": "19-717-699-4473",
												"C_CUSTKEY": "847742486",
												"C_NAME": "Customer#847742486",
												"C_ADDRESS": "3dTW1wfD jn1Y3TsGIdm2IBmGSYV",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1786.53"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ecial theodolites cajole furiously final requests. slyly ironic p",
												"C_PHONE": "19-496-476-5046",
												"C_CUSTKEY": "847742487",
												"C_NAME": "Customer#847742487",
												"C_ADDRESS": "3BaeGVKa0lQcC6vPJow1vpGZvVmJR4IsY7",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "5118.31"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ing deposits haggle blithely according t",
												"C_PHONE": "18-211-418-3558",
												"C_CUSTKEY": "847742488",
												"C_NAME": "Customer#847742488",
												"C_ADDRESS": "MEmIB,eMngoti2ilGuYmC3",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "1382.60"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "lyly bold theodolites sleep about the final, fina",
												"C_PHONE": "12-419-549-5379",
												"C_CUSTKEY": "847742489",
												"C_NAME": "Customer#847742489",
												"C_ADDRESS": "E4C6u9yLZpvrkWKW",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "3296.65"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ously regular deposits haggle fluffily",
												"C_PHONE": "11-695-834-7095",
												"C_CUSTKEY": "847742490",
												"C_NAME": "Customer#847742490",
												"C_ADDRESS": "gGe7Ew4YuE0ZAS,KMXjwEHCYmwGT3gRVzpHIiM",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "8809.22"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "jole slyly across the blithely express ideas-- regular, special p",
												"C_PHONE": "33-713-382-1633",
												"C_CUSTKEY": "847742491",
												"C_NAME": "Customer#847742491",
												"C_ADDRESS": "5X,5q,ORpt7ra9MOHkgtwVXGErTz9lzyPI1zlq0D",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "5590.98"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "nag blithely bold requests. carefully stealthy p",
												"C_PHONE": "14-607-341-1656",
												"C_CUSTKEY": "847742492",
												"C_NAME": "Customer#847742492",
												"C_ADDRESS": "kNNCRFbT9cWkU0RuY eAnq9c",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "3569.21"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "e special requests sleep according to the quickly unusual accounts.",
												"C_PHONE": "14-904-526-6810",
												"C_CUSTKEY": "847742493",
												"C_NAME": "Customer#847742493",
												"C_ADDRESS": "6,QurLQaO0ibAzYZuQSavWjZcdxDz",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "2754.13"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ackages. slyly silent dolphins above the slyly even packages are regular accounts. blithel",
												"C_PHONE": "24-874-644-9475",
												"C_CUSTKEY": "847742494",
												"C_NAME": "Customer#847742494",
												"C_ADDRESS": "CSJ0HMUckPBnj8AK1mmCMCuNsDHr",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "9697.23"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "carefully express platelets above the fluffily express deposits are along the slow, unusual pinto beans. furious",
												"C_PHONE": "23-833-334-6407",
												"C_CUSTKEY": "847742495",
												"C_NAME": "Customer#847742495",
												"C_ADDRESS": "WEF8IYq UZD3wb09SjfcjNOD80FrSkxd",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "3359.44"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "nag quickly at the quickly regular deposits. carefully regular tithes detect bli",
												"C_PHONE": "16-430-381-9652",
												"C_CUSTKEY": "847742496",
												"C_NAME": "Customer#847742496",
												"C_ADDRESS": "OWwQpvXOrPSleBO55e0WwmlMRhn5ul7qvi",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "8098.36"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ld excuses are carefully. bli",
												"C_PHONE": "17-462-503-2062",
												"C_CUSTKEY": "847742497",
												"C_NAME": "Customer#847742497",
												"C_ADDRESS": "cYO1thf6O614hGkr",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "4120.41"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ounts shall haggle. packages at the carefully regular ",
												"C_PHONE": "11-228-921-4413",
												"C_CUSTKEY": "847742498",
												"C_NAME": "Customer#847742498",
												"C_ADDRESS": "yFlr7Fiimstaw",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "4718.61"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " integrate. furiously regular packages wake quickly around the",
												"C_PHONE": "30-731-528-9826",
												"C_CUSTKEY": "847742499",
												"C_NAME": "Customer#847742499",
												"C_ADDRESS": "2gCBiNsvdqY0ZYcbCDDAD361iKruttNc4zCkH",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "4752.43"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "gular excuses. blithely even deposits doze slyly slyly f",
												"C_PHONE": "14-285-576-4433",
												"C_CUSTKEY": "847742500",
												"C_NAME": "Customer#847742500",
												"C_ADDRESS": "bAFjUGq5jrV6uOLbaCCs86vsBaCZE2XMoUtCYw",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "1060.91"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "quickly special foxes. blithely regular requ",
												"C_PHONE": "24-205-634-1706",
												"C_CUSTKEY": "847742501",
												"C_NAME": "Customer#847742501",
												"C_ADDRESS": "rVEQ sdFh6mVFz7kLWpDvw9rNKdKtS9w,pyu",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "8643.36"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "kly final somas. carefully pending instructions sleep slyly above the final accounts. slyly silent pinto beans b",
												"C_PHONE": "18-119-713-8102",
												"C_CUSTKEY": "847742502",
												"C_NAME": "Customer#847742502",
												"C_ADDRESS": "EvvvHZvI72Qj YRMLiaymj",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "982.30"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s are after the furiously silent foxes. carefully unusual packag",
												"C_PHONE": "12-999-275-3976",
												"C_CUSTKEY": "847742503",
												"C_NAME": "Customer#847742503",
												"C_ADDRESS": "YIzpge9QNCA65yl84,EDHthLETs8V3RVk1nRB",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "7385.60"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " carefully ironic, special deposits-- furiously enticing ",
												"C_PHONE": "10-707-233-3564",
												"C_CUSTKEY": "847742504",
												"C_NAME": "Customer#847742504",
												"C_ADDRESS": "fRixUzcusm5BKYet6StTWmY",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "3904.22"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "inal requests are about the accounts. bold, unusual platelets across the deposits use platelets. fluffil",
												"C_PHONE": "11-766-489-6753",
												"C_CUSTKEY": "847742505",
												"C_NAME": "Customer#847742505",
												"C_ADDRESS": "o3c5qy27w8SXCoD5vu",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "1161.78"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "n pinto beans despite the final forges are furiously q",
												"C_PHONE": "23-867-333-9923",
												"C_CUSTKEY": "847742506",
												"C_NAME": "Customer#847742506",
												"C_ADDRESS": "t,BDVGdxnZ gbji",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "9974.22"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "carefully quickly ironic ideas. accounts haggle blithely along the qu",
												"C_PHONE": "28-157-788-4450",
												"C_CUSTKEY": "847742507",
												"C_NAME": "Customer#847742507",
												"C_ADDRESS": "AIHbkFQOachZdOF OnqLZiAxtLdl9",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "5872.12"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "he quickly pending accounts boost carefully at the quickly final theodolites. ",
												"C_PHONE": "26-463-201-6257",
												"C_CUSTKEY": "847742508",
												"C_NAME": "Customer#847742508",
												"C_ADDRESS": "0vvH0QO10  Ber",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "9680.97"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "are according to the even, ironic theodolites. theodolites sleep furiously careful pa",
												"C_PHONE": "16-714-575-6146",
												"C_CUSTKEY": "847742509",
												"C_NAME": "Customer#847742509",
												"C_ADDRESS": "gNsQKizdqYF6HsJBr72L6PsIWS",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5075.23"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ronic requests are furiously along the even ",
												"C_PHONE": "24-333-654-6645",
												"C_CUSTKEY": "847742510",
												"C_NAME": "Customer#847742510",
												"C_ADDRESS": "F5AKrVaIPGYra2uwFM2aw7c0vPw4JFK82",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "3443.78"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " packages. furiously bold requests affix carefully slyly final dependencies. ca",
												"C_PHONE": "19-971-622-9334",
												"C_CUSTKEY": "847742511",
												"C_NAME": "Customer#847742511",
												"C_ADDRESS": "WBihjcPEIxcY60sa",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "6549.53"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "es. blithely even foxes run. blithely ironic deposits are regular, bold requests. deposits",
												"C_PHONE": "13-933-137-5057",
												"C_CUSTKEY": "847742512",
												"C_NAME": "Customer#847742512",
												"C_ADDRESS": "4SrTdDknsvieBLh7VJ5MoyrxoEWu6OeJY G",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "9997.21"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "furiously unusual sauternes cajole according to the blithely final dep",
												"C_PHONE": "19-118-198-8444",
												"C_CUSTKEY": "847742513",
												"C_NAME": "Customer#847742513",
												"C_ADDRESS": "pC1WFHCcANjT9l6ZbrltnXwmAm5aAW",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "7110.01"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "counts sleep under the furiously regular dinos! blithely regular courts nag",
												"C_PHONE": "26-957-512-8450",
												"C_CUSTKEY": "847742514",
												"C_NAME": "Customer#847742514",
												"C_ADDRESS": "TzpJ9NnqVSASozc0HEnxbQw4aMEC9",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "3017.58"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lyly regular instructions. pending, final dinos haggle slyly. carefully express excuses print always. regular f",
												"C_PHONE": "19-281-397-6981",
												"C_CUSTKEY": "847742515",
												"C_NAME": "Customer#847742515",
												"C_ADDRESS": "YnycY8bZmC2Hox1KYeqB9dQfOlsdt",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "4434.03"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "uests sleep above the unusual instr",
												"C_PHONE": "29-822-632-4648",
												"C_CUSTKEY": "847742516",
												"C_NAME": "Customer#847742516",
												"C_ADDRESS": "7ENSoHp6kzZR2tOLRJpgjiD",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "6720.31"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "y final, regular theodolites. quickly final accounts are. pinto b",
												"C_PHONE": "16-381-297-5185",
												"C_CUSTKEY": "847742517",
												"C_NAME": "Customer#847742517",
												"C_ADDRESS": "jJxwLws2TI1K7a",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "9240.30"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ackages cajole quickly; blithely special accounts cajole. slyly ",
												"C_PHONE": "29-614-512-6244",
												"C_CUSTKEY": "847742518",
												"C_NAME": "Customer#847742518",
												"C_ADDRESS": "ByEEIx3WrkKQmMLqFT MYL5sdtWTIb7e1100du",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "1768.22"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "thely even packages use furiously. blithely bold deposits cajole. blithe",
												"C_PHONE": "12-475-299-7906",
												"C_CUSTKEY": "847742519",
												"C_NAME": "Customer#847742519",
												"C_ADDRESS": "1ZSJAJ2ZGT2KWMy",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "5437.68"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "kages sleep slyly closely special",
												"C_PHONE": "24-693-289-7860",
												"C_CUSTKEY": "847742520",
												"C_NAME": "Customer#847742520",
												"C_ADDRESS": "KZx5oMmwukh1S2nm3HZ",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "1041.39"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ecial dependencies. furiously pending accounts snooze slyly acros",
												"C_PHONE": "23-715-350-4347",
												"C_CUSTKEY": "847742521",
												"C_NAME": "Customer#847742521",
												"C_ADDRESS": "qhSBvp0WXm2hyGoggzOgXTZJhmNm",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "-328.95"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ound the slyly special platelets will have t",
												"C_PHONE": "28-863-889-3171",
												"C_CUSTKEY": "847742522",
												"C_NAME": "Customer#847742522",
												"C_ADDRESS": " 3euCkI6YLl0AHZQ4SEHkfiZ siLCwHRTUCpG",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "2277.02"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s boost platelets. slyly regular excuses nag final packages. quickly bold ideas over the pinto bea",
												"C_PHONE": "31-705-984-2022",
												"C_CUSTKEY": "847742523",
												"C_NAME": "Customer#847742523",
												"C_ADDRESS": "gRrdqem2cZQNo",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "9906.17"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ding requests lose quickly ideas. furiously ironic deposits would are",
												"C_PHONE": "33-764-994-9648",
												"C_CUSTKEY": "847742524",
												"C_NAME": "Customer#847742524",
												"C_ADDRESS": "vLATKyTs3R1h,l4ezbpFd5dDVV",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "6039.52"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ly ironic packages. blithely final foxes sleep furiously pending real",
												"C_PHONE": "10-956-120-9234",
												"C_CUSTKEY": "847742525",
												"C_NAME": "Customer#847742525",
												"C_ADDRESS": "DPaaXdE,viiPp2ghYH9Cp8cY tyHX0lH9k30",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "7279.21"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " beans. evenly special foxes affix finally. furiously even requests cajole quickly final a",
												"C_PHONE": "34-953-428-1338",
												"C_CUSTKEY": "847742526",
												"C_NAME": "Customer#847742526",
												"C_ADDRESS": "WCxklqvU91Cwyoe,Wvee,OY ",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "8736.49"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ns among the slyly silent packages are slyly after ",
												"C_PHONE": "19-444-460-8019",
												"C_CUSTKEY": "847742527",
												"C_NAME": "Customer#847742527",
												"C_ADDRESS": "1lfx5E1m0s",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "4268.27"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " platelets after the pending asymptote",
												"C_PHONE": "12-813-886-7163",
												"C_CUSTKEY": "847742528",
												"C_NAME": "Customer#847742528",
												"C_ADDRESS": "ty5OlOjnOquBcJB8p7KI7rkZK6C",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "3766.28"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ts wake carefully about the furiously regular deposits.",
												"C_PHONE": "11-547-730-8760",
												"C_CUSTKEY": "847742529",
												"C_NAME": "Customer#847742529",
												"C_ADDRESS": "qEDDbr,fasDZkI7U68wgj18M qE9MwNFnsbm1w",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "3775.87"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "regular frets. deposits was silent requests. slyly ironic ideas eat against th",
												"C_PHONE": "11-256-443-5737",
												"C_CUSTKEY": "847742530",
												"C_NAME": "Customer#847742530",
												"C_ADDRESS": "0f7OeMwLLgE,DjP0gwNhdh8OATOq0mGtE",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "-4.48"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " above the bold deposits are unusu",
												"C_PHONE": "17-698-116-9257",
												"C_CUSTKEY": "847742531",
												"C_NAME": "Customer#847742531",
												"C_ADDRESS": "std7W3qIvy0agdQ HKdG0PsDBFPoB8XfF0",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "-286.88"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": ", special instructions. quickly final accounts dou",
												"C_PHONE": "18-811-485-8213",
												"C_CUSTKEY": "847742532",
												"C_NAME": "Customer#847742532",
												"C_ADDRESS": "Uy56lJecqMOLF1lW8O4EDbEhG 7E",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "5305.51"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " deposits haggle slyly among the even theodolites. furiously pending platelets",
												"C_PHONE": "31-966-165-8210",
												"C_CUSTKEY": "847742533",
												"C_NAME": "Customer#847742533",
												"C_ADDRESS": "DtL7ZyKO7Coj4AOaFWcbuTS6MKKdY",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "1795.98"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ideas cajole furiously special patterns. quickly final deposits was blithely carefully express packages. spec",
												"C_PHONE": "28-486-145-2121",
												"C_CUSTKEY": "847742534",
												"C_NAME": "Customer#847742534",
												"C_ADDRESS": "EY4WFtGkk0J6r2p7a0sb85r",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-989.65"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "thely even courts. slyly special theodolites sleep blithely carefully silent asymptotes. idly even req",
												"C_PHONE": "26-865-954-7991",
												"C_CUSTKEY": "847742535",
												"C_NAME": "Customer#847742535",
												"C_ADDRESS": "b8jjbih34UL",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "7841.23"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " ironic dependencies x-ray furiously unusual somas. pending theodolites cajole packages. ac",
												"C_PHONE": "16-724-741-4978",
												"C_CUSTKEY": "847742536",
												"C_NAME": "Customer#847742536",
												"C_ADDRESS": "SjPz4hj7Zpm7jK6XHG4KyqzLRM3c 897KqnW",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "5576.99"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "y regular somas. blithely even ideas are furiously alongside of the furiously ironic instructions",
												"C_PHONE": "13-251-940-2126",
												"C_CUSTKEY": "847742537",
												"C_NAME": "Customer#847742537",
												"C_ADDRESS": " 9NLrj,E1D6yFUaJ",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "-460.10"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly regular requests alongside of the even requests are pending ideas. blithely final r",
												"C_PHONE": "22-899-717-3585",
												"C_CUSTKEY": "847742538",
												"C_NAME": "Customer#847742538",
												"C_ADDRESS": "TqLdgO2uBc",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "9099.56"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "cial, regular instructions boost furiously even instr",
												"C_PHONE": "28-703-373-4295",
												"C_CUSTKEY": "847742539",
												"C_NAME": "Customer#847742539",
												"C_ADDRESS": "s7NmYm1Y2F48EBIIH3VZUnex0dPv5lAB2BmCE",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "1405.38"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ly even instructions wake slyly carefully even gifts. bold de",
												"C_PHONE": "16-966-508-2073",
												"C_CUSTKEY": "847742540",
												"C_NAME": "Customer#847742540",
												"C_ADDRESS": "WRYCDIcvAndCYzQxM19SEWKLzLekWm,aHY",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1091.72"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "fluffily. pending accounts nag against the even, pending theodolites. requests haggle fluffily. fu",
												"C_PHONE": "20-327-642-5746",
												"C_CUSTKEY": "847742541",
												"C_NAME": "Customer#847742541",
												"C_ADDRESS": "CkHHa7tkGuVkC82rcx",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "9541.28"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ions eat ironically. slowly regular r",
												"C_PHONE": "16-102-996-9494",
												"C_CUSTKEY": "847742542",
												"C_NAME": "Customer#847742542",
												"C_ADDRESS": "ZawkdxPsc346v V0RJx3XY kfIO3T uOWKYG6",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "412.94"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "its detect unusual packages. express deposits against the express dep",
												"C_PHONE": "17-112-115-3488",
												"C_CUSTKEY": "847742543",
												"C_NAME": "Customer#847742543",
												"C_ADDRESS": "GbIqGGrhfN,sUF8AKBlUAcmMo5T,W6GLr3RO",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8194.06"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "g accounts are quickly against the express instructions.",
												"C_PHONE": "28-434-882-9297",
												"C_CUSTKEY": "847742544",
												"C_NAME": "Customer#847742544",
												"C_ADDRESS": "8KBiCcGwV6dCGqKCx1O7aitlDz",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "6604.40"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ly carefully bold packages. ironic, final platelets cajole according to the carefully regular r",
												"C_PHONE": "26-953-133-4670",
												"C_CUSTKEY": "847742545",
												"C_NAME": "Customer#847742545",
												"C_ADDRESS": "HKKkwy7h6DpYdU5JQL0QwHFpr7U8rMo,",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "8103.21"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "le blithely even, regular instructions. fluffily careful decoys nag quickly. even, final excuses are quickl",
												"C_PHONE": "31-722-902-8844",
												"C_CUSTKEY": "847742546",
												"C_NAME": "Customer#847742546",
												"C_ADDRESS": "YTz,pdd0F25j9s daJ",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "8713.38"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " blithely regular braids. slyly close platelets across the even waters are furiously qu",
												"C_PHONE": "21-846-689-3798",
												"C_CUSTKEY": "847742547",
												"C_NAME": "Customer#847742547",
												"C_ADDRESS": "FAh3OKqQ,wKEX rWFNO3uL",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "854.36"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " the carefully busy platelets wake furiously even requests. ironic deposits above the re",
												"C_PHONE": "26-724-290-9812",
												"C_CUSTKEY": "847742548",
												"C_NAME": "Customer#847742548",
												"C_ADDRESS": "6xbsbQ2uklKkStNUBAG0yY3xR",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "2189.21"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "iously silent foxes are. unusual, bold requests around the iron",
												"C_PHONE": "22-410-579-6025",
												"C_CUSTKEY": "847742549",
												"C_NAME": "Customer#847742549",
												"C_ADDRESS": "SiK4W7s,vpizIcwKabeFFcImLw9mSqkBnpXO6e4",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "7935.71"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " haggle blithely regular excuses. requests are slyly blithely even accounts. sl",
												"C_PHONE": "18-679-904-1974",
												"C_CUSTKEY": "847742550",
												"C_NAME": "Customer#847742550",
												"C_ADDRESS": "qSBM56islBI",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "9470.90"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "iously ironic foxes. fluffily even deposits lose furiously fluffily regular ideas. furious",
												"C_PHONE": "20-261-990-6895",
												"C_CUSTKEY": "847742551",
												"C_NAME": "Customer#847742551",
												"C_ADDRESS": "L5e0wkW4PpzKLUVA2",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "5550.72"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "bold accounts. blithely special epitaphs affix furiously. final excuses haggle blithely. furious",
												"C_PHONE": "13-182-587-3419",
												"C_CUSTKEY": "847742552",
												"C_NAME": "Customer#847742552",
												"C_ADDRESS": "1ocJAITQO53VWbM986xQH",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "8998.17"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ly regular deposits wake slyly around the bold deposits-- special, final platelets nod quickly ironic pinto beans. q",
												"C_PHONE": "17-653-600-5565",
												"C_CUSTKEY": "847742553",
												"C_NAME": "Customer#847742553",
												"C_ADDRESS": "wAOO2ZTVKNj34i6bXWAMR",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "2371.40"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "inal platelets. slyly express dolphins sleep quickly furiously regular req",
												"C_PHONE": "33-603-757-3763",
												"C_CUSTKEY": "847742554",
												"C_NAME": "Customer#847742554",
												"C_ADDRESS": "XQUkkF20yY",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "1156.11"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "e furiously around the quickly final platelets. fluffily ironic pinto beans w",
												"C_PHONE": "13-804-624-4568",
												"C_CUSTKEY": "847742555",
												"C_NAME": "Customer#847742555",
												"C_ADDRESS": ",wUm7U81qeH72xiwmKO",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "2748.72"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ctions wake express, silent pa",
												"C_PHONE": "21-784-777-1194",
												"C_CUSTKEY": "847742556",
												"C_NAME": "Customer#847742556",
												"C_ADDRESS": "vXrMpbvAx5s6pWRadCXBp6IrSGYDwchVnAf2z",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "6746.26"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "hy foxes. furiously final pains are fluffily doggedly special frays. carefully ironic ideas was blithely carefull",
												"C_PHONE": "32-509-639-4785",
												"C_CUSTKEY": "847742557",
												"C_NAME": "Customer#847742557",
												"C_ADDRESS": "LDQPrK7tMgLBomGUsCn3m0iUJlJnC4Ff",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "5490.41"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "y ironic packages. fluffily silen",
												"C_PHONE": "31-950-285-8715",
												"C_CUSTKEY": "847742558",
												"C_NAME": "Customer#847742558",
												"C_ADDRESS": "EAModR6g6AJnPKcU7,xxW7J7 MtxxCmUcrk1",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "7377.83"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ainst the theodolites-- blithely final waters are quickly. blithely bu",
												"C_PHONE": "34-685-363-8664",
												"C_CUSTKEY": "847742559",
												"C_NAME": "Customer#847742559",
												"C_ADDRESS": "u9sq9jQTlZT9",
												"C_NATIONKEY": "24",
												"C_ACCTBAL": "5282.86"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "tes cajole special platelets. express, ironic platelets impress blithely along the",
												"C_PHONE": "21-682-638-4439",
												"C_CUSTKEY": "847742560",
												"C_NAME": "Customer#847742560",
												"C_ADDRESS": "hCCwfAVP2,i51m,DTh",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "6105.29"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " quickly against the furiously ironic deposits. requests",
												"C_PHONE": "33-633-724-8818",
												"C_CUSTKEY": "847742561",
												"C_NAME": "Customer#847742561",
												"C_ADDRESS": "Ra3ve12hUWccDCWlqo",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "1684.91"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "across the quickly regular instructions. plat",
												"C_PHONE": "19-299-642-4645",
												"C_CUSTKEY": "847742562",
												"C_NAME": "Customer#847742562",
												"C_ADDRESS": "juCthOH1ET,Qq",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "2200.73"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "olites cajole furiously according to the pending ideas. quickly bold acco",
												"C_PHONE": "33-960-711-7829",
												"C_CUSTKEY": "847742563",
												"C_NAME": "Customer#847742563",
												"C_ADDRESS": "BWYpEP9Hmy R1APxgv9DTlCKjlaw4YOaTpErAo",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "3634.22"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " along the fluffily final pinto beans boost ",
												"C_PHONE": "32-282-140-2151",
												"C_CUSTKEY": "847742564",
												"C_NAME": "Customer#847742564",
												"C_ADDRESS": "eO65MW2PXOfWF7C7IDpf",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "6275.50"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ag carefully special packages. carefully special excuses sl",
												"C_PHONE": "17-661-248-3240",
												"C_CUSTKEY": "847742565",
												"C_NAME": "Customer#847742565",
												"C_ADDRESS": "9MqJ993tSXMBxI6",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "2315.44"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ts haggle carefully quickly even foxes. carefully id",
												"C_PHONE": "18-878-550-1857",
												"C_CUSTKEY": "847742566",
												"C_NAME": "Customer#847742566",
												"C_ADDRESS": "f1yEcOwL J2aN,RtYAcDzmF43213eY",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6596.01"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "aggle furiously against the blithely regular requests. stealthily final packages detect. regular Tiresias use c",
												"C_PHONE": "10-317-148-6144",
												"C_CUSTKEY": "847742567",
												"C_NAME": "Customer#847742567",
												"C_ADDRESS": "ef0xxHzp5ysVEVSvZLkcTkC9xRZp",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "-803.74"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "lites mold carefully furiously even deposits. fluffily pen",
												"C_PHONE": "29-653-490-4276",
												"C_CUSTKEY": "847742568",
												"C_NAME": "Customer#847742568",
												"C_ADDRESS": "Q4LBiSp0rZiS67BSyurk80jNW",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8407.28"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": " excuses. furiously pending excuses cajole bold accounts. regular theodoli",
												"C_PHONE": "15-204-174-7935",
												"C_CUSTKEY": "847742569",
												"C_NAME": "Customer#847742569",
												"C_ADDRESS": "eFlNXYW1m7EozmFi7pB81j3dqMqOspNFT2rnxCKi",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "4160.47"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ldly unusual foxes wake. foxes haggle silently unusual asymptotes. blithely regular requests about the even",
												"C_PHONE": "18-283-209-4423",
												"C_CUSTKEY": "847742570",
												"C_NAME": "Customer#847742570",
												"C_ADDRESS": "kcvW67zoXK2vEiq QgcnWEuplgFf1mDUuSw",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "7048.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "its. packages boost slyly quickly ironic deposits.",
												"C_PHONE": "17-191-669-3634",
												"C_CUSTKEY": "847742571",
												"C_NAME": "Customer#847742571",
												"C_ADDRESS": "SLG7dQfDQsbvjs7oar1qqjZ3H",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "8866.36"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "eposits cajole express accounts. carefully ",
												"C_PHONE": "18-584-558-5120",
												"C_CUSTKEY": "847742572",
												"C_NAME": "Customer#847742572",
												"C_ADDRESS": "8,bMCbsI2BakZFhLGriHxuWzs7w7ov28",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "9034.52"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "mptotes boost slyly. daring theodolites above the carefully regular deposits boost carefully carefully p",
												"C_PHONE": "26-628-490-8334",
												"C_CUSTKEY": "847742573",
												"C_NAME": "Customer#847742573",
												"C_ADDRESS": "43x5NVNFE6p qADUI7 Uy6 BXL3KiOco14Y,I",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "8211.64"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "eposits sleep slyly silent accounts. ironic accounts cajole along the regular, regular orbits. carefully ",
												"C_PHONE": "13-647-652-1046",
												"C_CUSTKEY": "847742574",
												"C_NAME": "Customer#847742574",
												"C_ADDRESS": "hdHsxoEctQ085 6b2RYHnHM",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "5062.13"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "posits. even ideas are slyly fluffily unusual packages. furiously special deposits across the",
												"C_PHONE": "11-144-923-2381",
												"C_CUSTKEY": "847742575",
												"C_NAME": "Customer#847742575",
												"C_ADDRESS": "zlnzJfOo59vSPOAS",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "3251.48"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "l instructions cajole careful",
												"C_PHONE": "20-156-379-6862",
												"C_CUSTKEY": "847742576",
												"C_NAME": "Customer#847742576",
												"C_ADDRESS": "2d3evG1gGyL3 Ybc4h8kkhxU63B",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "8682.20"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "gainst the carefully unusual theodolites. perm",
												"C_PHONE": "32-536-938-4670",
												"C_CUSTKEY": "847742577",
												"C_NAME": "Customer#847742577",
												"C_ADDRESS": "HJB1f2YFxJoP0ncHwTnKqtdUD9 ",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "4873.82"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sits nag quickly. forges lose slyly across the unusual, express dugouts. furiously even excuses haggle fluffily. s",
												"C_PHONE": "12-386-141-8350",
												"C_CUSTKEY": "847742578",
												"C_NAME": "Customer#847742578",
												"C_ADDRESS": "lW6Zb4t4dz47Ec",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "6378.84"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "cuses. carefully special accounts after the deposits believe after the blithely pending attainments. bold, even pac",
												"C_PHONE": "19-827-620-1124",
												"C_CUSTKEY": "847742579",
												"C_NAME": "Customer#847742579",
												"C_ADDRESS": "zRidtFmKhei6zFk485CMWP7OdZapcH",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1204.48"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly special accounts-- regular deposits across the ironic, expres",
												"C_PHONE": "10-999-871-4248",
												"C_CUSTKEY": "847742580",
												"C_NAME": "Customer#847742580",
												"C_ADDRESS": "dveVT5YxN2uJHNzreu,m1YpqRYYAlg",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "1640.10"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " accounts. quickly final accounts along the",
												"C_PHONE": "28-785-333-2780",
												"C_CUSTKEY": "847742581",
												"C_NAME": "Customer#847742581",
												"C_ADDRESS": "dAWOsKLAz9YmvhxQF12TYOl4steYW",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "8108.97"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "blithely ironic accounts. packages wake slyly carefully bold foxes. pending, special instructions haggle carefu",
												"C_PHONE": "10-913-552-4048",
												"C_CUSTKEY": "847742582",
												"C_NAME": "Customer#847742582",
												"C_ADDRESS": "3wA nBt,O8EMLu",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "6493.16"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "use quickly even accounts. accounts are. carefully bold sauternes will have to ",
												"C_PHONE": "18-593-842-9101",
												"C_CUSTKEY": "847742583",
												"C_NAME": "Customer#847742583",
												"C_ADDRESS": "K8DnfTacI5",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "8595.70"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "y against the ideas. quickly regular dolphins lose furiously furiously ironic pearl",
												"C_PHONE": "27-867-314-3976",
												"C_CUSTKEY": "847742584",
												"C_NAME": "Customer#847742584",
												"C_ADDRESS": "WTHdrv2n7G3LcOpulspkys6wA4GGX",
												"C_NATIONKEY": "17",
												"C_ACCTBAL": "3063.12"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "riously regular requests. slyly even deposits boost fluffily ",
												"C_PHONE": "23-207-907-2195",
												"C_CUSTKEY": "847742585",
												"C_NAME": "Customer#847742585",
												"C_ADDRESS": "SQbeFRhH7Ocu,XDKJd0Ea6ElSlqfrkqC",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "-202.59"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " foxes alongside of the furiously even platelets wake carefully blithely quiet request",
												"C_PHONE": "32-828-996-3923",
												"C_CUSTKEY": "847742586",
												"C_NAME": "Customer#847742586",
												"C_ADDRESS": "uT2OVC3WUNVrL39DGJ Ud82",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "3008.57"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "fix blithely permanently ironic instructions. dependencies after the packages c",
												"C_PHONE": "25-891-655-9900",
												"C_CUSTKEY": "847742587",
												"C_NAME": "Customer#847742587",
												"C_ADDRESS": "a2eRRlYnvos1CcnncErL",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "6975.61"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ic pinto beans snooze fluffily acr",
												"C_PHONE": "28-894-230-9214",
												"C_CUSTKEY": "847742588",
												"C_NAME": "Customer#847742588",
												"C_ADDRESS": "kQBL kvUAo3Eas8zttJsF6SVHt",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-911.00"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "aggle quickly above the carefully regular requests. quickly pending",
												"C_PHONE": "19-141-233-5084",
												"C_CUSTKEY": "847742589",
												"C_NAME": "Customer#847742589",
												"C_ADDRESS": "YAZbYqLwykHy68O7OXIkbneUJ",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "9740.27"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "oxes cajole blithely. thin deposits haggle slyly. carefully bold foxes nag",
												"C_PHONE": "20-480-570-7945",
												"C_CUSTKEY": "847742590",
												"C_NAME": "Customer#847742590",
												"C_ADDRESS": "3uu9ISWxwjX9GK3YKXIsvLhHBZ",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "729.90"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "equests. packages doubt blithely across the accounts. final, final",
												"C_PHONE": "15-726-105-5745",
												"C_CUSTKEY": "847742591",
												"C_NAME": "Customer#847742591",
												"C_ADDRESS": "OcrvhG5XvjC0NsDaeWguAr,KJaJyVXMY6PMMM5hG",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "308.23"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "blithely among the furiously final deposits. pending, unusual asymptotes wake inside the even dependencies",
												"C_PHONE": "14-309-942-5525",
												"C_CUSTKEY": "847742592",
												"C_NAME": "Customer#847742592",
												"C_ADDRESS": "RHlC3JpKOfbs9AsK02ivxOdeTafjbtF3LD2",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "8362.71"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "iously express ideas sleep permanently around the slyly silent packages. furiously even requests across the",
												"C_PHONE": "16-122-547-6343",
												"C_CUSTKEY": "847742593",
												"C_NAME": "Customer#847742593",
												"C_ADDRESS": "T4jHUUYy5wZZCxg5C5bJvIoJxvBdrsCaNgJ5wYA",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "3109.70"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " quickly even dolphins boost fluffily. blithely unusual req",
												"C_PHONE": "15-334-776-9766",
												"C_CUSTKEY": "847742594",
												"C_NAME": "Customer#847742594",
												"C_ADDRESS": "CcFOU49leIWiZheYtpZhLv7ipQBxJ 3Io",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "1681.75"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "symptotes haggle furiously even deposits. regular dugouts affix around the qu",
												"C_PHONE": "20-542-607-5215",
												"C_CUSTKEY": "847742595",
												"C_NAME": "Customer#847742595",
												"C_ADDRESS": "kSeR4QGtUY,BwyYmAtxMJmUvaZoUeZS",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "4126.98"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ithely unusual accounts maintain furiously regular, unusual accounts. blithely regular pearls ",
												"C_PHONE": "32-723-457-9602",
												"C_CUSTKEY": "847742596",
												"C_NAME": "Customer#847742596",
												"C_ADDRESS": "3xovDjCbv9LZVyraxMJKJCUd ",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "5146.16"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "fully ironic deposits are blithely furiously",
												"C_PHONE": "25-216-982-9437",
												"C_CUSTKEY": "847742597",
												"C_NAME": "Customer#847742597",
												"C_ADDRESS": "nLw13WFU02NHPDVuOrCR2TDRI",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "7587.96"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "e furiously. furiously bold instructions cajole ideas. packages according to t",
												"C_PHONE": "32-835-269-3291",
												"C_CUSTKEY": "847742598",
												"C_NAME": "Customer#847742598",
												"C_ADDRESS": "sDEdMrKSKSya6nXYrQjlBoZQbaTFhbXt,id",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "5852.16"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " deposits wake slyly about the blithely specia",
												"C_PHONE": "31-618-378-9883",
												"C_CUSTKEY": "847742599",
												"C_NAME": "Customer#847742599",
												"C_ADDRESS": "LA7Ey2 98slXh7w5FRTnMP",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "4319.46"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ly pending deposits wake slyly. slyly ironic",
												"C_PHONE": "16-885-417-9657",
												"C_CUSTKEY": "847742600",
												"C_NAME": "Customer#847742600",
												"C_ADDRESS": "fdxIkl5pGY3968ed9J4L",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "6151.13"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "sits nag. furiously regular packa",
												"C_PHONE": "30-601-611-5961",
												"C_CUSTKEY": "847742601",
												"C_NAME": "Customer#847742601",
												"C_ADDRESS": "jlVMpbyId2YSBLuGHHLJRH6FRs2D5Gb",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "1999.84"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " the furiously ironic dependencies. ironic requests run carefully behind the furiously silent depths. carefully",
												"C_PHONE": "30-125-185-6043",
												"C_CUSTKEY": "847742602",
												"C_NAME": "Customer#847742602",
												"C_ADDRESS": "PugrsIwa5ViYhbyO4Oo0hCHc",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "4290.64"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "slyly. quickly express deposits across the even dependencies haggle stealthily",
												"C_PHONE": "25-863-962-4606",
												"C_CUSTKEY": "847742603",
												"C_NAME": "Customer#847742603",
												"C_ADDRESS": "zHbE dzuZVDwJ8IoZRIexG",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "5722.35"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "lithely blithe foxes. fluffily unusual platelets boost carefully express accou",
												"C_PHONE": "11-813-315-3911",
												"C_CUSTKEY": "847742604",
												"C_NAME": "Customer#847742604",
												"C_ADDRESS": "6J17CBRJkBv02seeCbjznfAe2,",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "527.14"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " even pains. furiously final pinto beans according to t",
												"C_PHONE": "22-697-910-1754",
												"C_CUSTKEY": "847742605",
												"C_NAME": "Customer#847742605",
												"C_ADDRESS": "XqBHTiLEt82l40zK4J",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "2662.73"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ly express packages are above the ideas. final ",
												"C_PHONE": "12-769-723-2832",
												"C_CUSTKEY": "847742606",
												"C_NAME": "Customer#847742606",
												"C_ADDRESS": "mNs jYgA39ti5Kbt",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "2506.69"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "latelets. regular, regular platelets among the furiously unusual asymptotes s",
												"C_PHONE": "31-655-300-3927",
												"C_CUSTKEY": "847742607",
												"C_NAME": "Customer#847742607",
												"C_ADDRESS": "TAwsLWMSNeIkjmhJlwHSIeAw8imPg M",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "8833.04"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " ideas may wake furiously. furiously unusual accounts alongside",
												"C_PHONE": "18-983-413-3196",
												"C_CUSTKEY": "847742608",
												"C_NAME": "Customer#847742608",
												"C_ADDRESS": "zKKsPlQHYDzJC8zPFITHbj3xxbKuEJP",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "9906.58"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ans. idly ironic packages boost slyly unusual accounts. ",
												"C_PHONE": "22-305-536-2194",
												"C_CUSTKEY": "847742609",
												"C_NAME": "Customer#847742609",
												"C_ADDRESS": "a4lvYYoRkJCj",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "1896.86"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s impress. ironic, express dependencies maintain. regular, pending pinto beans might sleep furiously across the b",
												"C_PHONE": "16-806-448-6454",
												"C_CUSTKEY": "847742610",
												"C_NAME": "Customer#847742610",
												"C_ADDRESS": "c Ctwk7d122mUqajU69t5AKM",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "453.05"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "requests. slyly final escapades across the final tithe",
												"C_PHONE": "33-219-611-4609",
												"C_CUSTKEY": "847742611",
												"C_NAME": "Customer#847742611",
												"C_ADDRESS": "r fJHV6AVzKKSB",
												"C_NATIONKEY": "23",
												"C_ACCTBAL": "274.52"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "s engage blithely ironic instructions. pe",
												"C_PHONE": "31-726-434-6343",
												"C_CUSTKEY": "847742612",
												"C_NAME": "Customer#847742612",
												"C_ADDRESS": "VUsGzgPEOCPwlFI5irS8EF tjk",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "2716.81"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "eposits must have to cajole carefully against the blithely enticing accounts. slyly regular re",
												"C_PHONE": "10-426-771-2628",
												"C_CUSTKEY": "847742613",
												"C_NAME": "Customer#847742613",
												"C_ADDRESS": "EwBYAAU4ckn6EqK0w4vYznImFDT,zMtKH",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "9362.65"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "riously along the even packages. slyly final foxes according to the fluffily unusual requests boost around th",
												"C_PHONE": "16-636-154-1414",
												"C_CUSTKEY": "847742614",
												"C_NAME": "Customer#847742614",
												"C_ADDRESS": "z,YQ,10WFQ8JZGq2C,zjLvvlhxm9",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "1092.62"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "silent instructions. express, final deposits doze slyly. quickly pending deposits are about the ",
												"C_PHONE": "16-447-850-2553",
												"C_CUSTKEY": "847742615",
												"C_NAME": "Customer#847742615",
												"C_ADDRESS": "qe0Zt286I5Dd",
												"C_NATIONKEY": "6",
												"C_ACCTBAL": "2688.49"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": " even excuses use furiously even tithes. carefully ironic requests sleep. f",
												"C_PHONE": "18-234-585-7164",
												"C_CUSTKEY": "847742616",
												"C_NAME": "Customer#847742616",
												"C_ADDRESS": "08zDLbl7wDwb8A9Sg27QT",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "6437.33"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "lyly-- blithely pending accounts us",
												"C_PHONE": "29-473-822-4950",
												"C_CUSTKEY": "847742617",
												"C_NAME": "Customer#847742617",
												"C_ADDRESS": "QoPI1x6yoCC",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "5268.27"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "usly regular dependencies sublate carefully regular pinto beans. slyly regular sheaves use across the ac",
												"C_PHONE": "12-319-512-8747",
												"C_CUSTKEY": "847742618",
												"C_NAME": "Customer#847742618",
												"C_ADDRESS": "WzJRwMnoY3o65bHYvcDh3IpFixe14YNN8uF",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "2821.62"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "sits haggle furiously furiously stealthy accounts; sl",
												"C_PHONE": "22-336-525-3854",
												"C_CUSTKEY": "847742619",
												"C_NAME": "Customer#847742619",
												"C_ADDRESS": "KZ5H1wApmyGU5pDNqGslTA2e",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "11.11"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ngly about the carefully even ideas",
												"C_PHONE": "11-467-211-3592",
												"C_CUSTKEY": "847742620",
												"C_NAME": "Customer#847742620",
												"C_ADDRESS": "99r2qj9VAN51v8",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "8636.36"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " the packages are furiously above the ironic forges. quickly special sentiments across the furiously unusual ",
												"C_PHONE": "22-947-602-8642",
												"C_CUSTKEY": "847742621",
												"C_NAME": "Customer#847742621",
												"C_ADDRESS": "CNdjkP2ya2QBeNr",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "4286.85"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "uriously express ideas kindle quickly up",
												"C_PHONE": "21-120-103-3084",
												"C_CUSTKEY": "847742622",
												"C_NAME": "Customer#847742622",
												"C_ADDRESS": "sX6,KVTBTAMhEHPG3TbTb1cJRGs7mr1lUYcCdV",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "8035.42"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "shall have to sleep slyly express ideas. blithely bold instructions haggle ",
												"C_PHONE": "15-392-706-6897",
												"C_CUSTKEY": "847742623",
												"C_NAME": "Customer#847742623",
												"C_ADDRESS": "GVcHgRd0P7EHM EGh,RT  UyLX6JXsnGsLdE",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "2275.35"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "efully among the fluffily regular deposits. furiously even foxes cajole carefully furio",
												"C_PHONE": "31-529-356-2349",
												"C_CUSTKEY": "847742624",
												"C_NAME": "Customer#847742624",
												"C_ADDRESS": "GPXVBthEV2np HRDgY9N,r",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "3709.87"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ts serve above the special packages. regular, quiet Tiresias wak",
												"C_PHONE": "25-751-337-3730",
												"C_CUSTKEY": "847742625",
												"C_NAME": "Customer#847742625",
												"C_ADDRESS": "tvXGKdnCqYDhZmo3e5XTmCGZEflDKbX",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "1772.51"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "fully special accounts cajole slyly. slyly even deposits haggle carefully about the epitaphs. slyly regular ",
												"C_PHONE": "29-856-379-5278",
												"C_CUSTKEY": "847742626",
												"C_NAME": "Customer#847742626",
												"C_ADDRESS": "fSfpFQnMkc,",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "561.18"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "ons boost. ironic, even packages nag fluffily alongside of the ideas. requests boost quickly. quickly regular ",
												"C_PHONE": "13-707-852-5079",
												"C_CUSTKEY": "847742627",
												"C_NAME": "Customer#847742627",
												"C_ADDRESS": "PMOQ9AvsLhHeCa91hZ32zu kx6SeSwv5",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "2688.06"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "furiously final packages? regular packages according to the bold, ironic requests wake furiously fl",
												"C_PHONE": "14-199-214-4218",
												"C_CUSTKEY": "847742628",
												"C_NAME": "Customer#847742628",
												"C_ADDRESS": "omYKcccWn6NEUTPHNaHa9g16lu",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "-773.74"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly final packages. foxes haggle furiously. unusual, regular theodolites boost",
												"C_PHONE": "15-331-431-1043",
												"C_CUSTKEY": "847742629",
												"C_NAME": "Customer#847742629",
												"C_ADDRESS": "HKrqfQ 4HBoByA,v 9xrLV8ouZa",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "6717.95"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ses are around the requests. courts above the p",
												"C_PHONE": "32-868-331-2660",
												"C_CUSTKEY": "847742630",
												"C_NAME": "Customer#847742630",
												"C_ADDRESS": "KoqIexUjHS5T tlve,Z9MXLdX7wAM2ndfKG",
												"C_NATIONKEY": "22",
												"C_ACCTBAL": "2678.65"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "riously ironic packages use slyly furiously bold ideas. furiously final courts was boldly. quickly regular packa",
												"C_PHONE": "31-791-927-3656",
												"C_CUSTKEY": "847742631",
												"C_NAME": "Customer#847742631",
												"C_ADDRESS": "rmDbqTZmh XCmFa9ggrTEo",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "6035.25"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "gle furiously according to the furiously ironic deposits. regular courts a",
												"C_PHONE": "26-799-648-4564",
												"C_CUSTKEY": "847742632",
												"C_NAME": "Customer#847742632",
												"C_ADDRESS": "Lid9KGoR1rnT7M2pyvcNWR,IJdpIsMM3Ok",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "1493.62"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "its. foxes are blithely. slyly special packages across the furiously regular foxes engage furiously q",
												"C_PHONE": "14-219-879-9003",
												"C_CUSTKEY": "847742633",
												"C_NAME": "Customer#847742633",
												"C_ADDRESS": "EabjhcQlp2DwZOc",
												"C_NATIONKEY": "4",
												"C_ACCTBAL": "-766.17"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ccounts are carefully. carefully pending accounts haggle along the express accounts.",
												"C_PHONE": "18-953-186-2025",
												"C_CUSTKEY": "847742634",
												"C_NAME": "Customer#847742634",
												"C_ADDRESS": "yup oxutuZ,DTeM6qiXW",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "1972.84"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "bold requests: carefully furious frays use fluffily theodolites. express pinto beans integrate slyly. ca",
												"C_PHONE": "12-308-430-1902",
												"C_CUSTKEY": "847742635",
												"C_NAME": "Customer#847742635",
												"C_ADDRESS": "XQbtY3n,gWP7WJF4Y,C8ROV",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "1544.79"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "e quickly slyly unusual pinto beans. ideas are at the fluffily regular excuses. theodolites are slyly alongside of t",
												"C_PHONE": "18-990-423-2051",
												"C_CUSTKEY": "847742636",
												"C_NAME": "Customer#847742636",
												"C_ADDRESS": "hSQQrc73koBbhYTqmUFxD7FV7kBRaYp878IeO",
												"C_NATIONKEY": "8",
												"C_ACCTBAL": "1228.87"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "jole quickly among the regular requests. blithely fin",
												"C_PHONE": "23-327-369-2574",
												"C_CUSTKEY": "847742637",
												"C_NAME": "Customer#847742637",
												"C_ADDRESS": "ZPuqZf,AlsGKYFFtpMXTVXggvb",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "4562.66"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "pinto beans doubt above the slyly ironic dependencies. furiously pending accounts wake regular, even ",
												"C_PHONE": "19-439-717-9476",
												"C_CUSTKEY": "847742638",
												"C_NAME": "Customer#847742638",
												"C_ADDRESS": "1B0AxUeXZYCmFWruekKgl7yDUsbLm3FE96cPBmg",
												"C_NATIONKEY": "9",
												"C_ACCTBAL": "1650.02"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ly. carefully regular dependencies haggle. unusual packages wake slyly around the silent, pend",
												"C_PHONE": "30-613-859-6873",
												"C_CUSTKEY": "847742639",
												"C_NAME": "Customer#847742639",
												"C_ADDRESS": "jU3OizcT3vtPzqO exP3bhO1lz7xZbCd3G",
												"C_NATIONKEY": "20",
												"C_ACCTBAL": "9792.33"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "slow pinto beans. quickly unus",
												"C_PHONE": "25-897-700-6415",
												"C_CUSTKEY": "847742640",
												"C_NAME": "Customer#847742640",
												"C_ADDRESS": "5T4wGHWvwPg8Ox2lwSUUjuavbRzoS ",
												"C_NATIONKEY": "15",
												"C_ACCTBAL": "6713.72"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e slyly unusual pinto beans. regular, speci",
												"C_PHONE": "29-770-279-7285",
												"C_CUSTKEY": "847742641",
												"C_NAME": "Customer#847742641",
												"C_ADDRESS": "r40gPnR82mDTSxb",
												"C_NATIONKEY": "19",
												"C_ACCTBAL": "8597.61"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "encies. regular warhorses detect carefully. quickly even accounts detect. express theodolites integrate s",
												"C_PHONE": "12-489-411-1617",
												"C_CUSTKEY": "847742642",
												"C_NAME": "Customer#847742642",
												"C_ADDRESS": "WOuB33fjAJOQhu51H4viXp,7uMiMr4F7Q",
												"C_NATIONKEY": "2",
												"C_ACCTBAL": "2090.43"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "idle deposits. fluffily regular packages sleep blithely silent orbits. slyly silent acc",
												"C_PHONE": "23-445-256-7235",
												"C_CUSTKEY": "847742643",
												"C_NAME": "Customer#847742643",
												"C_ADDRESS": "lnc1f1 Zl2P0wwpJ8PRAqNsQtt0Rq,cW",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "8811.71"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": " to the carefully unusual packages wake slyly after the",
												"C_PHONE": "21-647-722-2108",
												"C_CUSTKEY": "847742644",
												"C_NAME": "Customer#847742644",
												"C_ADDRESS": "20n0peY7oIl1thqq 6stEt",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "3531.82"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "packages doze slowly blithely final sauternes? quietly silent requests according ",
												"C_PHONE": "20-248-677-3430",
												"C_CUSTKEY": "847742645",
												"C_NAME": "Customer#847742645",
												"C_ADDRESS": "s0pmN4t11mkKQ BKQosk,H3,F,AnAl5EP",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "1263.62"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "s. fluffily even requests after the foxes",
												"C_PHONE": "11-617-178-4124",
												"C_CUSTKEY": "847742646",
												"C_NAME": "Customer#847742646",
												"C_ADDRESS": "A 1d8NVDnkF3xVbKv",
												"C_NATIONKEY": "1",
												"C_ACCTBAL": "5693.72"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "wake. furiously pending court",
												"C_PHONE": "10-517-958-5639",
												"C_CUSTKEY": "847742647",
												"C_NAME": "Customer#847742647",
												"C_ADDRESS": "0tH,LW8MNBX6r6u1MUTDdeR9Suy9ZVZEVVmx",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "3310.30"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "nal requests. final courts serve. accounts against the regular requests wake according to the sile",
												"C_PHONE": "10-971-896-8570",
												"C_CUSTKEY": "847742648",
												"C_NAME": "Customer#847742648",
												"C_ADDRESS": "yD,l55YDUiyfZMuhytglG6gXlWK6E12KgGh",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "7166.75"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "deas haggle enticingly accounts. slyly pending deposits nag carefully. slyly even accoun",
												"C_PHONE": "31-328-337-2422",
												"C_CUSTKEY": "847742649",
												"C_NAME": "Customer#847742649",
												"C_ADDRESS": "LyHUjvdmwknGGDVJm5BhyCd8D",
												"C_NATIONKEY": "21",
												"C_ACCTBAL": "-452.59"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": "ts? slyly ironic accounts are carefully quickly u",
												"C_PHONE": "28-442-196-6126",
												"C_CUSTKEY": "847742650",
												"C_NAME": "Customer#847742650",
												"C_ADDRESS": "tk8TEjuNgjwLJRtaq,LfRhFraIa",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "3172.87"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "pending platelets are slyly blithely pending pinto beans. special, regul",
												"C_PHONE": "13-151-476-1217",
												"C_CUSTKEY": "847742651",
												"C_NAME": "Customer#847742651",
												"C_ADDRESS": "oHKHSC1Jw7AM mxoEkjK4TViWOoo",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "7353.94"
											},
											{
												"C_MKTSEGMENT": "MACHINERY",
												"C_COMMENT": " are carefully-- ironic theodolites are instead of t",
												"C_PHONE": "28-725-253-5734",
												"C_CUSTKEY": "847742652",
												"C_NAME": "Customer#847742652",
												"C_ADDRESS": "QFp5iOyVn8Zc6f0FCOAXC,NmHbKr",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "-228.18"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "al theodolites. accounts boost furiously unusual excuses. blithely bold theodolites boost regular instruc",
												"C_PHONE": "24-121-108-5011",
												"C_CUSTKEY": "847742653",
												"C_NAME": "Customer#847742653",
												"C_ADDRESS": ",yRcg2Ep8vv5z5nYWO0NvO47OaPEZ6PQWm",
												"C_NATIONKEY": "14",
												"C_ACCTBAL": "1906.67"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ully ironic packages. instructions am",
												"C_PHONE": "22-159-497-8737",
												"C_CUSTKEY": "847742654",
												"C_NAME": "Customer#847742654",
												"C_ADDRESS": "JRE2UMrwYCgHo",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "295.46"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "e courts. slyly final ideas dazzle blithely after the ironic",
												"C_PHONE": "17-259-856-5835",
												"C_CUSTKEY": "847742655",
												"C_NAME": "Customer#847742655",
												"C_ADDRESS": "h0yaXcAMCMQk",
												"C_NATIONKEY": "7",
												"C_ACCTBAL": "2650.40"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "counts wake blithely carefully",
												"C_PHONE": "26-594-132-4866",
												"C_CUSTKEY": "847742656",
												"C_NAME": "Customer#847742656",
												"C_ADDRESS": "G,ZYNuq2FOZyPv 4",
												"C_NATIONKEY": "16",
												"C_ACCTBAL": "4212.40"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "l instructions. regular requests n",
												"C_PHONE": "15-956-556-1979",
												"C_CUSTKEY": "847742657",
												"C_NAME": "Customer#847742657",
												"C_ADDRESS": "laH91SfaHnQx9Sd9WeCdP",
												"C_NATIONKEY": "5",
												"C_ACCTBAL": "-128.66"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ecial foxes haggle outside the dependencies. deposits run slyly around the close accounts. slyly even excuses ",
												"C_PHONE": "22-771-443-7384",
												"C_CUSTKEY": "847742658",
												"C_NAME": "Customer#847742658",
												"C_ADDRESS": "sHZB14I5qzNV",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "2466.28"
											},
											{
												"C_MKTSEGMENT": "BUILDING",
												"C_COMMENT": "ole bold accounts. slyly even requests are furiously outside the slyly regular theodolites. slow ",
												"C_PHONE": "20-472-404-5802",
												"C_CUSTKEY": "847742659",
												"C_NAME": "Customer#847742659",
												"C_ADDRESS": "2lJaQIBicjdkJE0FsS1d2M48AN9ArGi,",
												"C_NATIONKEY": "10",
												"C_ACCTBAL": "756.10"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "ly express platelets after the bravely even deposits cajole carefully quickly unusua",
												"C_PHONE": "23-537-415-8611",
												"C_CUSTKEY": "847742660",
												"C_NAME": "Customer#847742660",
												"C_ADDRESS": "sgs8xKEvPKtk8 2EdM4u5",
												"C_NATIONKEY": "13",
												"C_ACCTBAL": "702.54"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "usily. courts are along the regular, ironic requests. even braids cajole ",
												"C_PHONE": "10-871-155-7526",
												"C_CUSTKEY": "847742661",
												"C_NAME": "Customer#847742661",
												"C_ADDRESS": "c7TsoTb j7PFD3zk22If7",
												"C_NATIONKEY": "0",
												"C_ACCTBAL": "2598.83"
											},
											{
												"C_MKTSEGMENT": "FURNITURE",
												"C_COMMENT": "nts boost slyly express deposits? pending, pending e",
												"C_PHONE": "28-872-607-6285",
												"C_CUSTKEY": "847742662",
												"C_NAME": "Customer#847742662",
												"C_ADDRESS": "BN4nhbRZF2U42uA0rfOMT,Vm7Wmqv",
												"C_NATIONKEY": "18",
												"C_ACCTBAL": "6573.88"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": " theodolites? carefully regular ideas cajole against the furiously specia",
												"C_PHONE": "22-325-138-7808",
												"C_CUSTKEY": "847742663",
												"C_NAME": "Customer#847742663",
												"C_ADDRESS": "hA5ESWZVT6v,t9eD,8zo9dUeP3rCgOpjIwgPDYoY",
												"C_NATIONKEY": "12",
												"C_ACCTBAL": "1246.21"
											},
											{
												"C_MKTSEGMENT": "HOUSEHOLD",
												"C_COMMENT": "pecial deposits around the accounts believe furiously blithely regular pinto beans",
												"C_PHONE": "21-261-747-8651",
												"C_CUSTKEY": "847742664",
												"C_NAME": "Customer#847742664",
												"C_ADDRESS": "0aj99aiz5E6hPPLe",
												"C_NATIONKEY": "11",
												"C_ACCTBAL": "9982.85"
											},
											{
												"C_MKTSEGMENT": "AUTOMOBILE",
												"C_COMMENT": "ts. carefully express accounts according to the deposits snoo",
												"C_PHONE": "13-226-108-9383",
												"C_CUSTKEY": "847742665",
												"C_NAME": "Customer#847742665",
												"C_ADDRESS": "EoeMnt CT,9TjvIdqUsUwZfDjb",
												"C_NATIONKEY": "3",
												"C_ACCTBAL": "7900.29"
											}
										],
										"schema": {
											"C_CUSTKEY": "decimal",
											"C_NAME": "string",
											"C_ADDRESS": "string",
											"C_NATIONKEY": "decimal",
											"C_PHONE": "string",
											"C_ACCTBAL": "decimal",
											"C_MKTSEGMENT": "string",
											"C_COMMENT": "string"
										}
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"C_NAME"
											],
											"seriesFieldKeys": [
												"C_CUSTKEY"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/accsparkpools",
						"name": "accsparkpools",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/accsparkpools",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 16,
						"memory": 112
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"TokenLibrary.help()"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val keyVaultName = \"accvault1\";\r\n",
							"val secretName = \"accbbstore\";"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							" import com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\r\n",
							" val secret = TokenLibrary.getSecret(keyVaultName, secretName)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"mssparkutils.credentials.help()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							" val secret = mssparkutils.credentials.getSecret(keyVaultName, secretName)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val sc = spark.sparkContext\r\n",
							"spark.conf.set(\"spark.storage.synapse.linkedServiceName\", \"accvault1\")\r\n",
							"spark.conf.set(\"fs.azure.account.oauth.provider.type\", \"com.microsoft.azure.synapse.tokenlibrary.LinkedServiceBasedTokenProvider\")\r\n",
							"\r\n",
							"val df = spark.read.csv(\"abfss://tpchdata@accbbstore.dfs.core.windows.net/CUSTOMER/*.parquet\")\r\n",
							"\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val blobsecret = \"accbbstore\"\r\n",
							"//val accbbstorekey = dbutils.secrets.get(scope = \"allsecrects\", key = \"accbbstore\")\r\n",
							"val accbbstorekey = mssparkutils.credentials.getSecret(keyVaultName, blobsecret)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.conf.set(\r\n",
							"  \"fs.azure.account.key.accbbstore.blob.core.windows.net\",\r\n",
							"  accbbstorekey)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val customer = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/CUSTOMER/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(customer)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW customer\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/CUSTOMER/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val lineitem = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/LINEITEM/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW lineitem\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/LINEITEM/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val nation = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/NATION/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW nation\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/NATION/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val orders = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/ORDERS/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW orders\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/ORDERS/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val part = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/PART/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW part\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/PART/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val partsupp = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/PARTSUPP/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW partsupp\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/PARTSUPP/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val region = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/REGION/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW region\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/REGION/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val supplier = spark.read.parquet(\"wasbs://tpchdata@accbbstore.blob.core.windows.net/SUPPLIER/*.parquet\")"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"CREATE TEMPORARY VIEW supplier\r\n",
							"USING org.apache.spark.sql.parquet\r\n",
							"OPTIONS (\r\n",
							"  path \"wasbs://tpchdata@accbbstore.blob.core.windows.net/SUPPLIER/*.parquet\"\r\n",
							")"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"select\r\n",
							"       l_returnflag,\r\n",
							"       l_linestatus,\r\n",
							"       sum(l_quantity) as sum_qty,\r\n",
							"       sum(l_extendedprice) as sum_base_price,\r\n",
							"       sum(l_extendedprice * (1-l_discount)) as sum_disc_price,\r\n",
							"       sum(l_extendedprice * (1-l_discount) * (1+l_tax)) as sum_charge,\r\n",
							"       avg(l_quantity) as avg_qty,\r\n",
							"       avg(l_extendedprice) as avg_price,\r\n",
							"       avg(l_discount) as avg_disc,\r\n",
							"       count(*) as count_order\r\n",
							" from\r\n",
							"       lineitem\r\n",
							" where\r\n",
							"       l_shipdate <= date_add(to_date('1998-12-01'), -90)\r\n",
							" group by\r\n",
							"       l_returnflag,\r\n",
							"       l_linestatus\r\n",
							" order by\r\n",
							"       l_returnflag,\r\n",
							"       l_linestatus"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": true
						},
						"source": [
							"%%sql\r\n",
							"Select \r\n",
							"       a.l_returnflag,\r\n",
							"       a.l_linestatus,\r\n",
							"       sum(a.l_quantity) as sum_qty,\r\n",
							"       sum(a.l_extendedprice) as sum_base_price,\r\n",
							"       sum(a.l_extendedprice * (1-a.l_discount)) as sum_disc_price,\r\n",
							"       sum(a.l_extendedprice * (1-a.l_discount) * (1+a.l_tax)) as sum_charge,\r\n",
							"       avg(a.l_quantity) as avg_qty,\r\n",
							"       avg(a.l_extendedprice) as avg_price,\r\n",
							"       avg(a.l_discount) as avg_disc,\r\n",
							"       count(*) as count_order\r\n",
							"from \r\n",
							"lineitem a join orders b on a.L_ORDERKEY = b.O_ORDERKEY \r\n",
							"join customer c on b.O_CUSTKEY = c.C_CUSTKEY\r\n",
							"join partsupp d on a.L_SUPPKEY = d.PS_SUPPKEY\r\n",
							"join part e on d.PS_PARTKEY = e.P_PARTKEY\r\n",
							"join supplier f on d.PS_SUPPKEY = f.S_SUPPKEY\r\n",
							"join nation g on f.S_NATIONKEY = g.N_NATIONKEY\r\n",
							"join region h on g.N_REGIONKEY = h.R_REGIONKEY\r\n",
							" where\r\n",
							"       a.l_shipdate <= date_add(to_date('1998-12-01'), -90)\r\n",
							" group by\r\n",
							"       a.l_returnflag,\r\n",
							"       a.l_linestatus\r\n",
							" order by\r\n",
							"       a.l_returnflag,\r\n",
							"       a.l_linestatus"
						],
						"outputs": [],
						"execution_count": 50
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/winedatamodel')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "AzureML"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "[parameters('winedatamodel_properties_bigDataPool_referenceName')]",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "112g",
					"driverCores": 16,
					"executorMemory": "112g",
					"executorCores": 16,
					"numExecutors": 5,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "5",
						"spark.dynamicAllocation.maxExecutors": "5"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/c46a9435-c957-4e6c-a0f4-b9a597984773/resourceGroups/accenture/providers/Microsoft.Synapse/workspaces/bbaccsynapse/bigDataPools/mlspark3xlarge",
						"name": "mlspark3xlarge",
						"type": "Spark",
						"endpoint": "https://bbaccsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mlspark3xlarge",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.0",
						"nodeCount": 10,
						"cores": 64,
						"memory": 400
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"fixed acidity"
									],
									"values": [
										"fixed acidity"
									],
									"yLabel": "fixed acidity",
									"xLabel": "fixed acidity",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"fixed acidity\":{\"11.2\":1,\"7.3\":1,\"7.4\":3,\"7.5\":1,\"7.8\":3,\"7.9\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\n",
							"red_winedf = spark.read.option(\"delimiter\", \";\").option(\"header\",\"true\").load('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/winedata/winequality-red.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							"##, header=True\n",
							")\n",
							"display(red_winedf.limit(10))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"import cloudpickle"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"fixed acidity"
									],
									"values": [
										"fixed acidity"
									],
									"yLabel": "fixed acidity",
									"xLabel": "fixed acidity",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"fixed acidity\":{\"7\":2,\"6.2\":1,\"6.3\":2,\"7.2\":2,\"8.1\":3}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\n",
							"white_winedf = spark.read.option(\"delimiter\", \";\").option(\"header\",\"true\").load('abfss://synapseroot@accsynapsestorage.dfs.core.windows.net/winedata/winequality-white.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							"##, header=True\n",
							")\n",
							"display(white_winedf.limit(10))"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"red_wine = red_winedf.select(\"*\").toPandas()\n",
							"white_wine = white_winedf.select(\"*\").toPandas()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"import pandas as pd"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"red_wine['is_red'] = 1\n",
							"white_wine['is_red'] = 0"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"data = pd.concat([red_wine, white_wine], axis=0)\n",
							"\n",
							"# Remove spaces from column names\n",
							"data.rename(columns=lambda x: x.replace(' ', '_'), inplace=True)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"source": [
							"data.head()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"import seaborn as sns\n",
							"sns.histplot(data.quality, kde=False)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"data.info()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"high_quality = (data.quality.astype(int) >= 7).astype(int)\n",
							"data.quality = high_quality"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\n",
							"\n",
							"dims = (3, 4)\n",
							"\n",
							"f, axes = plt.subplots(dims[0], dims[1], figsize=(25, 15))\n",
							"axis_i, axis_j = 0, 0\n",
							"for col in data.columns:\n",
							"  if col == 'is_red' or col == 'quality':\n",
							"    continue # Box plots cannot be used on indicator variables\n",
							"  sns.boxplot(x=high_quality, y=data[col], ax=axes[axis_i, axis_j])\n",
							"  axis_j += 1\n",
							"  if axis_j == dims[1]:\n",
							"    axis_i += 1\n",
							"    axis_j = 0"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [
							"data.isna().any()"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"source": [
							"from sklearn.model_selection import train_test_split\n",
							"\n",
							"train, test = train_test_split(data, random_state=123)\n",
							"X_train = train.drop([\"quality\"], axis=1)\n",
							"X_test = test.drop([\"quality\"], axis=1)\n",
							"y_train = train.quality\n",
							"y_test = test.quality"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"import mlflow\n",
							"import mlflow.pyfunc\n",
							"import mlflow.sklearn\n",
							"import numpy as np\n",
							"import sklearn\n",
							"from sklearn.ensemble import RandomForestClassifier\n",
							"from sklearn.metrics import roc_auc_score\n",
							"from mlflow.models.signature import infer_signature\n",
							"from mlflow.utils.environment import _mlflow_conda_env\n",
							"\n",
							"# The predict method of sklearn's RandomForestClassifier returns a binary classification (0 or 1). \n",
							"# The following code creates a wrapper function, SklearnModelWrapper, that uses \n",
							"# the predict_proba method to return the probability that the observation belongs to each class. \n",
							"\n",
							"class SklearnModelWrapper(mlflow.pyfunc.PythonModel):\n",
							"  def __init__(self, model):\n",
							"    self.model = model\n",
							"    \n",
							"  def predict(self, context, model_input):\n",
							"    return self.model.predict_proba(model_input)[:,1]\n",
							"\n",
							"# mlflow.set_tracking_uri(\"azureml\")\n",
							"# mlflow.set_tracking_uri(\"sqlite:////tmp/mlruns.db\")\n",
							"# mlflow.set_tracking_uri(\"file:///tmp/my_tracking\")\n",
							"experiment_name = \"/Shared/wine_experiment/\"\n",
							"mlflow.set_experiment(experiment_name)\n",
							"# mlflow.start_run creates a new MLflow run to track the performance of this model. \n",
							"# Within the context, you call mlflow.log_param to keep track of the parameters used, and\n",
							"# mlflow.log_metric to record metrics like accuracy.\n",
							"with mlflow.start_run(run_name='untuned_random_forest'):\n",
							"  n_estimators = 10\n",
							"  model = RandomForestClassifier(n_estimators=n_estimators, random_state=np.random.RandomState(123))\n",
							"  model.fit(X_train, y_train)\n",
							"\n",
							"  # predict_proba returns [prob_negative, prob_positive], so slice the output with [:, 1]\n",
							"  predictions_test = model.predict_proba(X_test)[:,1]\n",
							"  auc_score = roc_auc_score(y_test, predictions_test)\n",
							"  mlflow.log_param('n_estimators', n_estimators)\n",
							"  # Use the area under the ROC curve as a metric.\n",
							"  mlflow.log_metric('auc', auc_score)\n",
							"  wrappedModel = SklearnModelWrapper(model)\n",
							"  # Log the model with a signature that defines the schema of the model's inputs and outputs. \n",
							"  # When the model is deployed, this signature will be used to validate inputs.\n",
							"  signature = infer_signature(X_train, wrappedModel.predict(None, X_train))\n",
							"  \n",
							"  # MLflow contains utilities to create a conda environment used to serve models.\n",
							"  # The necessary dependencies are added to a conda.yaml file which is logged along with the model.\n",
							"  conda_env =  _mlflow_conda_env(\n",
							"        additional_conda_deps=None,\n",
							"        additional_pip_deps=[\"cloudpickle=={}\".format(cloudpickle.__version__), \"scikit-learn=={}\".format(sklearn.__version__)],\n",
							"        additional_conda_channels=None,\n",
							"    )\n",
							"  mlflow.pyfunc.log_model(\"random_forest_model\", python_model=wrappedModel, conda_env=conda_env, signature=signature)"
						],
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "code",
						"source": [
							"mlflow.end_run()"
						],
						"outputs": [],
						"execution_count": 53
					},
					{
						"cell_type": "code",
						"source": [
							"feature_importances = pd.DataFrame(model.feature_importances_, index=X_train.columns.tolist(), columns=['importance'])\n",
							"feature_importances.sort_values('importance', ascending=False)"
						],
						"outputs": [],
						"execution_count": 55
					},
					{
						"cell_type": "code",
						"source": [
							"run_id = mlflow.search_runs(filter_string='tags.mlflow.runName = \"untuned_random_forest\"').iloc[0].run_id"
						],
						"outputs": [],
						"execution_count": 56
					},
					{
						"cell_type": "code",
						"source": [
							"print(run_id)"
						],
						"outputs": [],
						"execution_count": 57
					},
					{
						"cell_type": "code",
						"source": [
							"tracking_uri = mlflow.get_tracking_uri()\n",
							"print(\"Current tracking uri: {}\".format(tracking_uri))"
						],
						"outputs": [],
						"execution_count": 58
					},
					{
						"cell_type": "code",
						"source": [
							"artifact_uri = mlflow.get_artifact_uri()\n",
							"print(\"Artifact uri: {}\".format(artifact_uri))"
						],
						"outputs": [],
						"execution_count": 59
					},
					{
						"cell_type": "code",
						"source": [
							"print(run_id)"
						],
						"outputs": [],
						"execution_count": 60
					},
					{
						"cell_type": "code",
						"source": [
							"model_name = \"wine_quality\"\n",
							"model_version = mlflow.register_model(\"runs:/{}/sklearn-model\".format(run_id), model_name)\n",
							"# model_version = mlflow.register_model(artifact_uri, model_name)"
						],
						"outputs": [],
						"execution_count": 62
					},
					{
						"cell_type": "code",
						"metadata": {
							"inputCollapsed": true
						},
						"source": [
							"from mlflow.tracking import MlflowClient\n",
							"\n",
							"client = MlflowClient()\n",
							"client.transition_model_version_stage(\n",
							"  name=model_name,\n",
							"  version=model_version.version,\n",
							"  stage=\"Production\",\n",
							")"
						],
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/accsynapsepools')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}