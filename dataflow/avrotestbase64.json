{
	"name": "avrotestbase64",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "evtcaptureinput",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "avroparseoutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Parse1"
				}
			],
			"script": "source(output(\n\t\tSequenceNumber as long,\n\t\tOffset as string,\n\t\tEnqueuedTimeUtc as string,\n\t\tSystemProperties as string,\n\t\tProperties as string,\n\t\tBody as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tSequenceNumber,\n\t\tOffset,\n\t\tEnqueuedTimeUtc,\n\t\tSystemProperties,\n\t\tProperties,\n\t\tBody\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(BodyNew = toString(Body)) ~> DerivedColumn1\nDerivedColumn1 parse(json = Body ? (applicationId as string,\n\t\tmessageSource as string,\n\t\tdeviceId as string,\n\t\tschema as string,\n\t\ttemplateId as string,\n\t\tenqueuedTime as string,\n\t\ttelemetry as (gyroscope as (z as float,\n\t\tx as float,\n\t\ty as float),\n\t\taccelerometer as (z as float,\n\t\tx as float,\n\t\ty as float),\n\t\thumidity as float,\n\t\ttemperature as float,\n\t\tpressure as float,\n\t\tmagnetometer as (z as float,\n\t\tx as float,\n\t\ty as float)),\n\t\tmessageProperties as (messageProp as string),\n\t\tenrichments as (userSpecifiedKey as string)),\n\tformat: 'json',\n\tdocumentForm: 'arrayOfDocuments') ~> Parse1\nParse1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['avrooutput.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}